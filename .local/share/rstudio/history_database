1633315811635:3 + 3
1633315823014:20 * 3
1633315829196:20 / 4
1633315839715:20 - 4
1633315861432:a <- 3
1633315867161:a + 2
1633316464027:b <- 4
1633316488881:c = 6
1633316515017:b -> c
1633316655212:c -> a
1633316675704:a -> 5
1633316686125:a <- 5
1633316695512:a -> c
1633316709551:a <- b
1633317316414:cars
1633317322028:a <- cars
1633317327687:View(a)
1633317378691:knitr::opts_chunk$set(echo = TRUE)
1633317378879:summary(cars)
1633317542936:View(cars)
1633317566703:b <- cars
1633317572003:b
1633317586767:View(b)
1633317591494:View(a)
1633317648449:cars$speed
1633317761561:cars$speed[44]
1633317840826:View(diamonds)
1633318099694:```{r diamonds
1633318099781:summary(diamonds)
1633318099788:diamonds
1633318099795:}
1633318169237:library(ggplot2)
1633318177874:View(diamonds)
1633318192294:diamonds$color
1633318206270:diamonds$color[768]
1633318285122:median(depth)
1633318371544:median(x)
1633318459195:median(diamonds$table)
1633656995504:cars
1633657078465:library(ggplot2)
1633657089814:view(diamonds)
1633657095358:View(diamonds)
1633657272562:diamonds$x
1633657291178:median(diamonds$x)
1633668449471:me <- "Isabella"
1633668460542:a <- 3
1633668468678:b <- 3L
1633668493231:right <- TRUE
1633668522581:list(me, a, b)
1633668527925:me
1633668529547:a
1633668530916:b
1633668542668:a <- 3.0
1633668547593:b <- 3.7L
1633668551155:a
1633668741996:knitr::opts_chunk$set(echo = TRUE)
1633668742236:what <-class(me)
1633668751510:what
1633668769975:whatvariable
1633668778489:whatvariable <-class(me)
1633668784788:whatvariable
1633669754252:c5 <- c(NA, TRUE)
1633669764740:str(c1)
1633669773084:c1
1633669779900:c1 <- c(1, NA+1L, "C")
1633669783269:c2 <- c(1L / 0, NA)
1633669783928:c3 <- c(1:3, 5)
1633669784659:c4 <- c(3L, NaN+1L)
1633669788205:c5 <- c(NA, TRUE)
1633669794286:str(c1)
1633669816831:str(c2)
1633669829485:str(c3)
1633669852831:str(c4)
1633669875150:str(c5)
1633669970693:class(c1)
1633671702116:remotes::install_github("ucbds-infra/ottr")
1633673707287:var_30 <- 30
1633673721336:true_var <- TRUE
1633673865976:knitr::opts_chunk$set(echo = TRUE)
1633673866238:true_var <- 5 < 6
1633673873444:var_30 <- 15 + 15
1633673886516:var_30
1633673890772:true_var
1633673953113:print(true_var)
1633673963403:var_30 <- 15 + 15
1633673963417:true_var <- 5 < 6
1633673981475:var_30 <- 15 + 15
1633673981489:true_var <- 5 < 6
1633673981499:print(var_30)
1633673981517:print(true_var)
1633674120968:var_30 <- 15 + 15
1633674120981:true_var <- 5 < 6
1633674120992:print(var_30)
1633674121009:print(true_var)
1633674121029:paste(var_30, true_var)
1633675542008:cat_lovers |> summarise(mean = mean(number_of_cats))
1633680501505:library(tidyverse)
1633680643282:bike <- read_csv2("https://raw.githubusercontent.com/COGS137/datasets/main/nc_bike_crash.csv",
1633680643290:na = c("NA", "", "."))
1633680983102:?read_csv2
1633681080457:names(bike)
1633681093967:glimpse(bike)
1633681106767:View(bike)
1633681443529:bike |> filter(County == “Durham”)
1633681466893:bike |>
1633681481048:filter(County == "Durham")
1633694898964:library(tidyverse)
1633694907790:?storms
1633695064122:glimpse(storms)
1633695112596:View(storms)
1633695283675:distinct(storms)
1633695333552:unique_hurricanes <- distinct(storms)
1633695348007:View(unique_hurricanes)
1633695608754:View(dyplr)
1633695894134:storms |>
1633696257623:distinct(storms, name)
1633696305400:View(storms)
1633696398671:storms |>
1633696404184:distinct(storms)
1633696425831:storms |>
1633696430280:distinct(name)
1633696731326:storms |>
1633696752404:select(status, "hurricane")
1633696812164:storms |
1633696822467:h
1633696831879:storms |>
1633696857903:filter(status == "hurricane")
1633696911944:hurricane <- storms |> filter(status == hurricane)
1633696934165:hurricane <- storms |>
1633696945117:filter(status == "hurricane")
1633696982199:distinct(hurricane, name)
1633697029093:View(hurricane)
1633697103183:unique_hurricane <- distinct(hurricane, name)
1633697112649:View(unique_hurricane)
1633697171902:unique_hurricane <- distinct(hurricane, name, .keep_all = TRUE)
1633697217635:unique_hurricane <- distinct(hurricane, name)
1633697229726:unique_hurricane <- distinct(hurricane, name, .keep_all = TRUE)
1633697440525:print(length(unique_hurricane))
1633697588980:ncol(unique_hurricane)
1633697613000:nrow(unique_hurricane)
1633697655751:print("The number of unique hurricanes is", nrow(unique_hurricane))
1633697672955:print("The number of unique hurricanes is", "nrow(unique_hurricane)")
1633697735613:print("The number of unique hurricanes is:")
1633697735621:print (nrow(unique_hurricane))
1633697993138:number <- nrow(unique_hurricane)
1633698056915:print("The number of unique hurricanes is:", number)
1633698089131:c("the number of hurricanes is:", number)
1633698124309:output <- c("the number of hurricanes is:", number)
1633698134182:print(c)
1633698142899:print(output)
1633698243638:output <- cat("the number of hurricanes is:", number)
1633698258056:print(output)
1633698284239:cat("the number of hurricanes is:", number)
1633698350840:hurricane <- storms |>
1633698350852:+ filter(status == "hurricane")
1633698368309:hurricane <- storms |>
1633698368318:filter(status == "hurricane")
1633698368350:unique_hurricane <- distinct(hurricane, name, .keep_all = TRUE)
1633698368381:number <- nrow(unique_hurricane)
1633698368415:cat("the number of hurricanes is:", number)
1633698486591:hurricane <- storms |>
1633698486603:filter(status == "hurricane")
1633698486648:unique_hurricane <- distinct(hurricane, name, .keep_all = TRUE)
1633698486691:number <- nrow(unique_hurricane)
1633698486712:cat("the number of unique hurricanes is:", number)
1633698491905:hurricane <- storms |>
1633698491916:filter(status == "hurricane")
1633698491962:unique_hurricane <- distinct(hurricane, name, .keep_all = TRUE)
1633698491997:number <- nrow(unique_hurricane)
1633698492014:cat("the number of unique hurricanes is", number)
1633698503952:hurricane <- storms |>
1633698503965:filter(status == "hurricane")
1633698504009:unique_hurricane <- distinct(hurricane, name, .keep_all = TRUE)
1633698504045:number <- nrow(unique_hurricane)
1633698504066:cat("The number of unique hurricanes is", number)
1633698602430:View(storms)
1633699037188:tropical_storms <- storms |>
1633699051067:filter(status == "tropical storm")
1633699066764:View(tropical storms)
1633699082102:View(tropical_storms)
1633699277398:View(storms)
1633699674107:max(tropical depression, ts_diameter)
1633699698174:max(tropical_storms, ts_diameter)
1633699711925:tropical storms |>
1633699719214:tropical_storms |>
1633699727807:max(ts_diameter)
1633699871091:tropical_storms$ts_diameter
1633699891427:max(tropical_storms$ts_diameter)
1633700017746:class(ts_diameter)
1633700033659:class("ts_diameter")
1633700058377:View(ts_diameter)
1633700665130:tropical_storms <- tropical storms |>
1633700675769:tropical_storms <- tropical_storms |>
1633700696170:filter(ts_diameter != NA)
1633700753724:View(tropical_storms)
1633700789976:tropical_storms <- storms |>
1633700812908:filter(status == "tropical storm")
1633701149535:tropical_storms |>
1633701170566:drop_na(ts_diameter)
1633701240985:View(tropical_storms)
1633701326774:tropical_storms <- tropical_storms |>
1633701396555:mutate(drop_na(ts_diameter))
1633701486936:newtsdiameter <- tropical_storms |>
1633701504674:drop_na(ts_diameter)
1633701535251:tropical_storms <- tropical_storms |>
1633701683863:f
1633701695404:tropical_storms |>
1633701708137:drop_na(ts_diameter)
1633701841756:tropical_storms |>
1633701863824:filter(!is.na(ts_diameter))
1633701937394:tropical_storm2 <- tropical_storms |>
1633701953372:drop_na(ts_diameter)
1633701965869:tropical storm <- tropical_storm2
1633701979659:tropical_storm <- tropical_storm2
1633702006589:tropical_storm2 <- tropical_storms |>
1633702013759:drop_na(ts_diameter)
1633702027278:View(tropical_storm2)
1633702048091:tropical_storm <- tropical_storm2
1633702054732:View(tropical_storm)
1633702080238:tropical_storm <- tropcial_storm |>
1633702096793:max(ts_diameter)
1633702117620:tropical_storm <- tropical_storm |>
1633702122002:max(ts_diameter)
1633702134715:tropical_storm |>
1633702156252:max(tropical_storm$ts_diameter)
1633702165411:max(tropical_storm$ts_diameter)
1633702407173:largest_area <- tropical_storm |>
1633702429866:filter(ts_diameter == 724.9914)
1633702438100:print(largest_area)
1633703248668:largest area <- max(tropical_storm$ts_diameter)
1633703258322:largest_area <- max(tropical_storm$ts_diameter)
1633703340888:print(largest_area)
1633703428554:nameofstorm <- tropical storm |>
1633703439474:nameofstorm <- tropical_storm |>
1633703464666:filter(ts_diameter == max(tropical_storm$ts_diameter))
1633703491005:print(nameodstorm)
1633703502729:print(nameofstorm)
1633703727221:last <- distinct(nameofstorm, name, .keep_all = TRUE)
1633703735193:print(last)
1633703780130:print(last$name)
1633703957271:nameofstorm <- tropical_storm |>
1633703987831:distinct(filter(ts_diameter == max(tropical_storm$ts_diameter)), name, .keep_all = TRUE)
1633704067410:nameofstorm <- tropical_storm |>
1633704075468:h
1633704082512:nameofstorm <- tropical_storms |>
1633704108697:distinct(filter(ts_diameter == max(tropical_storms$ts_diameter)), name, .keep_all = TRUE)
1633704298111:View(tropical_storms)
1633704396054:tropical_storms <- storms |>
1633704396063:+ filter(status == "tropical storm")
1633704396078:tropical_storm2 <- tropical_storms |>
1633704396085:+ drop_na(ts_diameter)
1633704396097:tropical_storms <- tropical_storm2
1633704396110:nameofstorm <- tropical_storm |>
1633704396117:filter(ts_diameter == max(tropical_storm$ts_diameter))
1633704396140:last <- distinct(nameofstorm, name, .keep_all = TRUE)
1633704413338:tropical_storms <- storms |>
1633704413347:+ filter(status == "tropical storm")
1633704424645:tropical_storms <- storms |>
1633704424655:+ filter(status == "tropical storm")
1633704436066:tropical_storms <- storms |>
1633704436076:filter(status == "tropical storm")
1633704440333:tropical_storm2 <- tropical_storms |>
1633704440343:drop_na(ts_diameter)
1633704441122:tropical_storms <- tropical_storm2
1633704441873:nameofstorm <- tropical_storm |>
1633704441882:filter(ts_diameter == max(tropical_storm$ts_diameter))
1633704442707:last <- distinct(nameofstorm, name, .keep_all = TRUE)
1633704454989:View(tropical_storm)
1633704538773:tropical_storm <- tropical_storm |>
1633704578092:filter(name == "sandy")
1633704588507:View(tropical_storm)
1633704617444:tropical_storms <- storms |>
1633704617453:filter(status == "tropical storm")
1633704617890:tropical_storm2 <- tropical_storms |>
1633704617900:drop_na(ts_diameter)
1633704618306:tropical_storms <- tropical_storm2
1633704618866:nameofstorm <- tropical_storm |>
1633704618876:filter(ts_diameter == max(tropical_storm$ts_diameter))
1633704665456:nameofstorm <- tropical_storm |>
1633704665466:filter(ts_diameter == max(tropical_storm$ts_diameter))
1633704676326:print(nameofstorm)
1633704759386:nameofstorm <- tropical_storms |>
1633704759396:filter(ts_diameter == max(tropical_storm$ts_diameter))
1633705327883:tropical_storm <- storms |>
1633705327893:filter(status == "tropical storm")
1633705332923:tropical_storm2 <- tropical_storm |>
1633705332932:drop_na(ts_diameter)
1633705334488:tropical_storm <- tropical_storm2
1633705335709:nameofstorm <- tropical_storm |>
1633705335720:filter(ts_diameter == max(tropical_storms$ts_diameter))
1633705337737:last <- distinct(nameofstorm, name, .keep_all = TRUE)
1633705338581:print(c("Tropical storm", last$name, "affected the largest area covering", ))
1633705365382:View(tropical_storm)
1633705383225:tropical_storm <- tropical_storm |>
1633705444732:filter(name == "Sandy")
1633705479587:max(tropical_storm$wind)
1633705558544:tropical_storm <- storms |>
1633705558554:filter(status == "tropical storm")
1633705560369:tropical_storm2 <- tropical_storm |>
1633705560379:drop_na(ts_diameter)
1633705561425:tropical_storm <- tropical_storm2
1633705562293:nameofstorm <- tropical_storm |>
1633705562302:filter(ts_diameter == max(tropical_storms$ts_diameter))
1633705563416:last <- distinct(nameofstorm, name, .keep_all = TRUE)
1633705564627:tropical_storm <- tropical_storm |>
1633705564636:filter(name == "Sandy")
1633705567890:print(c("Tropical storm", last$name, "affected the largest area covering", max(tropical_storm$wind)))
1633705663186:cat ("Tropical storm", last$name, "affected the largest area covering", max(tropical_storms$ts_diameter), max(tropical_storm$wind))
1633705758349:cat ("Tropical storm", last$name, "affected the largest area covering", max(tropical_storms$ts_diameter), "miles with winds up to" max(tropical_storm$wind), "mph")
1633705772338:cat ("Tropical storm", last$name, "affected the largest area covering", max(tropical_storms$ts_diameter), "miles with winds up to", max(tropical_storm$wind), "mph")
1633705820993:cat ("Tropical storm", last$name, "affected the largest area, having a diameter. of", max(tropical_storms$ts_diameter), "with winds up to", max(tropical_storm$wind), "knots")
1633705849215:cat ("Tropical storm", last$name, "affected the largest area, having a diameter of", max(tropical_storms$ts_diameter), "with winds up to", max(tropical_storm$wind), "knots.")
1633705917203:cat ("Tropical storm", last$name, "affected the largest area, having a diameter of", max(tropical_storms$ts_diameter), "with maximum sustained winds of", max(tropical_storm$wind), "knots.")
1633706003630:tropical_storm <- storms |>
1633706003643:filter(status == "tropical storm")
1633706003705:tropical_storm2 <- tropical_storm |>
1633706003717:drop_na(ts_diameter)
1633706003770:tropical_storm <- tropical_storm2
1633706003806:nameofstorm <- tropical_storm |>
1633706003818:filter(ts_diameter == max(tropical_storms$ts_diameter))
1633706003865:last <- distinct(nameofstorm, name, .keep_all = TRUE)
1633706003906:tropical_storm <- tropical_storm |>
1633706003918:filter(name == "Sandy")
1633706003965:cat ("Tropical storm", last$name, "affected the largest area, having a diameter of", max(tropical_storms$ts_diameter), "with maximum sustained winds of", max(tropical_storm$wind), "knots.")
1633726567793:library(tidyverse)
1633726658046:mode <- function(month){which.max(tabulate(month))}
1633726677633:mode(month)
1633726686278:print(mode)
1633726720814:function(storms){which.max(tabulate(storms))}
1633726766177:mode <- function(storms){which.max(tabulate(storms))}
1633726776955:mode(storms$month)
1633729396196:cat("The most common month for storms is", mode(storms$month), ":September")
1633729416542:cat("The most common month for storms is month #", mode(storms$month), ",September")
1633729464053:statusofstorm <- storms |>
1633729473345:filter(month == 9)
1633729476764:View(statusofstorm)
1633729514049:statusofstorm <- statusofstorms |>
1633729565528:distinct(name, .keep_all = TRUE)
1633729582908:statusofstorm <- statusofstorm |>
1633729582917:distinct(name, .keep_all = TRUE)
1633729763479:statusmode <- function(statusofstorm){which.max(tabulate(statusofstorm))}
1633729779363:mode(statusofstorm$status)
1633729848471:c(statusofstorm$status)
1633729899861:temp <- c(statusofstorm$status)
1633729903234:View(temp)
1633729988473:summarise(statusofstorm)
1633730019037:View(statusofstorm)
1633730095017:statusofstorm |>
1633730104217:count(status)
1633730218647:statusofstorm |>
1633730218656:print(count(status))
1633730238380:statusofstorm |>
1633730238389:(count(status))
1633730243403:statusofstorm |>
1633730243411:count(status))
1633730248270:statusofstorm |>
1633730248279:count(status)
1633730328955:print(status[2])
1633730345977:statusofstorm |>
1633730383385:mode <- function(storms){which.max(tabulate(storms))}
1633730409837:storms |> mode <- function(storms){which.max(tabulate(storms))}
1633730431945:mode <- function(storms){which.max(tabulate(storms))}
1633730434617:mode <- function(storms){which.max(tabulate(storms))}
1633730434629:> mode(storms$month)
1633730443972:mode <- function(storms){which.max(tabulate(storms))}
1633730443987:mode(storms$month)
1633730444011:cat("The most common month for storms is month #", mode(storms$month), ",September")
1633730444051:statusofstorm <- storms |>
1633730444061:filter(month == 9)
1633730444125:statusofstorm <- statusofstorms |>
1633730444132:distinct(name, .keep_all = TRUE)
1633730452671:mode <- function(storms){which.max(tabulate(storms))}
1633730452682:mode(storms$month)
1633730452704:cat("The most common month for storms is month #", mode(storms$month), ",September")
1633730452740:statusofstorm <- storms |>
1633730452749:filter(month == 9)
1633730452794:statusofstorm <- statusofstorm |>
1633730452803:distinct(name, .keep_all = TRUE)
1633730452841:statusofstorm |>
1633730452850:count(status)
1633730452890:print("The most common storm in the month of september is a tropical depression")
1633730476416:mode <- function(storms){which.max(tabulate(storms))}
1633730476428:mode(storms$month)
1633730476451:cat("The most common month for storms is month #", mode(storms$month), ",September")
1633730476487:statusofstorm <- storms |>
1633730476497:filter(month == 9)
1633730476537:statusofstorm <- statusofstorm |>
1633730476545:distinct(name, .keep_all = TRUE)
1633730476574:statusofstorm |>
1633730476582:count(status)
1633730476620:print(The most common storm in the month of september is a tropical depression)
1633730498608:print("The most common storm in the month of september is a tropical depression")
1633730515814:cat("The most common storm in the month of september is a tropical depression")
1633730521583:mode <- function(storms){which.max(tabulate(storms))}
1633730521596:mode(storms$month)
1633730521618:cat("The most common month for storms is month #", mode(storms$month), ",September")
1633730521655:statusofstorm <- storms |>
1633730521665:filter(month == 9)
1633730521701:statusofstorm <- statusofstorm |>
1633730521710:distinct(name, .keep_all = TRUE)
1633730521745:statusofstorm |>
1633730521755:count(status)
1633730521801:cat("The most common storm in the month of september is a tropical depression")
1633730544923:mode <- function(storms){which.max(tabulate(storms))}
1633730544946:cat("The most common month for storms is month #", mode(storms$month), ",September")
1633730544978:statusofstorm <- storms |>
1633730544988:filter(month == 9)
1633730545026:statusofstorm <- statusofstorm |>
1633730545036:distinct(name, .keep_all = TRUE)
1633730545071:statusofstorm |>
1633730545080:count(status)
1633730545129:cat("The most common storm in the month of september is a tropical depression")
1633730573956:mode <- function(storms){which.max(tabulate(storms))}
1633730573977:cat("The most common month for storms is month #", mode(storms$month), ",September")
1633730574006:statusofstorm <- storms |>
1633730574017:filter(month == 9)
1633730574053:statusofstorm <- statusofstorm |>
1633730574063:distinct(name, .keep_all = TRUE)
1633730574097:statusofstorm |>
1633730574108:count(status)
1633730574148:cat("
1633730574158:The most common storm in the month of september is a tropical depression")
1633730587248:mode <- function(storms){which.max(tabulate(storms))}
1633730587268:cat("The most common month for storms is month #", mode(storms$month), ",September")
1633730587294:statusofstorm <- storms |>
1633730587308:filter(month == 9)
1633730587345:statusofstorm <- statusofstorm |>
1633730587354:distinct(name, .keep_all = TRUE)
1633730587387:statusofstorm |>
1633730587396:count(status)
1633730587434:cat("
1633730587451:The most common storm in the month of september is a tropical depression")
1633730708791:cat5storms <- storms |>
1633730719070:filter(category == 5)
1633730736096:View(cat5storms)
1633730760505:cat5storms <- cat5storms |>
1633730776016:distinct(name, .keep_all = TRUE)
1633730931558:cat5stroms <- cat5storms |>
1633730951953:select(name, year, status)
1633730976739:cat5storms <- cat5storms |>
1633731015022:filter(year >= 2000)
1633731050932:cat5storms <- cat5storms |>
1633731073389:select(name, year, status)
1633731127817:cat5storms <- storms |>
1633731127828:filter(category == 5)
1633731127867:cat5storms <- cat5storms |>
1633731127889:distinct(name, .keep_all = TRUE)
1633731127920:cat5storms <- cat5storms |>
1633731127928:filter(year >= 2000)
1633731127958:cat5storms <- cat5storms |>
1633731127967:select(name, year, status)
1633731146379:cat5storms <- storms |>
1633731146390:filter(category == 5)
1633731146424:cat5storms <- cat5storms |>
1633731146436:distinct(name, .keep_all = TRUE)
1633731146470:cat5storms <- cat5storms |>
1633731146480:filter(year >= 2000)
1633731146513:cat5storms <- cat5storms |>
1633731146522:select(name, year, status)
1633731146547:print(cat5storms)
1633731233421:storms_mylife <- storms |>
1633731247707:filter(year <= 2000)
1633731256593:View(storms_mylife)
1633731276324:storms_mylife <- storms_mylife |>
1633731290259:distinct(name, .keep_all = TRUE)
1633731323509:storms_mylife <- storms |>
1633731323517:filter(year >= 2000)
1633731339854:storms_mylife <- storms_mylife |>
1633731339861:distinct(name, .keep_all = TRUE)
1633731400937:median(storms_mylife$pressure)
1633731426102:mean(storms_mylife$pressure)
1633731531890:storms_mylife <- storms |>
1633731531900:filter(year >= 2000)
1633731531964:storms_mylife <- storms_mylife |>
1633731531978:distinct(name, .keep_all = TRUE)
1633731532024:cat("Among the storms that occurred in my lifetime the mean was", mean(storms_mylife$pressure), "and the median was", median(storms_mylife$pressure))
1633985094853:hw01_var <- c(1, 2, 3)
1633985098930:hw01_var
1633985145083:str(hw01_var)
1633985163556:hw01_var <- c(1, 2, 3)
1633985166206:. = ottr::check("tests/q1.R")
1633985254936:remotes::install_github("ucbds-infra/ottr")
1633985266294:hw01_var <- c(1, 2, 3)
1633985267059:. = ottr::check("tests/q1.R")
1633985332101:install.packages("testthat")
1633985344423:install.packages("testthat")
1633985385865:hw01_var <- c(1, 2, 3)
1633985385888:hw01_var <- c(1, 2, 3)
1633985385909:hw01_var <- c(1, 2, 3)
1633985386072:hw01_var <- c(1, 2, 3)
1633985386115:. = ottr::check("tests/q1.R")
1633985391709:. = ottr::check("tests/q1.R")
1633985436198:library(testthat)
1633985439735:hw01_var <- c(1, 2, 3)
1633985441503:. = ottr::check("tests/q1.R")
1633985460819:hw01_var <- c('hello)
1633985465480:hw01_var <- c('hello')
1633985467287:. = ottr::check("tests/q1.R")
1633985552647:num_var <- 5
1633985552660:char_var <- 'hw1'
1633985552672:bool_var <- TRUE
1633985552685:vector_var <- c(3, 'two', FALSE)
1633985554542:. = ottr::check("tests/q2.R")
1633985623373:named_list <- list("First", "Last", "Major")
1633985624891:. = ottr::check("tests/q3.R")
1633985801495:list_length <- lengths(named_list)
1633985808784:list_length
1633985822364:list_length <- lengths(named_list$1)
1633985834121:list_length <- lengths(named_list[1])
1633985840144:list_length
1633985873465:list_length <- length(named_list)
1633985878355:list_length
1633985884080:. = ottr::check("tests/q4.R")
1633985993497:# these variables provided for you
1633985993507:var_a <- 18
1633985993521:var_b <- 2
1633985993533:var_c <- 4
1633985993560:output_var <- var_a - (var_b*var_c) - 1
1633985998169:output_var
1633986002637:. = ottr::check("tests/q5.R")
1633986120601:true_var <- var_a > var_b
1633986135128:true_var <- var_a > var_b
1633986135139:false_var <- var_c > var_a
1633986136893:. = ottr::check("tests/q6.R")
1633986146861:true_var
1633986149711:false_var
1633986381835:class_tibble <- tibble((First = 'Isa'), (Last = "Gonzalez"), (Major = "Cog Sci ML"))
1633986405120:library(tibble)
1633986409187:class_tibble <- tibble((First = 'Isa'), (Last = "Gonzalez"), (Major = "Cog Sci ML"))
1633986429471:glimpse(class_tibble)
1633986453532:View(class_tibble)
1633986493427:class_tibble <- tibble((First = 'Isa', 'Sav'), (Last = "Gonzalez", 'Collyer'), (Major = "Cog Sci ML", 'CS'))
1633986507614:class_tibble <- tibble((First = 'Isa' 'Sav'), (Last = "Gonzalez" 'Collyer'), (Major = "Cog Sci ML" 'CS'))
1633986582282:class_tibble <- tibble((First = c('Isa','Sav')), (Last = c("Gonzalez", 'Collyer')), (Major = c("Cog Sci ML", 'CS')))
1633986599112:glimpe(class_tibble)
1633986606213:glimpse(class_tibble)
1633986611136:class_tibble <- tibble((First = c('Isa','Sav')), (Last = c("Gonzalez", 'Collyer')), (Major = c("Cog Sci ML", 'CS')))
1633986611847:. = ottr::check("tests/q7.R")
1633986638005:class_tibble <- tibble(('First' = c('Isa','Sav')), ('Last' = c("Gonzalez", 'Collyer')), ('Major' = c("Cog Sci ML", 'CS')))
1633986639647:. = ottr::check("tests/q7.R")
1633986680023:class_tibble <- tibble(('First' = c('Isa','Sav')), ('Last' = c("Gonzalez", 'Collyer')), ('Major' = c("Cog Sci ML", 'CS')))
1633986689233:View(class_tibble)
1633986810285:class_tibble <- tibble(('First' <- c('Isa','Sav')), ('Last' <- c("Gonzalez", 'Collyer')), ('Major' <- c("Cog Sci ML", 'CS')))
1633986812405:. = ottr::check("tests/q7.R")
1633986826776:View(class_tibble)
1633986881308:class_tibble <- tibble('First' <- c('Isa','Sav'), 'Last' <- c("Gonzalez", 'Collyer'), 'Major' <- c("Cog Sci ML", 'CS'))
1633986882937:. = ottr::check("tests/q7.R")
1633986937600:df <- tibble(x = 1:3, y = c(1, 2, 3))
1633986941486:View(df)
1633987135695:class_tibble <- tibble(First = c('Isa','Sav'), Last = c("Gonzalez", 'Collyer'), Major = c("Cog Sci ML", 'CS'))
1633987137121:. = ottr::check("tests/q7.R")
1633987574731:View(starwars)
1633987583743:library(dplyr)
1633987591609:View(starwars)
1633987683994:temp <- starwars |> select(starwars$height)
1633987823577:library(tidyverse)
1633987826008:library(testthat)
1633987826018:library(dyplr)
1633987838934:library(tidyverse)
1633987838944:library(testthat)
1633987838955:library(dplyr)
1633987935236:temp <- starwars |>
1633987959217:select(height, na.rm = TRUE)
1633987997183:temp <- starwars |>
1633988006600:select(height, na.rm = 0)
1633988018972:View(temp)
1633988039201:temp <- starwars |>
1633988050214:select(name, height, na.rm = 0)
1633988056031:View(temp)
1633988175518:mean_height <- mean(temp$height)
1633988178857:mean_height
1633988199123:mean_height <- mean(temp$height, na.rm = TRUE)
1633988202366:mean_height
1633988260856:temp <- starwars |>
1633988260867:select(name, height, na.rm = 0)
1633988260911:mean_height <- mean(temp$height, na.rm = TRUE)
1633988263418:. = ottr::check("tests/q8.R")
1633988318808:temp2 <- starwars |>
1633988413194:filter(sex != NA)
1633988419414:View(temp2)
1633988509434:temp2 - starwars |>
1633988518162:na.omit(sex)
1633988538877:temp2 <- starwars |>
1633988544009:na.omit(sex)
1633988547974:View(temp2)
1633988751056:barplot(x = temp2$sex, y = temp2$name)
1633988836583:barplot(x = c(temp2$sex), y = c(temp2$name))
1633989055638:?fct_infreq
1633989132195:barplot(x = 'male', 'female')
1633989164381:barplot(x = c('male', 'female'))
1633989284076:barplot(x1 = 'male', x2 = 'female')
1633989440110:temp2 <- starwars |>
1633989440121:na.omit(sex)
1633989440274:temp2 <- starwars |>
1633989440284:select(starwars$name, starwars$sex)
1633989462211:temp2 <- starwars |>
1633989462221:na.omit(sex)
1633989462302:temp2 <- starwars |>
1633989462311:select(starwars$sex, starwars$name)
1633989505538:rlang::last_error()
1633989658915:temp2 <- starwars |>
1633989658925:na.omit(sex)
1633989659042:temp2 <- temp2 |>
1633989659053:select(temp2$sex, temp2$name)
1633989824096:barplot(xlab = "sex", names.arg = c("male","female"))
1633989878818:barplot(max.name, xlab = "sex", names.arg = c("male","female"))
1633989927831:max.character <- c(1:29)
1633989952832:barplot(max.character, xlab. ="sex", names.arg = c("male", "female"))
1633989984995:barplot(max.character, x ="sex", names.arg = c("male", "female"))
1633990078975:sex = c(temp2$sex)
1633990084650:sex
1633990109851:sex = sex |>
1633990138521:distinct(sex)
1633990165596:sex <- temp2sex |>
1633990180569:distinct(temp2sex)
1633990187705:sex <- temp2 |>
1633990195598:distinct(temp2$sex)
1633990199996:sex
1633990415727:table(temp2$sex)
1633990520510:toploy <- table(temp2$sex)
1633990532126:barplot(toplot)
1633990540504:barplot(toploy)
1633990562544:?fct_infreq
1633990588159:barplot(fct_infreq(toploy))
1633990662090:barplot(fct_infreq(toploy$male))
1633990726391:barplot(toploy, fct_infreq(male))
1633990755667:barplot(toploy, fct_infreq(toploy))
1633990825143:f = c(toploy)
1633990842092:barplot (toploy, fct_infreq(f))
1633990864707:f <- factor(f)
1633990870710:barplot (toploy, fct_infreq(f))
1633990905151:f <- c('male', 'female')
1633990910789:f <- factor(f)
1633990915509:barplot (toploy, fct_infreq(f)
1633990921562:d
1633990930148:barplot (toploy, fct_infreq(f))
1633990970977:toplot <- table(temp2$sex, 'male', 'female')
1633991193386:f <- factor(c("male", "female"))
1633991240828:f <- factor(c(toploy))
1633991249370:View(f)
1633991295597:View(toploy)
1633991355587:f <- factor(toploy$var1)
1633991372811:f <- factor(c(toploy$var1))
1633991428167:f <- factor(temp2)
1633991530463:barplot(toploy)
1633991693277:toploy <- toploy |>
1633991720712:arrange(male, female)
1633991947252:barplot(toploy,
1633991947260:main = "Sex Frequency of StarWars Characters",
1633991947270:xlab = "Sex",
1633991947276:ylab = "Frequency",
1633991966748:names.arg = ('male', 'female'))
1633992201184:barplot(toploy,
1633992201191:main = "Sex Frequency of StarWars Characters",
1633992201200:xlab = "Sex",
1633992201207:ylab = "Frequency")
1633992242265:barplot(toploy,
1633992242273:main = "Sex Frequency of StarWars Characters",
1633992242281:xlab = "Sex",
1633992242288:ylab = "Frequency", )
1633992272559:barplot(toploy,
1633992272568:main = "Sex Frequency of StarWars Characters",
1633992272577:xlab = "Sex",
1633992272584:ylab = "Frequency", names.arg = ('male', 'female'))
1633992539880:table(temp2$sex, 'male', 'female')
1633992603361:order(temp2)
1633992622278:order(toploy)
1633992651704:order(toploy$Freq)
1633992672618:order(toploy[2])
1633992690212:barploy(toploy)
1633992706800:toploy <- toploy |>
1633992714662:order(toploy[2])
1633992743810:toploy <- toploy |>
1633992743817:order(toploy[1])
1633993218859:?fct_infreq
1633993283372:temp2 <- starwars |>
1633993283384:na.omit(sex)
1633993283499:toplot <- table(temp2$sex) 34521
1633993298583:temp2 <- starwars |>
1633993298593:na.omit(sex)
1633993298714:toplot <- table(temp2$sex)
1633993298726:fct_infreq(toplot)
1633993592694:temp2 <- starwars |>
1633993592704:na.omit(sex)
1633993592850:toplot <- table(temp2$sex)
1633993592869:ggplot(starwars, aes(x = hair_color)) +
1633993592880:geom_bar() +
1633993592890:coord_flip()
1633993593223:fct_infreq(toplot)
1633993601044:temp2 <- starwars |>
1633993601054:na.omit(sex)
1633993601199:toplot <- table(temp2$sex)
1633993601226:ggplot(starwars, aes(x = hair_color)) +
1633993601236:geom_bar() +
1633993601247:coord_flip()
1633993632246:temp2 <- starwars |>
1633993632257:na.omit(sex)
1633993632447:toplot <- table(temp2$sex)
1633993632470:ggplot( table(temp2$sex), aes(x = hair_color)) +
1633993632481:geom_bar() +
1633993632492:coord_flip()
1633993645838:temp2 <- starwars |>
1633993645849:na.omit(sex)
1633993645976:toplot <- table(temp2$sex)
1633993645999:ggplot(temp2$sex, aes(x = hair_color)) +
1633993646008:geom_bar() +
1633993646017:coord_flip()
1633993795886:f <- c(temp2$sex)
1633993799562:f
1633993807145:factor(f)
1633993826258:f <- factor(f)
1633993830285:glimpse(f)
1633993842285:View(f)
1633993915587:barplot(fct_inorder(f))
1633993946692:barplot(f, fct_inorder(f) )
1633993982449:f <- c(temp2$sex)
1633993991112:ff <- factor(f)
1633994001967:barplot(f, fct_inorder(ff))
1633994034674:ff <- fct_inorder(ff)
1633994039433:View(ff)
1633994058025:ff <- fct_infreq(ff)
1633994061294:View(ff)
1633994156369:barplot(f)
1633994424247:barplot(temp2$sex)
1633994767282:barplot(ff)
1633994930711:toplot <- tibble(table(temp2$sex))
1633994945559:View(toplot)
1633995055816:toplot <- table(temp2$sex)
1633995175605:temp2 <- starwars |>
1633995175615:na.omit(sex)
1633995175731:toplot <- table(temp2$sex)
1633995175752:ggplot(temp2, aes(x=sex)) +
1633995175761:geom_bar()
1633995207709:temp2 <- starwars |>
1633995207720:na.omit(sex)
1633995207871:#toplot <- table(temp2$sex)
1633995207890:ggplot(temp2, aes(x=sex)) +
1633995207901:geom_bar()
1633995326060:temp2 <- starwars |>
1633995326072:na.omit(sex)
1633995326207:#toplot <- table(temp2$sex)
1633995326229:ggplot(temp2, aes(x=reordere(sex, sex, function(x) - length(x))) +
1633995326239:geom_bar()
1633995349755:temp2 <- starwars |>
1633995349765:na.omit(sex)
1633995349891:#toplot <- table(temp2$sex)
1633995349907:ggplot(temp2, aes(x=reordere(sex, sex, function(x) - length(x)))) +
1633995349919:geom_bar()
1633995362645:temp2 <- starwars |>
1633995362657:na.omit(sex)
1633995362804:#toplot <- table(temp2$sex)
1633995362821:ggplot(temp2, aes(x=reorder(sex, sex, function(x) - length(x)))) +
1633995362832:geom_bar()
1633995390780:temp2 <- starwars |>
1633995390789:na.omit(sex)
1633995390918:#toplot <- table(temp2$sex)
1633995390937:ggplot(temp2, aes(x=reorder(sex, sex, function(x) - length(x)))) +
1633995390946:geom_bar()
1633995403337:temp2 <- starwars |>
1633995403349:na.omit(sex)
1633995403477:#toplot <- table(temp2$sex)
1633995403497:lmao <- ggplot(temp2, aes(x=reorder(sex, sex, function(x) - length(x)))) +
1633995403508:geom_bar()
1633995410893:View(lmao)
1633995426920:temp2 <- starwars |>
1633995426937:na.omit(sex)
1633995427059:#toplot <- table(temp2$sex)
1633995427076:lmao <- ggplot(temp2, aes(x=reorder(sex, sex, function(x) - length(x)))) +
1633995427085:geom_bar()
1633995446898:temp2 <- starwars |>
1633995446910:na.omit(sex)
1633995447042:#toplot <- table(temp2$sex)
1633995447059:ggplot(temp2, aes(x=reorder(sex, sex, function(x) - length(x)))) +
1633995447071:geom_bar()
1633995549068:barplot(table(temp2$sex))
1633995615782:temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1633995631930:barplot(table(temp2$sex))
1633995736840:barplot(table(temp2$sex), main = "Frequency of sex of Starwars Characters", xlab = "sex, ylab = "frequency")
1633995799910:barplot(table(temp2$sex), xlab = "sex, ylab = "frequency")
1633995821930:barplot(table(temp2$sex), xlab = "sex, ylab = "frequency")
1633995846309:barplot(table(temp2$sex))
1633995888735:barplot(table(temp2$sex), xlab = "sex")
1633995918425:barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633995955499:temp2 <- starwars |>
1633995955512:na.omit(sex)
1633995955635:barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633995955745:#ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1633995955756:# geom_bar()
1633995966824:temp2 <- starwars |>
1633995966834:na.omit(sex)
1633995966972:barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633995966999:#ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1633995967011:# geom_bar()
1633995975009:. = ottr::check("tests/q9.R")
1633995986832:temp2 <- starwars |>
1633995986842:na.omit(sex)
1633995986965:p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633995986995:#ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1633995987006:# geom_bar()
1633995990437:. = ottr::check("tests/q9.R")
1633996008341:temp2 <- starwars |>
1633996008351:na.omit(sex)
1633996008488:'p' <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633996008518:#ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1633996008530:# geom_bar()
1633996011408:. = ottr::check("tests/q9.R")
1633996083572:temp2 <- starwars |>
1633996083582:na.omit(sex)
1633996083788:temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1633996083917:'p' <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633996083947:#ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1633996083958:# geom_bar()
1633996092135:. = ottr::check("tests/q9.R")
1633996096212:p
1633996111038:'p' <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633996113319:p
1633996156905:temp2 <- starwars |>
1633996156915:na.omit(sex)
1633996157016:temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1633996157154:`p` <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633996157265:#ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1633996157275:# geom_bar()
1633996160101:. = ottr::check("tests/q9.R")
1633996231268:temp2 <- starwars |>
1633996231278:na.omit(sex)
1633996231405:#temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1633996231414:#p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633996231430:p <- ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1633996231439:geom_bar()
1633996234608:. = ottr::check("tests/q9.R")
1633996265918:temp2 <- starwars |>
1633996265928:na.omit(sex)
1633996266079:#temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1633996266088:#p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633996266103:p <- ggplot(temp2, aes( "sex" = reorder(sex, sex, function(x) - length(x)))) +
1633996266112:geom_bar()
1633996268456:. = ottr::check("tests/q9.R")
1633996300636:temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1633996309697:p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633996309854:p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633996358323:. = ottr::check("tests/q9.R")
1633996498294:class(p)
1633996589527:p <- as.character(p)
1633996614469:temp2 <- starwars |>
1633996614486:na.omit(sex)
1633996614659:temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1633996614780:p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633996614807:p <- as.character(p)
1633996614827:# ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1633996614837:#geom_bar()
1633996622070:. = ottr::check("tests/q9.R")
1633997689058:. = ottr::check("tests/q9.R")
1633998808363:class(p)
1633999100005:temp2 <- starwars |>
1633999100020:na.omit(sex)
1633999100160:temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1633999100271:temp2$sex <- as.character(temp2$sex)
1633999100331:p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633999100347:p <- as.character(p)
1633999100363:# ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1633999100370:#geom_bar()
1633999104060:. = ottr::check("tests/q9.R")
1633999159682:library(tidyverse)
1633999159693:library(testthat)
1633999159703:library(dplyr)
1633999159736:hw01_var <- c('hello')
1633999159769:. = ottr::check("tests/q1.R")
1633999159800:num_var <- 5
1633999159812:char_var <- 'hw1'
1633999159823:bool_var <- TRUE
1633999159835:vector_var <- c(3, 'two', FALSE)
1633999159859:. = ottr::check("tests/q2.R")
1633999159899:named_list <- list("First", "Last", "Major")
1633999159931:. = ottr::check("tests/q3.R")
1633999159976:list_length <- length(named_list)
1633999160000:. = ottr::check("tests/q4.R")
1633999160049:# these variables provided for you
1633999160059:var_a <- 18
1633999160072:var_b <- 2
1633999160084:var_c <- 4
1633999160096:output_var <- var_a - (var_b*var_c) - 1
1633999160134:. = ottr::check("tests/q5.R")
1633999160179:true_var <- var_a > var_b
1633999160188:false_var <- var_c > var_a
1633999160214:. = ottr::check("tests/q6.R")
1633999160242:class_tibble <- tibble(First = c('Isa','Sav'), Last = c("Gonzalez", 'Collyer'), Major = c("Cog Sci ML", 'CS'))
1633999160275:. = ottr::check("tests/q7.R")
1633999160462:temp <- starwars |>
1633999160471:select(name, height, na.rm = 0)
1633999160493:mean_height <- mean(temp$height, na.rm = TRUE)
1633999160522:. = ottr::check("tests/q8.R")
1633999160585:temp2 <- starwars |>
1633999160595:na.omit(sex)
1633999160676:temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1633999160742:p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633999160762:p <- as.character(p)
1633999160781:# ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1633999160789:#geom_bar()
1633999248052:. = ottr::check("tests/q9.R")
1633999304733:View(p)
1633999434958:hello <- "hello"
1633999446807:View(hello)
1633999479106:p <- as.character[1](p)
1633999609007:assign(p, "sex")
1633999627465:View(p)
1633999640290:assign(p, "name")
1633999691354:p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1633999699080:View(p)
1633999729300:class(p)
1633999738395:glimpse(p)
1633999842647:temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1633999849554:class(temp2$sex)
1633999950057:l <- ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1633999950066:geom_bar()
1633999954959:View(l)
1633999967007:class(l)
1634000073761:p <- "plot"
1634000073775:temp2 <- starwars |>
1634000073786:na.omit(sex)
1634000073913:temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1634000073998:p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1634000074061:p <- as.character(p)
1634000074080:# ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1634000074088:#geom_bar()
1634000076545:. = ottr::check("tests/q9.R")
1634000451962:class(temp2)
1634000686284:temp2 <- starwars |>
1634000686295:na.omit(sex)
1634000686414:temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1634000686501:p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1634000686535:# ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1634000686544:#geom_bar()
1634000689688:. = ottr::check("tests/q9.R")
1634000705760:temp2 <- starwars |>
1634000705771:na.omit(sex)
1634000705885:temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1634000705988:p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1634000706010:p <- as.character(p)
1634000706036:# ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1634000706045:#geom_bar()
1634000708775:. = ottr::check("tests/q9.R")
1634001216784:ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1634001216792:geom_bar()
1634001249700:ggplot(temp2, aes( x = reorder(sex, sex, function(x) - length(x)))) +
1634001249708:geom_bar())
1634001398803:aes( x = reorder(sex, sex, function(x) - length(x)))
1634001416495:ggplot(temp2, aes( "sex" = reorder(sex, sex, function(x) - length(x)))) +
1634001416502:geom_bar()
1634001550125:ggplot(temp2, "sex" = (aes(x = reorder(sex, sex, function(x) - length(x))))) +
1634001550132:geom_bar()
1634001582008:ggplot(temp2, aes(x = reorder(sex, sex, function(x) - length(x)))) +
1634001582016:geom_bar()
1634001628503:sex = aes(x = reorder(sex, sex, function(x) - length(x)))
1634001653077:ggplot(temp2, sex) +
1634001653085:geom_bar()
1634001729890:ggplot(temp2, aes(x = reorder(sex, sex, function(x) - length(x)))) +
1634001729897:geom_bar() +
1634001729904:labs( x = "sex")
1634001736742:temp2 <- starwars |>
1634001736753:na.omit(sex)
1634001736876:#temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1634001736886:# p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1634001736895:#p <- as.character(p)
1634001736918:ggplot(temp2, aes(x = reorder(sex, sex, function(x) - length(x)))) +
1634001736930:geom_bar() +
1634001736940:labs( x = "sex")
1634001739896:. = ottr::check("tests/q9.R")
1634001757559:temp2 <- starwars |>
1634001757569:na.omit(sex)
1634001757684:#temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1634001757694:# p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1634001757704:#p <- as.character(p)
1634001757729:p <- ggplot(temp2, aes(x = reorder(sex, sex, function(x) - length(x)))) +
1634001757738:geom_bar() +
1634001757747:labs( x = "sex")
1634001760435:. = ottr::check("tests/q9.R")
1634001962838:p <- ggplot(temp2, aes(x = reorder(sex, sex, function(x) - length(x)))) +
1634001962847:geom_bar() +
1634001962856:labs( x = "sex")
1634001972009:ggplot(temp2, aes(x = reorder(sex, sex, function(x) - length(x)))) +
1634001972017:geom_bar()
1634002063576:layer_data(p)
1634002108765:(layer_data(p, 1)[1,'y'], 60)
1634002728092:View(p)
1634002794200:?fct_infreq
1634002966746:temp2 <- starwars |>
1634002966755:na.omit(sex)
1634002966854:#temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1634002966862:# p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1634002966871:#p <- as.character(p)
1634002966893:#p <- ggplot(temp2, aes(x = reorder(sex, sex, function(x) - length(x)))) +
1634002966901:#geom_bar() +
1634002966909:#labs( x = "sex")
1634002966923:p <- ggplot(temp2, aes(x = fct_inorder(sex))) +
1634002966932:geom_bar() +
1634002966940:labs( x = "sex")
1634002976356:View(p)
1634002993274:p
1634003002253:. = ottr::check("tests/q9.R")
1634003050687:View(temp2)
1634003299067:temp2 <- starwars |>
1634003299076:filter(sex, na.rm = TRUE)
1634003377044:temp2 <- starwars |>
1634003377053:filter(sex, na.rm = TRUE)
1634003382730:temp2 <- starwars[!is.na(starwars$sex), ]
1634003382949:#temp2$sex <- factor(temp2$sex, levels = c("male", "female"))
1634003382958:# p <- barplot(table(temp2$sex), xlab = "sex", ylab = "frequency")
1634003382966:#p <- as.character(p)
1634003382987:p <- ggplot(temp2, aes(x = fct_inorder(sex))) +
1634003382996:geom_bar() +
1634003383004:labs( x = "sex")
1634003410434:p
1634003420022:. = ottr::check("tests/q9.R")
1634003448162:p <- ggplot(temp2, aes(x = fct_inorder(sex))) +
1634003448170:geom_bar() +
1634003448178:labs( x = "sex")
1634003451990:p
1634003483923:temp2 <- starwars[!is.na(starwars$sex), ]
1634003484158:p <- ggplot(temp2, aes(x = fct_infreq(sex))) +
1634003484168:geom_bar() +
1634003484177:labs( x = "sex")
1634003486426:p
1634003926243:library(tidyverse)
1634003926255:library(testthat)
1634003926267:library(dplyr)
1634003926327:hw01_var <- c('hello')
1634003926373:. = ottr::check("tests/q1.R")
1634003926415:num_var <- 5
1634003926430:char_var <- 'hw1'
1634003926444:bool_var <- TRUE
1634003926458:vector_var <- c(3, 'two', FALSE)
1634003926489:. = ottr::check("tests/q2.R")
1634003926542:named_list <- list("First", "Last", "Major")
1634003926590:. = ottr::check("tests/q3.R")
1634003926660:list_length <- length(named_list)
1634003926702:. = ottr::check("tests/q4.R")
1634003926754:# these variables provided for you
1634003926764:var_a <- 18
1634003926780:var_b <- 2
1634003926797:var_c <- 4
1634003926812:output_var <- var_a - (var_b*var_c) - 1
1634003926864:. = ottr::check("tests/q5.R")
1634003926924:true_var <- var_a > var_b
1634003926936:false_var <- var_c > var_a
1634003926974:. = ottr::check("tests/q6.R")
1634003927016:class_tibble <- tibble(First = c('Isa','Sav'), Last = c("Gonzalez", 'Collyer'), Major = c("Cog Sci ML", 'CS'))
1634003927058:. = ottr::check("tests/q7.R")
1634003927143:temp <- starwars |>
1634003927153:select(name, height, na.rm = 0)
1634003927178:mean_height <- mean(temp$height, na.rm = TRUE)
1634003927216:. = ottr::check("tests/q8.R")
1634003927278:temp2 <- starwars[!is.na(starwars$sex), ]
1634003927725:p <- ggplot(temp2, aes(x = fct_infreq(sex))) +
1634003927735:geom_bar() +
1634003927744:labs( x = "sex")
1634003928150:. = ottr::check("tests/q9.R")
1634108348040:knitr::opts_chunk$set(echo = TRUE)
1634108348432:test <- tible(x = 1:3, y = c("a", "b", "c"))
1634108353841:test <- tibble(x = 1:3, y = c("a", "b", "c"))
1634108378409:library(tidyverse)
1634108380217:library(tidyverse)
1634108380228:library(dplyr)
1634108392418:test <- tibble(x = 1:3, y = c("a", "b", "c"))
1634108394918:test |>
1634108394926:mutate(new_col = cas_when(y == "a" ~ "A"))
1634108401375:test |>
1634108401382:mutate(new_col = case_when(y == "a" ~ "A"))
1634108417227:test
1634109238978:bike <- read_csv2("https://raw.githubusercontent.com/COGS137/datasets/main/nc_bike_crash.csv",
1634109238986:na = c("NA", "", "."))
1634109437130:View(bike)
1634109534685:temp <- bike |> filter(AmbluanceR == "Yes", Crash_Type == "Bycyclist Lost Control - Mechanical Problems")
1634109555275:temp <- bike |>
1634109564933:filter(AmbulanceR == "Yes", Crash_Type == "Bycyclist Lost Control - Mechanical Problems")
1634109570554:View(temp)
1634109587782:temp
1634109654860:temp <- bike |>
1634109661962:filter(AmbulanceR == "Yes")
1634109668795:View(temp)
1634109692017:temp <- temp |>
1634109711010:filter(Crash_Type == "Bycyclist Lost Control - Mechanical Problems")
1634109777243:temp <- bike |>
1634109777250:filter(AmbulanceR == "Yes")
1634109786329:View(temp)
1634109821855:temp <- temp |> filter("Bicyclist Lost Control - Mechanical Problems")
1634109848836:temp <- temp |> filter(Crash_Type == "Bicyclist Lost Control - Mechanical Problems")
1634109856162:View(temp)
1634109898573:nrow(temp)
1634109977206:temp <- bike |>
1634109977214:filter(AmbulanceR == "Yes")
1634109978419:temp <- temp |> filter(Crash_Type == "Bicyclist Lost Control - Mechanical Problems")
1634109979737:nrow(temp)
1634110328222:bike |>
1634110328231:filter(AmbulanceR == "Yes")
1634110329741:nrow(bike)
1634110371369:temp <- bike |>
1634110371378:filter(AmbulanceR == "Yes")
1634110372072:temp <- temp |> filter(Crash_Type == "Bicyclist Lost Control - Mechanical Problems")
1634110372709:nrow(temp)
1634111852202:bike |> filter(County == "Cumberland")
1634111852261:select(Speed_Limit, Drvr_Alc_D, Drvr_Age)
1634111867782:bike |> filter(County == "Cumberland")
1634111867903:select(Speed_Limi, Drvr_Alc_D, Drvr_Age)
1634111942098:temp2 <- bike |> filter(County == "Cumberland")
1634111947219:View(temp2)
1634111974439:temp2 <- temp2 |>
1634111975549:select(Speed_Limi, Drvr_Alc_D, Drvr_Age)
1634112020295:bike |> filter(County == "Cumberland")
1634112020453:select(Speed_Limi, Drvr_Alc_D, Drvr_Age)
1634112102712:bike |>
1634112102721:filter(County == "Cumberland")
1634112102845:select(Speed_Limi, Drvr_Alc_D, Bike_age)
1634112196386:bike |>
1634112196394:#filter(County == "Cumberland")
1634112196403:select(Speed_Limi, Drvr_Alc_D, Bike_age)
1634112209874:bike |>
1634112209883:#filter(County == "Cumberland")
1634112209892:select(Speed_Limi, Drvr_Alc_D, Bike_Age)
1634112222172:bike |>
1634112222182:filter(County == "Cumberland")
1634112222302:select(Speed_Limi, Drvr_Alc_D, Bike_Age)
1634112235318:bike |>
1634112235327:filter(County == "Cumberland")
1634112235453:select(Speed_Limi, Drvr_Alc_D, Bike_Age)
1634112272042:bike |>
1634112272052:filter(County == "Cumberland")
1634112272182:select(Speed_Limi, Drvr_Alc_D, Bike_Age)
1634112322452:for_boss<- bike |>
1634112322461:filter(County == "Cumberland")
1634112322565:select(Speed_Limi, alcohol, Bike_Age)
1634112348539:for_boss<- bike |>
1634112348549:filter(County == "Cumberland")
1634112348677:for_boss <- for_boss |>
1634112348687:select(Speed_Limi, alcohol, Bike_Age)
1634112412404:for_boss<- bike |>
1634112412414:filter(County == "Cumberland")
1634112412530:for_boss <- for_boss |>
1634112412539:select(Speed_Limi, Bike_Alc_D, Bike_Age)
1634112423409:for_boss
1634113514125:library(palmerpenguins)
1634113560614:package(palmerpenguins)
1634113582049:install.packages("palmerpenguins")
1634113591163:library(palmerpenguins)
1634114787626:View(palmerpenguins)
1634114795826:View(penguins)
1634140526284:install.packages("palmerpenguins")
1634140629623:View(penguins)
1634140642212:library(palmerpenguins)
1634140646199:View(penguins)
1634140753497:ggplot(data=penguins)
1634140784355:install.packages(ggplot2)
1634140792260:install.packages("ggplot2")
1634140834366:ggplot(data = penguins)
1634140853379:library(ggplot2)
1634140866569:ggplot(data = penguins)
1634140960933:ggplot(data = penguins, mapping = aes(x = bill_depth_mm, y = bill_length_mm))
1634141023171:knitr::opts_chunk$set(echo = TRUE)
1634141023182:library(tidyverse)
1634141024737:library(dplyr)
1634141024745:library(palmerpenguins)
1634141024923:ggplot(data = penguins, mapping = aes(x = bill_depth_mm, y = bill_length_mm) +
1634141024931:geom_point)
1634141035619:ggplot(data = penguins, mapping = aes(x = bill_depth_mm, y = bill_length_mm) +
1634141035629:geom_point())
1634141093526:ggplot(data = penguins, mapping = aes(x = bill_depth_mm, y = bill_length_mm)) +
1634141093535:geom_point()
1634141102080:ggplot(data = penguins, mapping = aes(x = bill_depth_mm, y = bill_length_mm)) +
1634141102088:geom_point()
1634141171983:ggplot(data = penguins, mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
1634141171992:geom_point()
1634141200526:ggplot(data = penguins, mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
1634141200533:geom_point() +
1634141223713:labs(title = "Bill depth and length")
1634141343496:ggplot(data = penguins, mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
1634141343505:geom_point() +
1634141343514:labs(title = "Bill depth and length",
1634141343522:subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo",
1634141343532:x = "Bill depth (mm)",
1634141343541:y = "Bill length (mm)")
1634141353276:ggplot(data = penguins, mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
1634141353283:geom_point() +
1634141353290:labs(title = "Bill depth and length",
1634141353297:subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo",
1634141353303:x = "Bill depth (mm)",
1634141353311:y = "Bill length (mm)")
1634141532612:ggplot(data = penguins, mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
1634141532620:geom_point() +
1634141532627:labs(title = "Bill depth and length",
1634141532635:subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo",
1634141532643:x = "Bill depth (mm)",
1634141532651:y = "Bill length (mm)",
1634141532659:color = "Species",
1634141532667:caption = "Source: Palmer Penguins")
1634142193572:ggplot(
1634142193582:data = penguins,
1634142193592:mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)
1634142193600:) +
1634142193609:geom_jitter() +
1634142193616:labs(
1634142193624:title = "Bill depth and length",
1634142193634:subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo",
1634142193643:x = "Bill depth (mm)",
1634142193651:y = "Bill length (mm)",
1634142193658:color = "Species",
1634142193668:caption = "Source: Palmer Penguins"
1634142193676:)
1634142219971:ggplot(
1634142219979:data = penguins,
1634142219986:mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)
1634142219993:) +
1634142220001:geom_map() +
1634142220011:labs(
1634142220017:title = "Bill depth and length",
1634142220025:subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo",
1634142220032:x = "Bill depth (mm)",
1634142220039:y = "Bill length (mm)",
1634142220046:color = "Species",
1634142220053:caption = "Source: Palmer Penguins"
1634142220059:)
1634142265676:ggplot(
1634142265685:data = penguins,
1634142265692:mapping = aes(x = bill_depth_mm, y = bill_length_mm, color = species)
1634142265699:) +
1634142265705:geom_polygon() +
1634142265711:labs(
1634142265718:title = "Bill depth and length",
1634142265724:subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo",
1634142265731:x = "Bill depth (mm)",
1634142265737:y = "Bill length (mm)",
1634142265745:color = "Species",
1634142265752:caption = "Source: Palmer Penguins"
1634142265760:)
1634142373696:#install.packages("ggplot2")
1634142373708:#install.packages("palmerpenguins")
1634142373717:#library(palmerpenguins)
1634142373727:glimpse(penguins)
1634142373784:ggplot(
1634142373793:data = penguins,
1634142373803:mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species)
1634142373812:) +
1634142373821:geom_point() +
1634142373830:labs(
1634142373839:title = "FLipper Length and Body Mass",
1634142373848:subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo",
1634142373857:x = "Flipper Length (mm)",
1634142373867:y = "Body Mass (g)",
1634142373877:color = "Species",
1634142373886:caption = "Source: Palmer Penguins"
1634142373896:)
1634142374904:#default for caption is bottom right
1634142374920:# you can also pipe the data into ggplot |>
1634142385561:ggplot(
1634142385568:data = penguins,
1634142385575:mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species)
1634142385582:) +
1634142385589:geom_point() +
1634142385597:labs(
1634142385604:title = "FLipper Length and Body Mass",
1634142385611:subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo",
1634142385618:x = "Flipper Length (mm)",
1634142385625:y = "Body Mass (g)",
1634142385633:color = "Species",
1634142385640:caption = "Source: Palmer Penguins"
1634142385647:)
1634142574803:ggplot(
1634142574810:data = penguins,
1634142574817:mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species, shape = species, size = body_mass_g)
1634142574824:) +
1634142574831:geom_point() +
1634142574838:labs(
1634142574844:title = "FLipper Length and Body Mass",
1634142574850:subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo",
1634142574857:x = "Flipper Length (mm)",
1634142574864:y = "Body Mass (g)",
1634142574870:color = "Species",
1634142574877:caption = "Source: Palmer Penguins"
1634142574883:)
1634142604485:ggplot(
1634142604492:data = penguins,
1634142604499:mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species, shape = species, size = body_mass_g, alpha = flipper_length_mm)
1634142604505:) +
1634142604511:geom_point() +
1634142604517:labs(
1634142604522:title = "FLipper Length and Body Mass",
1634142604528:subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo",
1634142604534:x = "Flipper Length (mm)",
1634142604540:y = "Body Mass (g)",
1634142604546:color = "Species",
1634142604552:caption = "Source: Palmer Penguins
1634142671935:ggplot(
1634142671944:data = penguins,
1634142671955:mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species, shape = species, size = body_mass_g, alpha = flipper_length_mm)
1634142671968:) +
1634142671979:geom_point(size = 2) +
1634142671988:labs(
1634142671997:title = "FLipper Length and Body Mass",
1634142672007:subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo",
1634142672015:x = "Flipper Length (mm)",
1634142672025:y = "Body Mass (g)",
1634142672031:color = "Species",
1634142672040:caption = "Source: Palmer Penguins"
1634142672049:)
1634142701983:ggplot(
1634142701990:data = penguins,
1634142701997:mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species, shape = species, size = body_mass_g, alpha = flipper_length_mm)
1634142702005:) +
1634142702011:geom_point() +
1634142702018:labs(
1634142702025:title = "FLipper Length and Body Mass",
1634142702032:subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo",
1634142702039:x = "Flipper Length (mm)",
1634142702046:y = "Body Mass (g)",
1634142702053:color = "Species",
1634142702061:caption = "Source: Palmer Penguins"
1634142702067:)
1634607756574:library(tidyverse)
1634607826644:data/vb_matches.csv
1634607867156:read.csv(data/vb_matches.csv)
1634607914437:vb_matches <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-05-19/vb_matches.csv', guess_max = 76000)
1634608043012:View(vb_matches)
1634608259394:temp <- vb_matches |>
1634608306554:distinct(match_num, .keep_all = TRUE)
1634608316544:View(temp)
1634608940781:womens_matchnum <- vb_matches |>
1634608940790:unique(vb_matches$gender)
1634608983816:idek <- vb_matches |>
1634608989840:unique(vb_matches$gender)
1634609100374:idek <- vb_matches |>
1634609117140:distinct(gender, .keep_all = TRUE)
1634609121223:View(idek)
1634609239348:temp2 <- vb_matches |>
1634609252249:filter(gender == "W")
1634609257448:View(temp2)
1634609280228:temp2 <- temp2 |>
1634609292289:distinct(match_num, .keep_all = TRUE)
1634609350454:nrow(match_num)
1634609454225:nrow(temp2)
1634609676236:m_matches <- vb_matches |>
1634609676246:filter(gender == "M") |>
1634609676255:distinct(match_num, .keep_all = TRUE)
1634609687217:View(m_matches)
1634610080398:cat("There are a total of", nrow(m_matches), "male FIVB and AVP matches, and", nrow(f_matches), "female AVP matches")
1634610086243:dif_gen <- vb_matches |>
1634610086254:distinct(gender, .keep_all = TRUE)
1634610086348:m_matches <- vb_matches |>
1634610086358:filter(gender == "M") |>
1634610086368:distinct(match_num, .keep_all = TRUE)
1634610086559:f_matches <- vb_matches |>
1634610086569:filter(gender == "F") |>
1634610086579:distinct(match_num, .keep_all = TRUE)
1634610086651:cat("There are a total of", nrow(m_matches), "male FIVB and AVP matches, and", nrow(f_matches), "female AVP matches")
1634610114201:dif_gen <- vb_matches |>
1634610114212:distinct(gender, .keep_all = TRUE)
1634610114303:m_matches <- vb_matches |>
1634610114312:filter(gender == "M") |>
1634610114321:distinct(match_num, .keep_all = TRUE)
1634610114533:W_matches <- vb_matches |>
1634610114542:filter(gender == "W") |>
1634610114551:distinct(match_num, .keep_all = TRUE)
1634610114677:cat("There are a total of", nrow(m_matches), "male FIVB and AVP matches, and", nrow(W_matches), "female AVP matches")
1634610236292:max(vb_matches$duration)
1634610468264:max(vb_matches$duration, na.rm = FALSE)
1634610478456:max(vb_matches$duration, na.rm = TRUE)
1634610792572:max_duration <- max(vb_matches$duration, na.rm = TRUE)
1634610812856:8040/60
1634610876275:vb_matches |>
1634610906392:filter(duration == 02:14:00)
1634611048243:vb_matches[which.max(vb_matches$duration)]
1634611075444:vb_matches[which.max(vb_matches$duration),]
1634611114819:max_duration <- vb_matches[which.max(vb_matches$duration),]
1634611120228:View(max_duration)
1634611355514:max_duration <- vb_matches[which.max(vb_matches$duration),]
1634611355603:cat("a. The tournament was played in", max_duration$tournament, "," , max_duration$country)
1634611500781:max_duration <- vb_matches[which.max(vb_matches$duration),]
1634611500869:cat("a. The tournament was played in", max_duration$tournament, "," , max_duration$country)
1634611500892:cat("b. The match lasted", max_duration$duration)
1634611500906:cat("c. The winners were:", max_duration$w_player1, "and", max_duration$w_player2)
1634611520408:max_duration <- vb_matches[which.max(vb_matches$duration),]
1634611520493:cat("a. The tournament was played in", max_duration$tournament, "," , max_duration$country
1634611520516:)
1634611520550:cat("b. The match lasted", max_duration$duration
1634611520566:)
1634611520586:cat("c. The winners were:", max_duration$w_player1, "and", max_duration$w_player2
1634611520597:)
1634611539705:max_duration <- vb_matches[which.max(vb_matches$duration),]
1634611539794:cat("a. The tournament was played in", max_duration$tournament, "," , max_duration$country, "
1634611539805:")
1634611539832:cat("b. The match lasted", max_duration$duration
1634611539842:)
1634611539858:cat("c. The winners were:", max_duration$w_player1, "and", max_duration$w_player2
1634611539868:)
1634611558759:max_duration <- vb_matches[which.max(vb_matches$duration),]
1634611558845:cat("a. The tournament was played in", max_duration$tournament, "," , max_duration$country, "
1634611558856:")
1634611558882:cat("b. The match lasted", max_duration$duration, "
1634611558891:")
1634611558909:cat("c. The winners were:", max_duration$w_player1, "and", max_duration$w_player2, "
1634611558919:")
1634611579911:max_duration <- vb_matches[which.max(vb_matches$duration),]
1634611580035:cat("a. The tournament was played in", max_duration$tournament, "," , max_duration$country, "
1634611580047:")
1634611580075:cat("b. The match lasted", max_duration$duration, "
1634611580086:")
1634611580104:cat("c. The winners were:", max_duration$w_player1, "and", max_duration$w_player2, "
1634611580113:")
1634611588982:max_duration <- vb_matches[which.max(vb_matches$duration),]
1634611589057:cat("a. The tournament was played in", max_duration$tournament, "," , max_duration$country, "
1634611589066:")
1634611589092:cat("b. The match lasted", max_duration$duration, "
1634611589101:")
1634611589120:cat("c. The winners were:", max_duration$w_player1, "and", max_duration$w_player2, "
1634611589131:")
1634611619807:max_duration <- vb_matches[which.max(vb_matches$duration),]
1634611619880:cat("a. The tournament was played in", max_duration$tournament, "," , max_duration$country, "
1634611619891:")
1634611619915:cat("b. The match lasted", max_duration$duration, "
1634611619925:")
1634611619944:cat("c. The winners were:", max_duration$w_player1, "and", max_duration$w_player2, "
1634611619953:")
1634611763417:max_duration <- vb_matches[which.max(vb_matches$duration),]
1634611763491:cat("a. The tournament was played in", max_duration$tournament, "," , max_duration$country, "
1634611763500:")
1634611763529:cat("b. The match lasted", max_duration$duration, "seconds, which is 2 hours and 14 minutes", "
1634611763539:")
1634611763561:cat("c. The winners were:", max_duration$w_player1, "and", max_duration$w_player2, "
1634611763571:")
1634611992540:winning_tourney <- vb_matches |>
1634611996187:h
1634612000797:winning_tourney <- vb_matches |>
1634612159200:filter(bracket == "Gold Medal")
1634612240957:View(winning_tourney)
1634612287034:winning_tourney <- vb_matches |>
1634612296677:filter(bracket == "Gold Medal" | bracket == "Finals")
1634612703634:winning_tourney |>
1634612737846:count(w_player1)
1634612771499:winning_tourney |>
1634612771506:+ count(w_player1, w_player2)
1634612784118:winning_tourney |>
1634612785379:count(w_player1, w_player2)
1634612832965:winning_tourney |>
1634612851060:filter(w_player1 == "Adriana Behar")
1634612945818:temp3 <- winning_tourney |> count(w_player1, w_player2)
1634612956140:View(temp3)
1634612991414:temp4 <- winning_tourney |>
1634613008954:filter (w_player1 == "Adriana Behar")
1634613014161:View(temp4)
1634613051936:temp4 <- vb_matches |>
1634613065897:count(bracket)
1634613087001:337+651
1634613259718:vb_matches |>
1634613259729:count(bracket)
1634613259795:#added 337 + 651 to get 988
1634613259806:winning_tourney <- vb_matches |>
1634613259816:filter(bracket == "Gold Medal" | bracket == "Finals") |>
1634613259826:count(w_player1, w_player2)
1634613259993:# size of tibble is 988 rows
1634613308724:View(winning_tourney)
1634613501419:winning_tourney <- winning_tourney |>
1634613529865:arrange(n.length)
1634613571268:winning_tourney <- winning_tourney |>
1634613576154:arrange(n)
1634613609373:winning_tourney <- winning_tourney |>
1634613621900:arrange(desc(n))
1634613906737:#added 337 + 651 to get 988
1634613906746:winning_tourney <- vb_matches |>
1634613906755:filter(bracket == "Gold Medal" | bracket == "Finals") |>
1634613906764:count(w_player1, w_player2, .keep_all = TRUE)
1634613924828:View(winning_tourney)
1634613979631:winning_tourney <- vb_matches |>
1634613981339:filter(bracket == "Gold Medal" | bracket == "Finals") |>
1634613992875:count(w_player1, w_player2, gender)
1634614015186:winning_tourney <- winning_tourney |>
1634614015197:arrange(desc(n))
1634614062714:winning_tourney2 <- vb_matches |>
1634614080044:winning_tourney2 <- vb_matches |>
1634614083587:h
1634614088689:winning_tourney2 <- vb_matches |>
1634614098432:filter(bracket == "Gold Medal" | bracket == "Finals") |>
1634614112592:count(w_player1, w_player2)
1634614126298:winning_tourney2 <- winning_tourney2 |>
1634614129959:arrange(desc(n))
1634614138183:View(winiini_tourney2)
1634614157499:View(winning_tourney2)
1634614227762:vb_matches |>
1634614227773:count(bracket)
1634614227964:#added 337 + 651 to get 988
1634614227975:winning_tourney <- vb_matches |>
1634614227987:filter(bracket == "Gold Medal" | bracket == "Finals") |>
1634614227997:count(w_player1, w_player2, .keep_all = TRUE)
1634614228103:# size of tibble is 988 rows
1634614228116:winning_tourney <- winning_tourney |>
1634614228129:arrange(desc(n))
1634614228199:#I made a tibble with the number of wins from highest to lowest
1634614239121:winning_tourney
1634614261505:vb_matches |>
1634614261515:count(bracket)
1634614261557:#added 337 + 651 to get 988
1634614261565:winning_tourney <- vb_matches |>
1634614261575:filter(bracket == "Gold Medal" | bracket == "Finals") |>
1634614261584:count(w_player1, w_player2, gender)
1634614261686:# size of tibble is 988 rows
1634614261696:winning_tourney <- winning_tourney |>
1634614261709:arrange(desc(n))
1634614261764:#I made a tibble with the number of wins from highest to lowest
1634614328438:winning_tourney <- winnining tourney |>
1634614342524:winning_tourney <- winning tourney |>
1634614351371:winning_tourney <- winning_tourney |>
1634614369165:rename(wins = n)
1634614395007:vb_matches |>
1634614395017:count(bracket)
1634614395071:#added 337 + 651 to get 988
1634614395081:winning_tourney <- vb_matches |>
1634614395092:filter(bracket == "Gold Medal" | bracket == "Finals") |>
1634614395103:count(w_player1, w_player2, gender)
1634614395210:# size of tibble is 988 rows
1634614395220:winning_tourney <- winning_tourney |>
1634614395230:arrange(desc(n)) |>
1634614395240:rename(wins = n)
1634614395302:winning_tourney
1634614395342:#I made a tibble with the number of wins from highest to lowest
1634614635224:winnerwinner <- max_wins <- winning_tourney[which.max(winning_tourney$n),]
1634614644959:winnerwinner <- max_wins <- winning_tourney[which.max(winning_tourney$wins),]
1634614652294:View(winnerwinner)
1634614838832:count(wins <= 10)
1634614861121:count(winning_tourney$wins, wins <= 10)
1634614901976:count(winning_tourney$gender, gender <= 10)
1634614914747:count(winning_tourney$gender)
1634615160161:winning_tourney |>
1634615163789:silce(10)
1634615171025:winning_tourney |>
1634615187775:slice(n = 10)
1634615210088:winning_tourney |>
1634615217155:slice(n <= 10)
1634615254376:winning_tourney |>
1634615259885:slice(n 1:10)
1634615272681:winning_tourney |> slice(n = 1:10)
1634615351801:winning_tourney |>
1634615361866:count(gender)
1634615381584:winning_tourney <- winning_tourney |> slice(n = 1:10)
1634615389518:winning_tourney |>
1634615393120:count(gender)
1634615431166:winning_tourney |>
1634615439951:count(M)
1634615452170:winning_tourney |>
1634615459694:count(gender$M)
1634615557735:vb_matches |>
1634615557746:count(bracket)
1634615557798:#added 337 + 651 to get 988
1634615557808:winning_tourney <- vb_matches |>
1634615557820:filter(bracket == "Gold Medal" | bracket == "Finals") |>
1634615557830:count(w_player1, w_player2, gender)
1634615557937:# size of tibble is 988 rows
1634615557948:winning_tourney <- winning_tourney |>
1634615557957:arrange(desc(n)) |>
1634615557968:rename(wins = n)
1634615558038:winning_tourney
1634615558075:# ^^ I made a tibble with the number of wins from highest to lowest and renamed a column.
1634615558085:winnerwinner <- max_wins <- winning_tourney[which.max(winning_tourney$wins),]
1634615558109:winning_tourney <- winning_tourney |>
1634615558119:slice(n = 1:10) |>
1634615558129:count(gender)
1634615570830:winning_tourney
1634615600682:vb_matches |>
1634615600692:count(bracket)
1634615600741:#added 337 + 651 to get 988
1634615600751:winning_tourney <- vb_matches |>
1634615600761:filter(bracket == "Gold Medal" | bracket == "Finals") |>
1634615600772:count(w_player1, w_player2, gender)
1634615600871:# size of tibble is 988 rows
1634615600882:winning_tourney <- winning_tourney |>
1634615600893:arrange(desc(n)) |>
1634615600903:rename(wins = n)
1634615600977:winning_tourney
1634615601020:# ^^ I made a tibble with the number of wins from highest to lowest and renamed a column.
1634615601029:winnerwinner <- max_wins <- winning_tourney[which.max(winning_tourney$wins),]
1634615601053:winning_tourneytop10 <- winning_tourney |>
1634615601063:slice(n = 1:10) |>
1634615601073:count(gender)
1634615944188:View(winning_tourneytop10)
1634616048781:cat("There are", winning_tourneytop10[1,"n"], winning_tourneytop10[1,"gender"] )
1634616090286:winning_tourneytop10$n[1],
1634616097642:winning_tourneytop10$n[1]
1634616131762:cat("There are", winning_tourneytop10$n[1], winning_tourneytop10$gender[1])
1634616230775:vb_matches |>
1634616230786:count(bracket)
1634616230848:#added 337 + 651 to get 988
1634616230860:winning_tourney <- vb_matches |>
1634616230872:filter(bracket == "Gold Medal" | bracket == "Finals") |>
1634616230884:count(w_player1, w_player2, gender)
1634616231058:# size of tibble is 988 rows
1634616231069:winning_tourney <- winning_tourney |>
1634616231080:arrange(desc(n)) |>
1634616231092:rename(wins = n)
1634616231171:winning_tourney
1634616231216:# ^^ I made a tibble with the number of wins from highest to lowest and renamed a column.
1634616231229:winnerwinner <- max_wins <- winning_tourney[which.max(winning_tourney$wins),]
1634616231259:winning_tourneytop10 <- winning_tourney |>
1634616231272:slice(n = 1:10) |>
1634616231284:count(gender)
1634616231357:# I created two smaller tibbles so I can access data to answer the questions easier.
1634616231367:cat("The team with most wins is", winnerwinner$w_player1, "and", winnerwinner$w_player2, "with", winnerwinner$wins,"wins
1634616231377:")
1634616231413:cat("There are", winning_tourneytop10$n[1], winning_tourneytop10$gender[1], "or Male, and", winning_tourneytop10$n[2], winning_tourneytop10$gender[2], "or Female teams in the top 10")
1634616348354:avp_tourneys <- vb_matches |>
1634616364963:filter(circuit == "AVP")
1634616374885:view(avp_tourneys)
1634616388035:View(avp_tourneys)
1634616438710:avp+tourneys <- avp_tourneys |>
1634616507775:filter(year == 2018 | year == 2019)
1634616529437:avp_tourneys <- avp_tourneys |>
1634616533302:filter(year == 2018 | year == 2019)
1634616643340:avp_tourneys <- avp_tourneys |>
1634616645978:filter(year == 2018 | year == 2019) |>
1634616677965:distinct(tournament, year, .keep_all = TRUE)
1634616714870:avp_tourneys <- vb_matches |>
1634616724742:filter(circuit == "AVP") |>
1634616730548:filter(year == 2018 | year == 2019)
1634616743381:avp_tourneys <- avp_tourneys |>
1634616752178:distinct(tournament, year, gender, .keep_all = TRUE)
1634616935218:avp_tourneys <- vb_matches |>
1634616935229:filter(circuit == "AVP") |>
1634616935239:filter(year == 2018 | year == 2019) |>
1634616935252:distinct(tournament, year, .keep_all = TRUE)
1634617006883:avp_tourneys |>
1634617012305:count(year)
1634617210316:bothyears <- avp_tourneys |>
1634617215447:filter(year == 2018 & year == 2019)
1634617218925:bothyears
1634617235755:View(bothyears)
1634617348916:avp_tourneys |>
1634617356754:count(tournament)
1634617494391:bothyears <- avp_tourneys |>
1634617494400:count(tournament) |>
1634617494409:filter(n == 2)
1634617502149:View(bothyears)
1634617551381:bothyears$tournament
1634617708800:avp_tourneys <- vb_matches |>
1634617708810:filter(circuit == "AVP") |>
1634617708820:filter(year == 2018 | year == 2019) |>
1634617708835:distinct(tournament, year, .keep_all = TRUE)
1634617708945:yearcount <- avp_tourneys |>
1634617708956:count(year)
1634617708980:yearcount
1634617709008:bothyears <- avp_tourneys |>
1634617709018:count(tournament) |>
1634617709030:filter(n == 2)
1634617709060:cat(" from the table above, In 2018 there were 8 different cities that hosted tournaments in 2018, and 7 different cities in 2019
1634617709073:")
1634617709086:cat(bothyears$tournament, "were the cities that hosted the tournament in both 2018 and 2019")
1634617755154:avp_tourneys <- vb_matches |>
1634617755164:filter(circuit == "AVP") |>
1634617755173:filter(year == 2018 | year == 2019) |>
1634617755182:distinct(tournament, year, .keep_all = TRUE)
1634617755295:avp_tourneys
1634617755353:yearcount <- avp_tourneys |>
1634617755363:count(year)
1634617755389:yearcount
1634617755412:bothyears <- avp_tourneys |>
1634617755422:count(tournament) |>
1634617755432:filter(n == 2)
1634617755465:cat(" From the table above, In 2018 there were 8 different cities that hosted tournaments in 2018, and 7 different cities in 2019
1634617755475:")
1634617755485:cat(bothyears$tournament, "were the cities that hosted the tournament in both 2018 and 2019")
1634617791539:avp_tourneys <- vb_matches |>
1634617791553:filter(circuit == "AVP") |>
1634617791566:filter(year == 2018 | year == 2019) |>
1634617791584:distinct(tournament, year, .keep_all = TRUE)
1634617791680:avp_tourneys
1634617791739:yearcount <- avp_tourneys |>
1634617791749:count(year)
1634617791777:yearcount
1634617791803:bothyears <- avp_tourneys |>
1634617791813:count(tournament) |>
1634617791824:filter(n == 2)
1634617791852:cat(" From the table above, In 2018 there were 8 different cities that hosted tournaments in 2018, and 7 different cities in 2019
1634617791863:")
1634617791875:cat(bothyears$tournament, "were the cities that hosted the tournament in both 2018 and 2019")
1634617988602:shortestwoman <- vb_matches |>
1634618002607:filter(year == 2018 | year == 2019)
1634618075066:View(shortestwoman)
1634618122542:shortestwoman <- vb_matches |>
1634618122554:filter(year == 2018 | year == 2019) |>
1634618122563:filter(gender == "W")
1634618568668:shortest1 <- shortestwoman[which.min(shortestwoman$w_p1_hgt)]
1634618670949:min(shortestwoman$w_p1_hgt)
1634618684186:min(shortestwoman$w_p1_hgt, na.rm = TRUE)
1634618711626:min1 <- min(shortestwoman$w_p1_hgt, na.rm = TRUE)
1634618738691:min2 <-min(shortestwoman$w_p2_hgt, na.rm = TRUE)
1634618765823:min3 <- min(shortestwoman$l_p1_hgt, na.rm = TRUE)
1634618792390:min4 <- min(shortestwoman$l_p2_hgt, na.rm = TRUE)
1634618822476:min1
1634618824826:min2
1634618826707:min3
1634618828991:min4
1634618971567:shortestwoman |>
1634619014412:summarise_if(is.numeric, min)
1634619025172:shortestwoman |>
1634619036895:summarise_if(is.numeric, min, na.rm = TRUE)
1634619386316:shorty <- shortestwoman |>
1634619391977:summarise_if(is.numeric, min, na.rm = TRUE) |>
1634619397935:select(w_p1_hgt, w_p2_hgt, l_p1_hgt, l_p2_hgt)
1634619404661:View(shorty)
1634619533104:shorty <- shortestwoman[which.min(shortestwoman$l_p2_hgt)]
1634619571487:shorty <- shortestwoman |>
1634619589753:filter(l_p2_hgt == 61)
1634619604848:View(shorty)
1634619795154:#once I found the minimum height I looked for the rows that had the minimum height
1634619795164:shortestwoman <- shortestwoman |>
1634619795173:filter(l_p2_hgt == 61)
1634620042476:shortestwoman <- vb_matches |>
1634620042486:filter(year == 2018 | year == 2019) |>
1634620042497:filter(gender == "W")
1634620042547:#I find the minimum of all the columns and then compare only the minimum heights
1634620042556:shorty <- shortestwoman |>
1634620042567:summarise_if(is.numeric, min, na.rm = TRUE) |>
1634620042578:select(w_p1_hgt, w_p2_hgt, l_p1_hgt, l_p2_hgt)
1634620042653:shorty
1634620042677:#once I found the minimum height I looked for the rows that had the minimum height
1634620042687:shortestwoman <- shortestwoman |>
1634620042697:filter(l_p2_hgt == 61) |>
1634620042706:cat(" a. The shortest women's player to compete in a tournament in 2018/2019 was", shortestwoman$l_player2, "
1634620042716:")
1634620081614:shortestwoman <- vb_matches |>
1634620081624:filter(year == 2018 | year == 2019) |>
1634620081633:filter(gender == "W")
1634620081683:#I find the minimum of all the columns and then compare only the minimum heights
1634620081692:shorty <- shortestwoman |>
1634620081701:summarise_if(is.numeric, min, na.rm = TRUE) |>
1634620081710:select(w_p1_hgt, w_p2_hgt, l_p1_hgt, l_p2_hgt)
1634620081788:shorty
1634620081814:#once I found the minimum height I looked for the rows that had the minimum height
1634620081823:shortestwoman <- shortestwoman |>
1634620081832:filter(l_p2_hgt == 61)
1634620081950:cat(" a. The shortest women's player to compete in a tournament in 2018/2019 was", shortestwoman$l_player2, "
1634620081960:")
1634620081982:cat(" b. She is", shortestwoman$l_player2, "inches tall
1634620081991:")
1634620082016:cat(" c. The bracket shows she only made it to", shortestwoman$bracket)
1634620109096:shortestwoman <- vb_matches |>
1634620109107:filter(year == 2018 | year == 2019) |>
1634620109118:filter(gender == "W")
1634620109165:#I find the minimum of all the columns and then compare only the minimum heights
1634620109174:shorty <- shortestwoman |>
1634620109184:summarise_if(is.numeric, min, na.rm = TRUE) |>
1634620109194:select(w_p1_hgt, w_p2_hgt, l_p1_hgt, l_p2_hgt)
1634620109266:shorty
1634620109289:#once I found the minimum height I looked for the rows that had the minimum height
1634620109299:shortestwoman <- shortestwoman |>
1634620109309:filter(l_p2_hgt == 61)
1634620109420:cat(" a. The shortest women's player to compete in a tournament in 2018/2019 was", shortestwoman$l_player2, "
1634620109429:")
1634620109452:cat("b. She is", shortestwoman$l_p2_hgt, "inches tall
1634620109462:")
1634620109484:cat("c. The bracket shows she only made it to", shortestwoman$bracket)
1634620151543:shortestwoman <- vb_matches |>
1634620151554:filter(year == 2018 | year == 2019) |>
1634620151567:filter(gender == "W")
1634620151616:#I find the minimum of all the columns and then compare only the minimum heights
1634620151627:shorty <- shortestwoman |>
1634620151638:summarise_if(is.numeric, min, na.rm = TRUE) |>
1634620151649:select(w_p1_hgt, w_p2_hgt, l_p1_hgt, l_p2_hgt)
1634620151724:shorty
1634620151749:#once I found the minimum height I looked for the rows that had the minimum height
1634620151758:shortestwoman <- shortestwoman |>
1634620151768:filter(l_p2_hgt == 61) |>
1634620151779:distinct(l_player2)
1634620151806:cat(" a. The shortest women's player to compete in a tournament in 2018/2019 was", shortestwoman$l_player2, "
1634620151817:")
1634620151837:cat("b. She is", shortestwoman$l_p2_hgt, "inches tall
1634620151847:")
1634620151867:cat("c. The bracket shows she only made it to", shortestwoman$bracket)
1634620185747:shortestwoman <- vb_matches |>
1634620185760:filter(year == 2018 | year == 2019) |>
1634620185770:filter(gender == "W")
1634620185817:#I find the minimum of all the columns and then compare only the minimum heights
1634620185828:shorty <- shortestwoman |>
1634620185838:summarise_if(is.numeric, min, na.rm = TRUE) |>
1634620185851:select(w_p1_hgt, w_p2_hgt, l_p1_hgt, l_p2_hgt)
1634620185932:shorty
1634620185958:#once I found the minimum height I looked for the rows that had the minimum height
1634620185967:shortestwoman <- shortestwoman |>
1634620185976:filter(l_p2_hgt == 61) |>
1634620185986:distinct(l_player2, .keep_all = TRUE)
1634620186057:cat(" a. The shortest women's player to compete in a tournament in 2018/2019 was", shortestwoman$l_player2, "
1634620186066:")
1634620186083:cat("b. She is", shortestwoman$l_p2_hgt, "inches tall
1634620186093:")
1634620186111:cat("c. The bracket shows she only made it to", shortestwoman$bracket)
1634620233194:vb_matches |>
1634620252822:filter( == 61)
1634620501259:jh
1634620501272:countrytourn <- vb_matches |>
1634620501962:h
1634620508241:countrytourn <- vb_matches |>
1634620529594:filter(circuit == "FIVB")
1634620536107:View(countrytourn)
1634620611810:countrytourn <- vb_matches |>
1634620611820:filter(circuit == "FIVB") |>
1634620611828:distinct(tournament, .keep_all = TRUE)
1634620732180:countrytourn <- vb_matches |>
1634620732190:filter(circuit == "FIVB")
1634620771333:countrytourn <- vb_matches |>
1634620771342:filter(circuit == "FIVB") |>
1634620771351:distinct(year, .keep_all = TRUE)x
1634620775304:countrytourn <- vb_matches |>
1634620775312:filter(circuit == "FIVB") |>
1634620775320:distinct(year, .keep_all = TRUE)
1634620877968:countrytourn <- vb_matches |>
1634620877977:filter(circuit == "FIVB")
1634621031495:countrytourn <- vb_matches |>
1634621031503:filter(circuit == "FIVB") |>
1634621031512:group_by(tournament, year) |>
1634621031521:filter(n()>1)
1634621089276:huh <- countrytourn |>
1634621102712:group_by(tournament, year) |>
1634621105575:View(huh)
1634621114764:huh <- countrytourn |>
1634621119422:group_by(tournament, year)
1634621124107:View(huh)
1634621148187:huh <- huh |>
1634621198603:filter(yearcount()>1)
1634621214918:huh <- huh |>
1634621219667:filter(n()>1)
1634621365137:countrytourn <- vb_matches |>
1634621365147:filter(circuit == "FIVB") |>
1634621365155:distinct(tournament, year, .keep_all = TRUE)
1634621396688:countrytourn |>
1634621406288:filter(tournament == "Sydney")
1634621468409:countrytourn <- vb_matches |>
1634621468418:filter(circuit == "FIVB")
1634621503493:countrytorun |>
1634621513211:filter(circuit == "Sydney")
1634621529091:countrytorun |>
1634621536936:filter(tournament == "Sydney")
1634621557000:countrytourn <- countrytourn |>
1634621568112:filter(tournament == "Sydney")
1634621703081:countrytourn <- vb_matches |>
1634621703092:filter(circuit == "FIVB") |>
1634621703106:distinct(tournament, year, .keep_all = TRUE)
1634621738290:countrytourn <- vb_matches |>
1634621738298:filter(circuit == "FIVB") |>
1634621738305:distinct(tournament, year, .keep_all = TRUE) |>
1634621738313:group_by(tournament, year)
1634621792384:countrytourn <- vb_matches |>
1634621792393:filter(circuit == "FIVB") |>
1634621792401:distinct(tournament, year, .keep_all = TRUE) |>
1634621792409:group_by(tournament)
1634621911565:countrytourn <- countrytourn |>
1634621924113:arrange(tournament, by_group = TRUE)
1634622069080:yearcount2 <- countrytourn |>
1634622069090:count(tournament)
1634622076767:View(yearcount2)
1634622099285:max(yearcount2)
1634622131994:max(yearcount2$n)
1634622342446:countrytourn <- vb_matches |>
1634622342455:filter(circuit == "FIVB") |>
1634622342465:distinct(tournament, year, .keep_all = TRUE) |>
1634622342474:arrange(country, by_group = TRUE)
1634622438622:ggplot(
1634622438631:data = countrytourn,
1634622438639:mapping = aes(x = country, y = year, color = country)
1634622438647:) +
1634622438655:geom_point() +
1634622457229:h <- ggplot(
1634622457238:data = countrytourn,
1634622457246:mapping = aes(x = country, y = year, color = country)
1634622457254:) +
1634622457262:geom_point() +
1634622461015:h
1634622479724:ggplot(
1634622479732:data = countrytourn,
1634622479740:mapping = aes(x = country, y = year, color = country)
1634622479747:) +
1634622479754:geom_point()
1634622588380:ggplot(
1634622588388:data = countrytourn,
1634622588396:mapping = aes(x = year, y = country, color = country)
1634622588404:) +
1634622588412:geom_bar()
1634622787315:ggplot(
1634622787323:data = countrytourn,
1634622787330:mapping = aes(x = year, y = country, color = country)
1634622787337:) +
1634622787346:geom_point()
1634622885737:ggplot(
1634622885748:data = countrytourn,
1634622885756:mapping = aes(x = year, y = country, color = year)
1634622885766:) +
1634622885776:geom_point()
1634622965446:countrytourn <- vb_matches |>
1634622965457:filter(circuit == "FIVB") |>
1634622965468:distinct(tournament, year, .keep_all = TRUE) |>
1634622965479:arrange(country, by_group = TRUE)
1634622965617:##yearcount2 <- countrytourn |>
1634622965627:##count(tournament)
1634622965638:h <- ggplot(
1634622965650:data = countrytourn,
1634622965660:mapping = aes(x = year, y = country)
1634622965670:) +
1634622965680:geom_point() +
1634622965691:labs(
1634622965701:title = "Tournaments hosted by country",
1634622965711:x = "Flipper Length (mm)",
1634622965722:y = "Body Mass (g)",
1634622965733:color = "Country",
1634622965743:)
1634622965870:)
1634622979721:ggplot(
1634622979730:data = countrytourn,
1634622979737:mapping = aes(x = year, y = country)
1634622979744:) +
1634622979751:geom_point()
1634622989434:countrytourn <- vb_matches |>
1634622989444:filter(circuit == "FIVB") |>
1634622989454:distinct(tournament, year, .keep_all = TRUE) |>
1634622989465:arrange(country, by_group = TRUE)
1634622989596:##yearcount2 <- countrytourn |>
1634622989607:##count(tournament)
1634622989618:h <- ggplot(
1634622989628:data = countrytourn,
1634622989639:mapping = aes(x = year, y = country, color = year)
1634622989649:) +
1634622989660:geom_point() +
1634622989670:labs(
1634622989680:title = "Tournaments hosted by country",
1634622989691:x = "Flipper Length (mm)",
1634622989701:y = "Body Mass (g)",
1634622989712:color = "Country",
1634622989724:)
1634622989850:)
1634623025802:countrytourn <- vb_matches |>
1634623025818:filter(circuit == "FIVB") |>
1634623025829:distinct(tournament, year, .keep_all = TRUE) |>
1634623025839:arrange(country, by_group = TRUE)
1634623025983:##yearcount2 <- countrytourn |>
1634623025994:##count(tournament)
1634623026003:h <- ggplot(
1634623026013:data = countrytourn,
1634623026023:mapping = aes(x = year, y = country, color = year)
1634623026034:) +
1634623026044:geom_point() +
1634623026053:labs(
1634623026063:title = "Tournaments hosted by country",
1634623026073:x = "Flipper Length (mm)",
1634623026083:y = "Body Mass (g)",
1634623026092:color = "Country",
1634623026102:)
1634623239025:toplot <- vb_matches |>
1634623253784:filter(circuit == "AVP") |>
1634623280462:filter(bracket == "Finals" | bracket == "Gold Medal")|>
1634623299346:filter(year == 2018 | year == 2019)
1634623305593:View(toplot)
1634624146132:avg_team_height <- rowMeans(toplot,[c('w_p1_hgt', 'w_p2_hgt')], na.rm=TRUE)
1634624165421:avg_team_height <- rowMeans(toplot,[c('w_p1_hgt', 'w_p2_hgt')], na.rm=TRUE)
1634624174949:avg_team_height <- rowMeans(toplot,c('w_p1_hgt', 'w_p2_hgt'), na.rm=TRUE)
1634624188445:avg_team_height <- rowMeans(toplot,('w_p1_hgt', 'w_p2_hgt'), na.rm=TRUE)
1634624232069:avg_team_height <- rowMeans((w_p1_hgt', 'w_p2_hgt'), na.rm=TRUE)
1634624490121:avg_team_height <- colMeans(toplot[ , c(w_p1_hgt, w_p2_hgt)])
1634624527283:avg_team_height <- colMeans(toplot[ , c('w_p1_hgt', 'w_p2_hgt')])
1634624540641:View(avg_team_height)
1634624598103:avg_team_height <- RowMeans(toplot[ , c('w_p1_hgt', 'w_p2_hgt')])
1634624614230:avg_team_height <- rowMeans(toplot[ , c('w_p1_hgt', 'w_p2_hgt')])
1634624619724:View(avg_team_height)
1634624781468:toplot <- toplot |>
1634624796357:arrange(toplot, gender, .by_group = TRUE)
1634624823962:toplot <- toplot |>
1634624835824:arrange(toplot, gender, .by_group = FALSE)
1634624996865:toplot <- toplot |>
1634625023567:add_column(AverageHgt = avg_team_height)
1634625080264:toplot$AverageHgt
1634625101363:View(toplot)
1634625353188:toplot$gender <- as.factor(toplot$gender)
1634625373724:ggplot()
1634625386999:ggplot(data = toplot,)
1634625506173:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634625523132:geom_boxplot()+
1634625560168:labs( title = "Average team heights for AVP match winners in 2018 and 2019")
1634625650947:toplot <- vb_matches |>
1634625650955:filter(circuit == "AVP") |>
1634625650963:filter(bracket == "Finals" | bracket == "Gold Medal")|>
1634625650970:filter(year == 2018 | year == 2019)
1634625710276:toplot <- vb_matches |>
1634625710284:filter(circuit == "AVP") |>
1634625710292:filter(bracket == "Finals" | bracket == "Gold Medal")|>
1634625710302:filter(year == 2018 | year == 2019)
1634625801522:toplot <- vb_matches |>
1634625808905:filter(circuit == "AVP")
1634625849971:toplot <- toplot |>
1634625874912:filter(bracket == "Finals"| bracket == "Gold Medal")
1634625947355:toplot <- vb_matches |>
1634625952178:filter(circuit == "AVP")
1634625979702:toplot <- toplot |>
1634625992728:filter(year == 2019 | year == 2018)
1634626170728:toplot |>
1634626175041:count(bracket)
1634626309857:toplot <- vb_matches |>
1634626309869:filter(circuit == "AVP") |>
1634626309880:filter(year == 2018 | year == 2019)
1634626309926:#if i use only the winners its only going to be from the US so im not sure what to do
1634626309936:#filter(bracket == "Finals" | bracket == "Gold Medal")|>
1634626309946:#ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634626309955:# geom_boxplot()+
1634626309965:# labs( title = "Average team heights for AVP match winners in 2018 and 2019")
1634626309983:avg_team_height <- rowMeans(toplot[ , c('w_p1_hgt', 'w_p2_hgt')])
1634626309999:toplot <- toplot |>
1634626310011:add_column(AverageHgt = avg_team_height)
1634626310028:toplot$gender <- as.factor(toplot$gender)
1634626380282:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634626380298:geom_boxplot()+
1634626380311:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634626380323:facet_wrap(~gender)
1634626485548:toplot <- vb_matches |>
1634626485557:filter(circuit == "AVP") |>
1634626485564:filter(year == 2018 | year == 2019)
1634626492586:avg_team_height <- rowMeans(toplot[ , c('w_p1_hgt', 'w_p2_hgt')])
1634626492595:toplot <- toplot |>
1634626492602:add_column(AverageHgt = avg_team_height)
1634626492611:toplot$gender <- as.factor(toplot$gender)
1634626492623:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634626492632:geom_boxplot()+
1634626492639:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634626492646:facet_wrap(~gender)
1634626513095:toplot <- vb_matches |>
1634626513104:filter(circuit == "AVP")
1634626519228:avg_team_height <- rowMeans(toplot[ , c('w_p1_hgt', 'w_p2_hgt')])
1634626519242:toplot <- toplot |>
1634626519250:add_column(AverageHgt = avg_team_height)
1634626519260:toplot$gender <- as.factor(toplot$gender)
1634626525014:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634626525022:geom_boxplot()+
1634626525030:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634626525038:facet_wrap(~gender)
1634684147037:nrow(vb_matches$circuit)
1634684160199:nrow(vb_matches$circuit, na.rm = TRUE)
1634684202871:library(tidyverse)
1634684216378:nrow(vb_matches$circuit)
1634684263870:vb_matches |>
1634684278271:count(circuit)
1634684447641:matchnum <- vb_matches |>
1634684447649:count(circuit)
1634684463440:matchnum$n[1]
1634684503571:cat("There are a total of", matchnum$n[1], "AVP Matches and", matchnum$n[2], "FIVB Matches")
1634684622168:AVPmatches <- vb_matches |>
1634684630972:filter(circuit == 'AVP')
1634684636197:View(AVPmatches)
1634684767778:countrytourn <- vb_matches |>
1634684767788:filter(circuit == "FIVB") |>
1634684767797:distinct(tournament, year, .keep_all = TRUE) |>
1634684767806:arrange(country, by_group = TRUE)
1634684767975:##yearcount2 <- countrytourn |>
1634684767983:##count(tournament)
1634684767991:h <- ggplot(
1634684767999:data = countrytourn,
1634684768007:mapping = aes(x = year, y = country, color = year)
1634684768015:) +
1634684768022:geom_point() +
1634684768034:labs(
1634684768042:title = "Tournaments hosted by country",
1634684768050:x = "Flipper Length (mm)",
1634684768058:y = "Body Mass (g)",
1634684768068:color = "Country",
1634684768077:)
1634684853712:countrytourn |>
1634684863139:count(country)
1634684911418:countrycount <- countrytourn |>
1634684916445:count(country)
1634684921741:View(countrycount)
1634684952701:countrycount <- countrycount |>
1634684979263:arrange(desc(n))
1634685184013:ggplot(
1634685184019:data = countrytourn,
1634685184026:mapping = aes(x = year, y = country, color = year)
1634685184032:) +
1634685184038:geom_point()
1634685208905:ggplot(
1634685208911:data = countrytourn,
1634685208918:mapping = aes(x = year, y = country, color = country)
1634685208924:) +
1634685208931:geom_point()
1634685532294:ggplot(
1634685532304:data = countrytourn,
1634685532312:mapping = aes(x = year, y = fct_infreq(country), color = country)
1634685532318:) +
1634685532324:geom_point()
1634685695947:ggplot(
1634685695954:data = countrytourn,
1634685695961:mapping = aes(x = year, y = country, color = country)
1634685695967:) +
1634685695973:geom_point() +
1634685695979:theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
1634685725909:ggplot(
1634685725916:data = countrytourn,
1634685725922:mapping = aes(x = year, y = country, color = country)
1634685725929:) +
1634685725936:geom_point()+
1634685725942:theme(plot.margin = unit(c(10, 10, 10, 10), "cm"))
1634685853460:ggplot(
1634685853467:data = countrytourn,
1634685853474:mapping = aes(x = year, y = country, color = country)
1634685853481:) +
1634685853488:geom_point() + facet_wrap(~country)
1634685877718:ggplot(
1634685877726:+     data = countrytourn,
1634685877810:+     mapping = aes(x = year, y = country, color = country)
1634685877818:+ ) +
1634685877826:+     geom_point() + facet_wrap(~year)
1634685893889:ggplot(
1634685893895:+     data = countrytourn,
1634685893902:+     mapping = aes(x = year, y = country, color = country)
1634685893909:+ ) +
1634685893915:+     geom_point() + facet_wrap(~year)
1634685917124:ggplot(
1634685917131:+     data = countrytourn,
1634685917139:+     mapping = aes(x = year, y = country, color = country)
1634685917146:+ ) +
1634685917153:+     geom_point() + facet_wrap(~country)
1634685925280:ggplot(
1634685925287:data = countrytourn,
1634685925294:mapping = aes(x = year, y = country, color = country)
1634685925301:) +
1634685925308:geom_point()
1634686387477:ggplot(
1634686387484:data = countrytourn,
1634686387492:mapping = aes(x = year, y = country, color = country)
1634686387499:) +
1634686387506:scale_shape_manual(values = 0:length(unique(countrytourn$year)))
1634686547915:ggplot(
1634686547925:+     data = countrytourn,
1634686547934:+     mapping = aes(x = year, y = country, color = country)
1634686547942:+ ) +h
1634686552118:ggplot(
1634686552125:data = countrytourn,
1634686552132:mapping = aes(x = year, y = country, color = country)
1634686552139:) +
1634686552145:geom_point() +
1634686567505:options(repr.plot.width=15, repr.plot.height=8)
1634686599034:ggplot(
1634686599041:data = countrytourn,
1634686599049:mapping = aes(x = year, y = country, color = country)
1634686599055:) +
1634686599062:geom_point() + options(repr.plot.width=20, repr.plot.height=20)
1634686626373:rlang::last_error()
1634686644985:ggplot(
1634686644992:data = countrytourn,
1634686644998:mapping = aes(x = year, y = country, color = country)
1634686645005:) +
1634686645012:geom_point() +
1634686654450:options(repr.plot.width=20, repr.plot.height=20)
1634686865309:ggplot(
1634686865316:data = countrytourn,
1634686865322:mapping = aes(x = year, y = country, color = country)
1634686865328:) +
1634686865333:geom_point() +
1634686870745:theme_gray(base_size = 33)
1634686889056:ggplot(
1634686889063:+     data = countrytourn,
1634686889069:+     mapping = aes(x = year, y = country, color = country)
1634686889076:+ ) +
1634686889082:+     geom_point() +
1634686889088:+ theme_gray(base_size = 10)
1634686903865:ggplot(
1634686903872:data = countrytourn,
1634686903878:mapping = aes(x = year, y = country, color = country)
1634686903884:) +
1634686903890:geom_point() +
1634686905899:theme_gray(base_size = 10)
1634686939598:ggplot(
1634686939605:data = countrytourn,
1634686939612:mapping = aes(x = year, y = country, color = country)
1634686939618:) +
1634686939624:geom_point() +
1634686939630:theme_gray(base_size = 15)
1634686954977:ggplot(
1634686954984:data = countrytourn,
1634686954991:mapping = aes(x = year, y = country, color = country)
1634686954997:) +
1634686955003:geom_point() +
1634686955010:theme_gray(base_size = 10) +
1634686964973:ggplot(
1634686964981:data = countrytourn,
1634686964988:mapping = aes(x = year, y = country, color = country)
1634686964996:) +
1634686965003:geom_point() +
1634686965011:theme_gray(base_size = 10)
1634686987856:ggplot(
1634686987863:data = countrytourn,
1634686987873:mapping = aes(x = year, y = country, color = country)
1634686987883:) +
1634686987890:geom_point() +
1634686987897:theme_gray(base_size = 10)
1634687061990:ggplot(
1634687061998:data = countrytourn,
1634687062005:mapping = aes(x = year, y = country, color = country)
1634687062011:) +
1634687062018:geom_point(size =1) +
1634687062025:theme_gray(base_size = 10)
1634687390901:ggplot(
1634687390908:data = countrytourn,
1634687390915:mapping = aes(x = year, y = country, color = country)
1634687390921:) +
1634687390928:geom_point(size =1) +
1634687390935:theme_gray(base_size = 10) +
1634687390941:scale_x_continuous("year", labels = as.character(year), breaks = year)
1634687423735:ggplot(
1634687423743:data = countrytourn,
1634687423749:mapping = aes(x = year, y = country, color = country)
1634687423757:) +
1634687423764:geom_point(size =1) +
1634687423770:theme_gray(base_size = 10) +
1634687423777:scale_x_continuous()
1634687478425:ggplot(
1634687478432:data = countrytourn,
1634687478438:mapping = aes(x = factor(year), y = country, color = country)
1634687478444:) +
1634687478450:geom_point(size =1) +
1634687478455:theme_gray(base_size = 10)
1634687535421:ggplot(
1634687535428:data = countrytourn,
1634687535434:mapping = aes(x = factor(year), y = country, color = country)
1634687535441:) +
1634687535447:geom_point(size = 1) +
1634687535454:theme_gray(base_size = 10) +
1634687535460:theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
1634687564307:ggplot(
1634687564314:data = countrytourn,
1634687564321:mapping = aes(x = factor(year), y = country, color = country)
1634687564327:) +
1634687564333:geom_point(size = 1) +
1634687564340:theme_gray(base_size = 10) +
1634687564346:theme(axis.text.x = element_text(angle = 90, vjust = 1.0))
1634687591639:ggplot(
1634687591646:data = countrytourn,
1634687591653:mapping = aes(x = factor(year), y = country, color = country)
1634687591660:) +
1634687591666:geom_point(size = 0.5) +
1634687591672:theme_gray(base_size = 10) +
1634687591678:theme(axis.text.x = element_text(angle = 90, vjust = 1.5))
1634687652268:ggplot(
1634687652275:data = countrytourn,
1634687652281:mapping = aes(x = factor(year), y = country, color = country)
1634687652287:) +
1634687652293:geom_point(size = 0.5) +
1634687652299:theme_gray(base_size = 10) +
1634687652305:theme(axis.text.x = element_text(angle = 90, vjust = 1.5)) +
1634687652311:theme(axis.text.y = element_text( vjust = 1.5))
1634687682767:ggplot(
1634687682775:data = countrytourn,
1634687682782:mapping = aes(x = factor(year), y = country, color = country)
1634687682789:) +
1634687682796:geom_point(size = 0.5) +
1634687682803:theme_gray(base_size = 10) +
1634687682810:theme(axis.text.x = element_text(angle = 90, vjust = 1.0))
1634688032306:ggplot(
1634688032314:data = countrytourn,
1634688032320:mapping = aes(x = factor(year), y = country, color = country)
1634688032328:) +
1634688032336:geom_point(size = 0.5) +
1634688032343:theme_gray(base_size = 10) +
1634688032350:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634688032357:theme(aspect.ratio=1)
1634688067259:ggplot(
1634688067266:data = countrytourn,
1634688067273:mapping = aes(x = factor(year), y = country, color = country)
1634688067280:) +
1634688067287:geom_point(size = 0.5) +
1634688067294:theme_gray(base_size = 10) +
1634688067300:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634688067307:theme(aspect.ratio=16/9)
1634688098450:ggplot(
1634688098458:data = countrytourn,
1634688098464:mapping = aes(x = factor(year), y = country, color = country)
1634688098473:) +
1634688098481:geom_point(size = 0.5) +
1634688098488:theme_gray(base_size = 10) +
1634688098495:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634688098501:theme(aspect.ratio=3/1)
1634688121650:ggplot(
1634688121658:data = countrytourn,
1634688121666:mapping = aes(x = factor(year), y = country, color = country)
1634688121673:) +
1634688121681:geom_point(size = 0.5) +
1634688121688:theme_gray(base_size = 10) +
1634688121695:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634688121703:theme(aspect.ratio=5/2)
1634688377914:ggplot(
1634688377921:data = countrytourn,
1634688377928:mapping = aes(x = factor(year), y = fct_infreq(country), color = country)
1634688377934:) +
1634688377940:geom_point(size = 0.5) +
1634688377946:theme_gray(base_size = 10) +
1634688377953:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634688377963:theme(aspect.ratio=5/2)
1634688717504:ggplot(
1634688717511:data = countrytourn,
1634688717520:mapping = aes(x = factor(year), y = fct_infreq(country), color = country)
1634688717527:) +
1634688717533:geom_point(size = 0.5) +
1634688717540:theme_gray(base_size = 10) +
1634688717547:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634688717553:theme(aspect.ratio=5/2) +
1634688717560:facet_wrap(~country)
1634688785162:ggplot(
1634688785169:data = countrytourn,
1634688785176:mapping = aes(x = factor(year), y = fct_infreq(country), color = country)
1634688785183:) +
1634688785189:geom_point(size = 0.5) +
1634688785195:theme_gray(base_size = 10) +
1634688785202:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634688785208:theme(aspect.ratio=5/2) +
1634688785214:facet_wrap(~year)
1634688836313:ggplot(
1634688836321:data = countrytourn,
1634688836328:mapping = aes(x = factor(year), y = fct_infreq(tournament))
1634688836335:) +
1634688836342:geom_point(size = 0.5) +
1634688836348:theme_gray(base_size = 10) +
1634688836355:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634688836361:theme(aspect.ratio=5/2) +
1634688836367:facet_wrap(~country)
1634688961631:ggplot(
1634688961639:data = countrytourn,
1634688961646:mapping = aes(x = factor(year), y = fct_infreq(country), color = country)
1634688961653:) +
1634688961660:geom_point(size = 0.5) +
1634688961667:theme_gray(base_size = 10) +
1634688961674:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634688961681:theme(aspect.ratio=5/2) +
1634688961687:facet_wrap(~gender)
1634689016547:ggplot(
1634689016554:data = countrytourn,
1634689016561:mapping = aes(x = factor(year), y = fct_infreq(country), color = country)
1634689016568:) +
1634689016575:geom_point(size = 0.5) +
1634689016582:theme_gray(base_size = 10) +
1634689016588:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634689016595:theme(aspect.ratio=5/2) +
1634689016601:labs(
1634689016608:title = "FIVB Tournaments hosted by country",
1634689016614:x = "Year",
1634689016620:y = "Country",
1634689016626:color = "Country",
1634689016633:)
1634689052411:ggplot(
1634689052418:data = countrytourn,
1634689052425:mapping = aes(x = factor(year), y = fct_infreq(country), color = country)
1634689052432:) +
1634689052439:geom_point(size = 0.5) +
1634689052446:theme_gray(base_size = 10) +
1634689052452:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634689052459:theme(aspect.ratio=5/2) +
1634689052466:labs(
1634689052473:title = "FIVB Tournaments hosted by country",
1634689052481:x = "Year",
1634689052488:y = "Country",
1634689052495:)
1634689984282:ggplot(
1634689984288:data = countrytourn,
1634689984295:mapping = aes(x = fct_infreq(country), y = tournament, color = country)
1634689984301:) +
1634689984308:geom_point(size = 0.5) +
1634689984314:theme_gray(base_size = 10) +
1634689984320:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634689984328:theme(aspect.ratio=5/2) +
1634689984335:facet_wrap(~year)
1634690411400:png(file="name_of_img_save.png",width=3300 ,height=2000,res=150)
1634690411408:ggplot(
1634690411415:data = countrytourn,
1634690411421:mapping = aes(x = fct_infreq(country), y = tournament, color = country)
1634690411426:) +
1634690411432:geom_point(size = 0.5) +
1634690411438:theme_gray(base_size = 10) +
1634690411444:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634690411451:theme(aspect.ratio=5/2) +
1634690411457:facet_wrap(~year)
1634690526295:png(file="name_of_img_save.png",width=3300 ,height=2000,res=150)
1634690526303:ggplot(
1634690526309:data = countrytourn,
1634690526315:mapping = aes(x = fct_infreq(country), y = tournament, color = country)
1634690526320:) +
1634690526326:geom_point(size = 0.5) +
1634690526332:theme_gray(base_size = 10) +
1634690526338:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634690526344:theme(aspect.ratio=5/2) +
1634690526350:facet_wrap(~year)
1634690533466:png(file="name_of_img_save.png",width=3300 ,height=2000,res=150)
1634690533474:ggplot(
1634690533481:data = countrytourn,
1634690533488:mapping = aes(x = fct_infreq(country), y = tournament, color = country)
1634690533494:) +
1634690533501:geom_point(size = 0.5) +
1634690533509:theme_gray(base_size = 10) +
1634690533515:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634690533521:theme(aspect.ratio=5/2) +
1634690533527:facet_wrap(~year)
1634690535252:dev.off()
1634690656574:g <- ggplot(
1634690656581:data = countrytourn,
1634690656588:mapping = aes(x = fct_infreq(country), y = tournament, color = country)
1634690656594:) +
1634690656601:geom_point(size = 0.5) +
1634690656607:theme_gray(base_size = 10) +
1634690656613:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634690656619:theme(aspect.ratio=5/2) +
1634690656625:facet_wrap(~year)
1634690656646:ggsave(g, height = 3300, width = 2000)
1634690682734:data = countrytourn,
1634690682741:mapping = aes(x = fct_infreq(country), y = tournament, color = country)
1634690682748:) +
1634690682754:geom_point(size = 0.5) +
1634690682760:theme_gray(base_size = 10) +
1634690682766:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634690682772:theme(aspect.ratio=5/2) +
1634690682779:facet_wrap(~year)
1634690682799:ggsave(g, height = 3300, width = 2000)
1634690687862:rlang::last_error()
1634691197069:ggplot(
1634691197076:data = countrytourn,
1634691197083:mapping = aes(x = fct_infreq(country), y = tournament, color = country)
1634691197090:) +
1634691197097:geom_point(size = 0.5) +
1634691197103:theme_gray(base_size = 10) +
1634691197109:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634691197114:theme(aspect.ratio=5/2) +
1634691197120:facet_wrap(~year)
1634691199218:dev.new(width = 1000, height = 1000, unit = "in")
1634691285981:options(repr.plot.width = 100, repr.plot.height = 100)
1634691285988:ggplot(
1634691285994:data = countrytourn,
1634691286000:mapping = aes(x = fct_infreq(country), y = tournament, color = country)
1634691286006:) +
1634691286012:geom_point(size = 0.5) +
1634691286018:theme_gray(base_size = 10) +
1634691286024:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634691286029:theme(aspect.ratio=5/2) +
1634691286034:facet_wrap(~year)
1634691306602:ggplot(
1634691306608:data = countrytourn,
1634691306614:mapping = aes(x = fct_infreq(country), y = tournament, color = country)
1634691306620:) +
1634691306626:geom_point(size = 0.5) +
1634691306631:theme_gray(base_size = 10) +
1634691306637:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634691306643:theme(aspect.ratio=5/2) +
1634691306649:facet_wrap(~year)
1634691308487:options(repr.plot.width = 100, repr.plot.height = 100)
1634691773122:ggplot(
1634691773130:data = countrytourn,
1634691773137:mapping = aes(y = fct_infreq(country)))
1634691842283:ggplot(
1634691842290:data = countrytourn,
1634691842297:mapping = aes(y = fct_infreq(country))) + facet_wrap(~year)
1634691968880:yearcount2 <- countrytourn |>
1634691968887:count(country, year)
1634691976975:View(yearcount2)
1634692331559:countrytourn <- vb_matches |>
1634692331566:filter(circuit == "FIVB")
1634692437689:countrytourn <- vb_matches |>
1634692437696:filter(circuit == "FIVB") |>
1634692437705:distinct(tournament, year, .keep_all = TRUE)
1634692455497:countrytourn <- vb_matches |>
1634692455504:filter(circuit == "FIVB") |>
1634692455511:distinct(tournament, year, .keep_all = TRUE) |>
1634692455517:arrange(country, by_group = TRUE)
1634692785486:ggplot(
1634692785493:data = yearcount2,
1634692785499:mapping = aes(x = fct_infreq(country)), y = n, color = country
1634692785505:) +
1634692785511:geom_point(size = 0.5) +
1634692785517:theme_gray(base_size = 10) +
1634692785522:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634692785528:theme(aspect.ratio=5/2) +
1634692785533:facet_wrap(~year)
1634692827277:ggplot(
1634692827283:data = yearcount2,
1634692827289:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634692827296:) +
1634692827302:geom_point(size = 0.5) +
1634692827308:theme_gray(base_size = 10) +
1634692827315:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634692827321:theme(aspect.ratio=5/2) +
1634692827328:facet_wrap(~year)
1634692912825:ggplot(
1634692912832:data = yearcount2,
1634692912839:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634692912846:) +
1634692912852:geom_bar(size = 0.5) +
1634692912859:theme_gray(base_size = 10) +
1634692912865:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634692912871:theme(aspect.ratio=5/2) +
1634692912877:facet_wrap(~year)
1634693042489:ggplot(
1634693042497:data = yearcount2,
1634693042504:mapping = aes(x = fct_infreq(country))) +
1634693042511:geom_bar(size = 0.5)
1634693110857:ggplot(
1634693110864:data = yearcount2,
1634693110871:mapping = aes(x = fct_infreq(country), color = country)
1634693110877:) +
1634693110883:geom_bar(size = 0.5) +
1634693110890:theme_gray(base_size = 10) +
1634693110896:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693110904:theme(aspect.ratio=5/2) +
1634693110911:facet_wrap(~year)
1634693406123:countrytourn <- vb_matches |>
1634693406137:filter(circuit == "FIVB") |>
1634693406145:distinct(tournament, year, .keep_all = TRUE) |>
1634693406154:arrange(country, by_group = TRUE)
1634693406312:yearcount2 <- countrytourn |>
1634693406320:count(country, year)
1634693406363:ggplot(
1634693406371:data = yearcount2,
1634693406379:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634693406387:) +
1634693406395:geom_dot(size = 0.5) +
1634693406403:theme_gray(base_size = 10) +
1634693406411:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693406420:theme(aspect.ratio=5/2) +
1634693406428:facet_wrap(~year)
1634693423324:countrytourn <- vb_matches |>
1634693423333:filter(circuit == "FIVB") |>
1634693423342:distinct(tournament, year, .keep_all = TRUE) |>
1634693423352:arrange(country, by_group = TRUE)
1634693423491:yearcount2 <- countrytourn |>
1634693423500:count(country, year)
1634693423532:ggplot(
1634693423540:data = yearcount2,
1634693423549:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634693423557:) +
1634693423566:geom_point(size = 0.5) +
1634693423576:theme_gray(base_size = 10) +
1634693423586:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693423594:theme(aspect.ratio=5/2) +
1634693423603:facet_wrap(~year)
1634693425921:options(repr.plot.width = 100, repr.plot.height = 100)
1634693425931:labs(
1634693425940:title = "FIVB Tournaments hosted by country",
1634693425948:x = "Country",
1634693425956:y = "number of tournaments per year",
1634693425964:)
1634693448431:countrytourn <- vb_matches |>
1634693448439:filter(circuit == "FIVB") |>
1634693448451:distinct(tournament, year, .keep_all = TRUE) |>
1634693448462:arrange(country, by_group = TRUE)
1634693448639:yearcount2 <- countrytourn |>
1634693448648:count(country, year)
1634693448686:p <- ggplot(
1634693448695:data = yearcount2,
1634693448703:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634693448711:) +
1634693448720:geom_point(size = 0.5) +
1634693448728:theme_gray(base_size = 10) +
1634693448736:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693448745:theme(aspect.ratio=5/2) +
1634693448755:facet_wrap(~year)
1634693449039:options(repr.plot.width = 100, repr.plot.height = 100)
1634693449050:labs(
1634693449059:title = "FIVB Tournaments hosted by country",
1634693449070:x = "Country",
1634693449081:y = "number of tournaments per year",
1634693449091:)
1634693449136:print(p)
1634693471706:countrytourn <- vb_matches |>
1634693471715:filter(circuit == "FIVB") |>
1634693471724:distinct(tournament, year, .keep_all = TRUE) |>
1634693471734:arrange(country, by_group = TRUE)
1634693471867:yearcount2 <- countrytourn |>
1634693471875:count(country, year)
1634693471914:p <- ggplot(
1634693471922:data = yearcount2,
1634693471929:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634693471936:) +
1634693471945:geom_point(size = 0.5) +
1634693471954:theme_gray(base_size = 10) +
1634693471963:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693471971:theme(aspect.ratio=5/2) +
1634693471980:facet_wrap(~year)
1634693472315:options(repr.plot.width = 100, repr.plot.height = 100)
1634693472325:labs(
1634693472333:title = "FIVB Tournaments hosted by country",
1634693472342:x = "Country",
1634693472352:y = "number of tournaments per year",
1634693472362:)
1634693472419:p
1634693507389:countrytourn <- vb_matches |>
1634693507398:filter(circuit == "FIVB") |>
1634693507407:distinct(tournament, year, .keep_all = TRUE) |>
1634693507414:arrange(country, by_group = TRUE)
1634693507572:yearcount2 <- countrytourn |>
1634693507582:count(country, year)
1634693507712:p <- ggplot(
1634693507721:data = yearcount2,
1634693507729:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634693507737:) +
1634693507745:geom_point(size = 0.5) +
1634693507753:theme_gray(base_size = 10) +
1634693507762:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693507770:theme(aspect.ratio=5/2) +
1634693507779:facet_wrap(~year)
1634693508070:options(repr.plot.width = 100, repr.plot.height = 100)
1634693508080:labs(
1634693508089:title = "FIVB Tournaments hosted by country",
1634693508098:x = "Country",
1634693508108:y = "number of tournaments per year",
1634693508117:)
1634693508177:p
1634693535379:countrytourn <- vb_matches |>
1634693535389:filter(circuit == "FIVB") |>
1634693535399:distinct(tournament, year, .keep_all = TRUE) |>
1634693535409:arrange(country, by_group = TRUE)
1634693535584:yearcount2 <- countrytourn |>
1634693535594:count(country, year)
1634693535628:p <- ggplot(
1634693535638:data = yearcount2,
1634693535648:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634693535659:) +
1634693535669:geom_point(size = 0.5) +
1634693535679:theme_gray(base_size = 10) +
1634693535689:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693535700:theme(aspect.ratio=5/2) +
1634693535710:facet_wrap(~year)
1634693535997:options(repr.plot.width = 100, repr.plot.height = 100)
1634693536012:labs(
1634693536025:title = "FIVB Tournaments hosted by country",
1634693536033:x = "Country",
1634693536041:y = "number of tournaments per year",
1634693536054:)
1634693536112:p
1634693566850:countrytourn <- vb_matches |>
1634693566861:filter(circuit == "FIVB") |>
1634693566871:distinct(tournament, year, .keep_all = TRUE) |>
1634693566881:arrange(country, by_group = TRUE)
1634693567077:yearcount2 <- countrytourn |>
1634693567086:count(country, year)
1634693567124:p <- ggplot(
1634693567132:data = yearcount2,
1634693567140:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634693567148:) +
1634693567157:geom_point(size = 0.5) +
1634693567165:theme_gray(base_size = 10) +
1634693567174:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693567184:theme(aspect.ratio=5/2) +
1634693567194:facet_wrap(~year)
1634693567701:options(repr.plot.width = 1000, repr.plot.height = 1000)
1634693567710:labs(
1634693567718:title = "FIVB Tournaments hosted by country",
1634693567726:x = "Country",
1634693567734:y = "number of tournaments per year",
1634693567741:)
1634693567800:p
1634693601078:countrytourn <- vb_matches |>
1634693601089:filter(circuit == "FIVB") |>
1634693601099:distinct(tournament, year, .keep_all = TRUE) |>
1634693601121:arrange(country, by_group = TRUE)
1634693601264:yearcount2 <- countrytourn |>
1634693601273:count(country, year)
1634693601305:p <- ggplot(
1634693601314:data = yearcount2,
1634693601323:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634693601332:) +
1634693601341:geom_point(size = 0.5) +
1634693601350:theme_gray(base_size = 10) +
1634693601359:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693601368:theme(aspect.ratio=5/2) +
1634693601378:facet_wrap(~year)
1634693601675:options(repr.plot.width = 1000, repr.plot.height = 1000) +
1634693601684:labs(
1634693601692:title = "FIVB Tournaments hosted by country",
1634693601701:x = "Country",
1634693601709:y = "number of tournaments per year",
1634693601718:)
1634693629865:countrytourn <- vb_matches |>
1634693629886:filter(circuit == "FIVB") |>
1634693629896:distinct(tournament, year, .keep_all = TRUE) |>
1634693629907:arrange(country, by_group = TRUE)
1634693630066:yearcount2 <- countrytourn |>
1634693630076:count(country, year)
1634693630128:p <- ggplot(
1634693630138:data = yearcount2,
1634693630149:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634693630159:) +
1634693630169:geom_point(size = 0.5) +
1634693630178:theme_gray(base_size = 10) +
1634693630187:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693630198:theme(aspect.ratio=5/2) +
1634693630207:facet_wrap(~year) +
1634693630216:options(repr.plot.width = 1000, repr.plot.height = 1000) +
1634693630226:labs(
1634693630236:title = "FIVB Tournaments hosted by country",
1634693630246:x = "Country",
1634693630257:y = "number of tournaments per year",
1634693630267:)
1634693664170:countrytourn <- vb_matches |>
1634693664181:filter(circuit == "FIVB") |>
1634693664190:distinct(tournament, year, .keep_all = TRUE) |>
1634693664200:arrange(country, by_group = TRUE)
1634693664380:yearcount2 <- countrytourn |>
1634693664389:count(country, year)
1634693664422:p <- ggplot(
1634693664431:data = yearcount2,
1634693664439:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634693664448:) +
1634693664458:geom_point(size = 0.5) +
1634693664467:theme_gray(base_size = 10) +
1634693664477:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693664485:theme(aspect.ratio=5/2) +
1634693664496:facet_wrap(~year)  +
1634693664505:labs(
1634693664515:title = "FIVB Tournaments hosted by country",
1634693664524:x = "Country",
1634693664534:y = "number of tournaments per year",
1634693664544:)
1634693664882:p
1634693683414:countrytourn <- vb_matches |>
1634693683424:filter(circuit == "FIVB") |>
1634693683433:distinct(tournament, year, .keep_all = TRUE) |>
1634693683442:arrange(country, by_group = TRUE)
1634693683616:yearcount2 <- countrytourn |>
1634693683625:count(country, year)
1634693683664:p <- ggplot(
1634693683674:data = yearcount2,
1634693683683:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634693683691:) +
1634693683700:geom_point(size = 0.5) +
1634693683708:theme_gray(base_size = 10) +
1634693683717:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693683726:theme(aspect.ratio=5/2) +
1634693683735:facet_wrap(~year)  +
1634693683744:labs(
1634693683754:title = "FIVB Tournaments hosted by country",
1634693683764:x = "Country",
1634693683775:y = "number of tournaments per year",
1634693683785:)
1634693684092:p
1634693757994:ggplot(
1634693758001:data = yearcount2,
1634693758008:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634693758014:) +
1634693758020:geom_point(size = 0.5) +
1634693758026:theme_gray(base_size = 10) +
1634693758033:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634693758039:theme(aspect.ratio=5/2) +
1634693758045:facet_wrap(~year)  +
1634693758051:labs(
1634693758058:title = "FIVB Tournaments hosted by country",
1634693758064:x = "Country",
1634693758070:y = "number of tournaments per year",
1634693758078:)
1634694258852:ggplot(
1634694258859:data = yearcount2,
1634694258866:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634694258874:) +
1634694258881:geom_point(size = 0.5) +
1634694258888:theme_gray(base_size = 10) +
1634694258895:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634694258902:theme(aspect.ratio=5/2) +
1634694258908:facet_grid(year ~ .)
1634694460434:ggplot(
1634694460441:data = yearcount2,
1634694460449:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634694460455:) +
1634694460462:geom_point(size = 0.5) +
1634694460469:theme_gray(base_size = 10) +
1634694460475:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634694460482:theme(aspect.ratio=5/2) +
1634694460488:facet_grid(year ~ ., ncol = 1,
1634694460494:labeller = label_wrap_gen(width = 12))
1634694483393:ggplot(
1634694483400:data = yearcount2,
1634694483407:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634694483414:) +
1634694483421:geom_point(size = 0.5) +
1634694483427:theme_gray(base_size = 10) +
1634694483433:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634694483438:theme(aspect.ratio=5/2) +
1634694483445:facet_grid(year ~ ., nrow = 1,
1634694483452:labeller = label_wrap_gen(width = 12))
1634694504571:ggplot(
1634694504579:data = yearcount2,
1634694504586:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634694504593:) +
1634694504599:geom_point(size = 0.5) +
1634694504605:theme_gray(base_size = 10) +
1634694504612:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634694504619:theme(aspect.ratio=5/2) +
1634694504625:facet_grid(year ~ .,
1634694504632:labeller = label_wrap_gen(width = 12))
1634694535141:p <- ggplot(
1634694535149:data = yearcount2,
1634694535157:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634694535164:) +
1634694535170:geom_point(size = 0.5) +
1634694535177:theme_gray(base_size = 10) +
1634694535183:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634694535191:theme(aspect.ratio=5/2) +
1634694535198:facet_grid(year ~ .,
1634694535204:labeller = label_wrap_gen(width = 12))  +
1634694535210:labs(
1634694535216:title = "FIVB Tournaments hosted by country",
1634694535222:x = "Country",
1634694535229:y = "number of tournaments per year",
1634694535235:)
1634694545376:summarise(p)
1634694550115:glimpse(p)
1634694666665:countrytourn <- vb_matches |>
1634694666676:filter(circuit == "FIVB") |>
1634694666686:distinct(tournament, year, .keep_all = TRUE) |>
1634694666695:arrange(country, by_group = TRUE)
1634694666805:yearcount2 <- countrytourn |>
1634694666815:count(country, year)
1634694666847:p <- ggplot(
1634694666855:data = yearcount2,
1634694666864:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634694666873:) +
1634694666881:geom_point(size = 0.5) +
1634694666890:theme_gray(base_size = 10) +
1634694666898:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634694666906:theme(aspect.ratio=5/2) +
1634694666914:facet_grid(year ~ .,
1634694666922:labeller = label_wrap_gen(width = 12))  +
1634694666932:labs(
1634694666942:title = "FIVB Tournaments hosted by country",
1634694666952:x = "Country",
1634694666963:y = "number of tournaments per year",
1634694666973:)
1634694667287:p
1634694686742:countrytourn <- vb_matches |>
1634694686751:filter(circuit == "FIVB") |>
1634694686759:distinct(tournament, year, .keep_all = TRUE) |>
1634694686767:arrange(country, by_group = TRUE)
1634694686908:yearcount2 <- countrytourn |>
1634694686916:count(country, year)
1634694686959:p <- ggplot(
1634694686971:data = yearcount2,
1634694686982:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634694686993:) +
1634694687003:geom_point(size = 0.5) +
1634694687013:theme_gray(base_size = 10) +
1634694687023:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634694687033:theme(aspect.ratio=5/2) +
1634694687045:facet_grid(year ~ .,
1634694687055:labeller = label_wrap_gen(width = 12))  +
1634694687065:labs(
1634694687077:title = "FIVB Tournaments hosted by country",
1634694687088:x = "Country",
1634694687099:y = "number of tournaments per year",
1634694687109:)
1634694687360:p
1634694712269:countrytourn <- vb_matches |>
1634694712279:filter(circuit == "FIVB") |>
1634694712288:distinct(tournament, year, .keep_all = TRUE) |>
1634694712296:arrange(country, by_group = TRUE)
1634694712474:yearcount2 <- countrytourn |>
1634694712484:count(country, year)
1634694712529:p <- ggplot(
1634694712537:data = yearcount2,
1634694712547:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634694712556:) +
1634694712565:geom_point(size = 0.5) +
1634694712575:theme_gray(base_size = 10) +
1634694712585:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634694712594:theme(aspect.ratio=5/2) +
1634694712603:facet_grid(year ~ .,
1634694712612:labeller = label_wrap_gen(width = 12))  +
1634694712621:labs(
1634694712630:title = "FIVB Tournaments hosted by country",
1634694712640:x = "Country",
1634694712651:y = "number of tournaments per year",
1634694712661:)
1634694712938:p
1634694728525:countrytourn <- vb_matches |>
1634694728535:filter(circuit == "FIVB") |>
1634694728549:distinct(tournament, year, .keep_all = TRUE) |>
1634694728559:arrange(country, by_group = TRUE)
1634694728651:yearcount2 <- countrytourn |>
1634694728660:count(country, year)
1634694728694:p <- ggplot(
1634694728702:data = yearcount2,
1634694728710:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634694728718:) +
1634694728726:geom_point(size = 0.5) +
1634694728735:theme_gray(base_size = 10) +
1634694728743:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634694728751:theme(aspect.ratio=5/2) +
1634694728760:facet_grid(year ~ .,
1634694728770:labeller = label_wrap_gen(width = 12))  +
1634694728780:labs(
1634694728788:title = "FIVB Tournaments hosted by country",
1634694728796:x = "Country",
1634694728804:y = "number of tournaments per year",
1634694728811:)
1634694729077:p
1634694737391:countrytourn <- vb_matches |>
1634694737399:filter(circuit == "FIVB") |>
1634694737407:distinct(tournament, year, .keep_all = TRUE) |>
1634694737416:arrange(country, by_group = TRUE)
1634694737530:yearcount2 <- countrytourn |>
1634694737540:count(country, year)
1634694737592:p <- ggplot(
1634694737601:data = yearcount2,
1634694737610:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634694737618:) +
1634694737627:geom_point(size = 0.5) +
1634694737635:theme_gray(base_size = 10) +
1634694737645:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634694737653:theme(aspect.ratio=5/2) +
1634694737662:facet_grid(year ~ .,
1634694737671:labeller = label_wrap_gen(width = 12))  +
1634694737680:labs(
1634694737689:title = "FIVB Tournaments hosted by country",
1634694737698:x = "Country",
1634694737707:y = "number of tournaments per year",
1634694737715:)
1634694738016:p
1634695057697:ggplot(
1634695057704:data = yearcount2,
1634695057710:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634695057717:) +
1634695057723:geom_point(size = 0.5) +
1634695057729:theme_gray(base_size = 10) +
1634695057735:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634695057741:theme(aspect.ratio=5/2) +
1634695057747:facet_grid(year ~ .,
1634695057753:labeller = label_wrap_gen(width = 12))
1634695098227:ggplot(
1634695098235:data = yearcount2,
1634695098241:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634695098248:) + facet_grid(year ~ .,
1634695098255:labeller = label_wrap_gen(width = 12))
1634695137464:ggplot(
1634695137472:data = yearcount2,
1634695137479:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634695137485:) +
1634695137493:geom_point(size = 0.5) + facet_grid(year ~ .,
1634695137500:+                labeller = label_wrap_gen(width = 12))
1634695160414:ggplot(
1634695160421:data = yearcount2,
1634695160428:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634695160435:) +
1634695160442:geom_point(size = 0.5) + facet_grid(year ~ .,
1634695160449:labeller = label_wrap_gen(width = 12))
1634695209155:fig.height= 100, fig.width = 200
1634695363009:countrytourn <- vb_matches |>
1634695363018:filter(circuit == "FIVB") |>
1634695363031:distinct(tournament, year, .keep_all = TRUE) |>
1634695363040:arrange(country, by_group = TRUE)
1634695363199:yearcount2 <- countrytourn |>
1634695363207:count(country, year)
1634695363244:p <- ggplot(
1634695363254:data = yearcount2,
1634695363262:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634695363270:) +
1634695363279:geom_point(size = 0.5) +
1634695363287:theme_gray(base_size = 10) +
1634695363295:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634695363303:theme(aspect.ratio=5/2) +
1634695363311:facet_grid(year ~ .,
1634695363320:labeller = label_wrap_gen(width = 12))  +
1634695363328:labs(
1634695363337:title = "FIVB Tournaments hosted by country",
1634695363345:x = "Country",
1634695363356:y = "number of tournaments per year",
1634695363366:)
1634695363700:pngfile <- fs::path(knitr::fig_path(),  "basis.png")
1634695363720:# I'm explicitly calling the device functions so you can see the dimensions
1634695363729:# used
1634695363738:agg_png(pngfile, width = 40, height = 50, units = "cm", res = 300)
1634695463838:countrytourn <- vb_matches |>
1634695463848:filter(circuit == "FIVB") |>
1634695463858:distinct(tournament, year, .keep_all = TRUE) |>
1634695463869:arrange(country, by_group = TRUE)
1634695464121:yearcount2 <- countrytourn |>
1634695464129:count(country, year)
1634695464176:p <- ggplot(
1634695464185:data = yearcount2,
1634695464193:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634695464201:) +
1634695464209:geom_point(size = 0.5) +
1634695464217:theme_gray(base_size = 10) +
1634695464224:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634695464232:theme(aspect.ratio=5/2) +
1634695464240:facet_grid(year ~ .,
1634695464251:labeller = label_wrap_gen(width = 12))  +
1634695464260:labs(
1634695464268:title = "FIVB Tournaments hosted by country",
1634695464276:x = "Country",
1634695464285:y = "number of tournaments per year",
1634695464294:)
1634695464535:options(repr.plot.width=400, repr.plot.height=400)
1634695464551:p
1634695496896:ggplot(
1634695496903:data = yearcount2,
1634695496910:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634695496917:) +
1634695496924:geom_point(size = 0.5) +
1634695496929:theme_gray(base_size = 10) +
1634695496935:theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634695496940:theme(aspect.ratio=5/2) +
1634695496947:facet_grid(year ~ .,
1634695496954:labeller = label_wrap_gen(width = 12))  +
1634695496960:labs(
1634695496966:title = "FIVB Tournaments hosted by country",
1634695496972:x = "Country",
1634695496978:y = "number of tournaments per year",
1634695496984:)
1634695499094:options(repr.plot.width=400, repr.plot.height=400)
1634695790373:ggplot(
1634695790381:data = yearcount2,
1634695790387:mapping = aes(x = fct_infreq(country), y = n, color = country)
1634695790394:) +
1634695790400:geom_point(size = 0.5) + facet_grid(year~, scales='free_x', space='free_x') +
1634695790406:force_panelsizes(cols = c(0.3, 1))
1634695967607:ggplot(
1634695967614:data = yearcount2,
1634695967620:mapping = aes(x = fct_infreq(country), y = n)
1634695967626:) +
1634695967634:geom_point(size = 0.5) + facet_grid(year ~ .,
1634695967640:labeller = label_wrap_gen(width = 12))
1634696040125:countrytourn <- vb_matches |>
1634696040136:filter(circuit == "FIVB") |>
1634696040146:distinct(tournament, year, .keep_all = TRUE) |>
1634696040165:arrange(country, by_group = TRUE)
1634696040310:yearcount2 <- countrytourn |>
1634696040320:count(country, year)
1634696040365:p <- ggplot(
1634696040375:data = yearcount2,
1634696040385:mapping = aes(x = fct_infreq(country), y = n)
1634696040393:) +
1634696040402:geom_point(size = 0.5) +
1634696040410:#theme_gray(base_size = 10) +
1634696040418:#theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634696040427:# theme(aspect.ratio=5/2) +
1634696040436:facet_grid(year ~ .,
1634696040446:labeller = label_wrap_gen(width = 12)) +
1634696040463:labs(
1634696040472:title = "FIVB Tournaments hosted by country",
1634696040482:x = "Country",
1634696040491:y = "number of tournaments per year",
1634696040501:)
1634696040548:options(repr.plot.width=400, repr.plot.height=400)
1634696040568:p
1634696061055:countrytourn <- vb_matches |>
1634696061066:filter(circuit == "FIVB") |>
1634696061076:distinct(tournament, year, .keep_all = TRUE) |>
1634696061085:arrange(country, by_group = TRUE)
1634696061242:yearcount2 <- countrytourn |>
1634696061250:count(country, year)
1634696061285:p <- ggplot(
1634696061293:data = yearcount2,
1634696061301:mapping = aes(x = fct_infreq(country), y = n)
1634696061308:) +
1634696061316:geom_point(size = 0.5) +
1634696061323:#theme_gray(base_size = 10) +
1634696061331:#theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634696061340:# theme(aspect.ratio=5/2) +
1634696061349:facet_grid(year ~ .,
1634696061357:labeller = label_wrap_gen(width = 12)) +
1634696061371:labs(
1634696061380:title = "FIVB Tournaments hosted by country",
1634696061389:x = "Country",
1634696061398:y = "number of tournaments per year",
1634696061406:)
1634696061457:options(repr.plot.width=400, repr.plot.height=400)
1634696061473:p
1634696121861:countrytourn <- vb_matches |>
1634696121872:filter(circuit == "FIVB") |>
1634696121882:distinct(tournament, year, .keep_all = TRUE) |>
1634696121892:arrange(country, by_group = TRUE)
1634696122090:yearcount2 <- countrytourn |>
1634696122100:count(country, year)
1634696122142:p <- ggplot(
1634696122151:data = yearcount2,
1634696122160:mapping = aes(x = fct_infreq(country), y = n)
1634696122169:) +
1634696122178:geom_point(size = 0.5) +
1634696122186:#theme_gray(base_size = 10) +
1634696122194:#theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634696122202:# theme(aspect.ratio=5/2) +
1634696122210:facet_grid(year ~ .,
1634696122218:labeller = label_wrap_gen(width = 12)) +
1634696122233:labs(
1634696122242:title = "FIVB Tournaments hosted by country",
1634696122255:x = "Country",
1634696122265:y = "number of tournaments per year",
1634696122275:)
1634696122336:p
1634696154493:countrytourn <- vb_matches |>
1634696154504:filter(circuit == "FIVB") |>
1634696154514:distinct(tournament, year, .keep_all = TRUE) |>
1634696154523:arrange(country, by_group = TRUE)
1634696154689:yearcount2 <- countrytourn |>
1634696154698:count(country, year)
1634696154734:p <- ggplot(
1634696154744:data = yearcount2,
1634696154755:mapping = aes(x = fct_infreq(country), y = n)
1634696154771:) +
1634696154780:geom_point(size = 0.5) +
1634696154787:#theme_gray(base_size = 10) +
1634696154795:#theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634696154803:# theme(aspect.ratio=5/2) +
1634696154811:facet_grid(~year,
1634696154819:labeller = label_wrap_gen(width = 12)) +
1634696154834:labs(
1634696154844:title = "FIVB Tournaments hosted by country",
1634696154854:x = "Country",
1634696154863:y = "number of tournaments per year",
1634696154872:)
1634696154922:p
1634696305948:countrytourn <- vb_matches |>
1634696305958:filter(circuit == "FIVB") |>
1634696305969:distinct(tournament, year, .keep_all = TRUE) |>
1634696305989:arrange(country, by_group = TRUE)
1634696306159:yearcount2 <- countrytourn |>
1634696306169:count(country, year)
1634696306228:p <- ggplot(
1634696306237:data = yearcount2,
1634696306248:mapping = aes(x = fct_infreq(country), y = n)
1634696306259:) +
1634696306269:geom_point(size = 0.5) +
1634696306280:#theme_gray(base_size = 10) +
1634696306289:#theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634696306298:# theme(aspect.ratio=5/2) +
1634696306306:facet_grid(year ~.,
1634696306314:labeller = label_wrap_gen(width = 12)) +
1634696306330:labs(
1634696306338:title = "FIVB Tournaments hosted by country",
1634696306348:x = "Country",
1634696306357:y = "number of tournaments per year",
1634696306367:)
1634696306428:plot(p)
1634696327105:countrytourn <- vb_matches |>
1634696327115:filter(circuit == "FIVB") |>
1634696327124:distinct(tournament, year, .keep_all = TRUE) |>
1634696327132:arrange(country, by_group = TRUE)
1634696327245:yearcount2 <- countrytourn |>
1634696327254:count(country, year)
1634696327329:p <- ggplot(
1634696327337:data = yearcount2,
1634696327348:mapping = aes(x = fct_infreq(country), y = n)
1634696327358:) +
1634696327367:geom_point(size = 0.5) +
1634696327376:#theme_gray(base_size = 10) +
1634696327384:#theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634696327393:# theme(aspect.ratio=5/2) +
1634696327401:facet_grid(year ~.,
1634696327410:labeller = label_wrap_gen(width = 12)) +
1634696327425:labs(
1634696327434:title = "FIVB Tournaments hosted by country",
1634696327442:x = "Country",
1634696327451:y = "number of tournaments per year",
1634696327460:)
1634696327525:plot(p)
1634696341364:countrytourn <- vb_matches |>
1634696341374:filter(circuit == "FIVB") |>
1634696341384:distinct(tournament, year, .keep_all = TRUE) |>
1634696341394:arrange(country, by_group = TRUE)
1634696341537:yearcount2 <- countrytourn |>
1634696341546:count(country, year)
1634696341580:p <- ggplot(
1634696341588:data = yearcount2,
1634696341595:mapping = aes(x = fct_infreq(country), y = n)
1634696341603:) +
1634696341611:geom_point(size = 0.5) +
1634696341618:#theme_gray(base_size = 10) +
1634696341626:#theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634696341634:# theme(aspect.ratio=5/2) +
1634696341641:facet_grid(year ~.,
1634696341649:labeller = label_wrap_gen(width = 12)) +
1634696341666:labs(
1634696341675:title = "FIVB Tournaments hosted by country",
1634696341684:x = "Country",
1634696341695:y = "number of tournaments per year",
1634696341707:)
1634696341768:plot(p)
1634696501531:countrytourn <- vb_matches |>
1634696501541:filter(circuit == "FIVB") |>
1634696501550:distinct(tournament, year, .keep_all = TRUE) |>
1634696501559:arrange(country, by_group = TRUE)
1634696501667:yearcount2 <- countrytourn |>
1634696501676:count(country, year)
1634696501711:p <- ggplot(
1634696501718:data = yearcount2,
1634696501726:mapping = aes(x = fct_infreq(country), y = n)
1634696501733:) +
1634696501741:geom_point(size = 0.5) +
1634696501748:#theme_gray(base_size = 10) +
1634696501756:#theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634696501763:# theme(aspect.ratio=5/2) +
1634696501771:facet_grid(year ~.,
1634696501779:labeller = label_wrap_gen(width = 12)) +
1634696501792:labs(
1634696501799:title = "FIVB Tournaments hosted by country",
1634696501806:x = "Country",
1634696501813:y = "number of tournaments per year",
1634696501820:)
1634696501875:svg(width = 2000, height = 7)
1634696501888:par(mfrow=c(4,1), mar = c(4, 4, 0, 2))
1634696501896:for (i in 1:4){
1634696501906:plot((sin(1:10000/100)+rnorm(10000)/5),type='l',
1634696501917:bty = "l", xaxs = "i")
1634696501928:}
1634696502049:dev.off()
1634696519434:countrytourn <- vb_matches |>
1634696519444:filter(circuit == "FIVB") |>
1634696519464:distinct(tournament, year, .keep_all = TRUE) |>
1634696519474:arrange(country, by_group = TRUE)
1634696519654:yearcount2 <- countrytourn |>
1634696519664:count(country, year)
1634696519703:p <- ggplot(
1634696519711:data = yearcount2,
1634696519719:mapping = aes(x = fct_infreq(country), y = n)
1634696519727:) +
1634696519734:geom_point(size = 0.5) +
1634696519742:#theme_gray(base_size = 10) +
1634696519751:#theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634696519761:# theme(aspect.ratio=5/2) +
1634696519770:facet_grid(year ~.,
1634696519778:labeller = label_wrap_gen(width = 12)) +
1634696519793:labs(
1634696519801:title = "FIVB Tournaments hosted by country",
1634696519808:x = "Country",
1634696519815:y = "number of tournaments per year",
1634696519823:)
1634696519865:svg(width = 2000, height = 7)
1634696519876:par(mfrow=c(4,1), mar = c(4, 4, 0, 2))
1634696519885:for (i in 1:4){
1634696519893:plot((sin(1:10000/100)+rnorm(10000)/5),type='l',
1634696519901:bty = "l", xaxs = "i")
1634696519909:}
1634696519953:dev.off()
1634696520140:plot(p)
1634696648092:countrytourn <- vb_matches |>
1634696648102:filter(circuit == "FIVB") |>
1634696648110:distinct(tournament, year, .keep_all = TRUE) |>
1634696648125:arrange(country, by_group = TRUE)
1634696648258:yearcount2 <- countrytourn |>
1634696648267:count(country, year)
1634696648300:p <- ggplot(
1634696648307:data = yearcount2,
1634696648314:mapping = aes(x = fct_infreq(country), y = n)
1634696648321:) +
1634696648329:geom_point(size = 0.5) +
1634696648335:#theme_gray(base_size = 10) +
1634696648343:#theme(axis.text.x = element_text(angle = 90, vjust = 1.0)) +
1634696648351:# theme(aspect.ratio=5/2) +
1634696648359:facet_grid(year ~.,
1634696648367:labeller = label_wrap_gen(width = 12)) +
1634696648381:labs(
1634696648388:title = "FIVB Tournaments hosted by country",
1634696648396:x = "Country",
1634696648404:y = "number of tournaments per year",
1634696648411:)
1634696648447:ggsave("tst.png",height=9,width=12,dpi=72)
1634696649570:plot(p)
1634696736610:countrytourn <- vb_matches |>
1634696736620:filter(circuit == "FIVB") |>
1634696736629:distinct(tournament, year, .keep_all = TRUE) |>
1634696736640:arrange(country, by_group = TRUE)
1634696736808:yearcount2 <- countrytourn |>
1634696736818:count(country, year)
1634696736875:p <- ggplot(
1634696736884:data = yearcount2,
1634696736893:mapping = aes(x = fct_infreq(country), y = n)
1634696736902:) +
1634696736912:geom_point(size = 0.2) +
1634696736921:facet_grid(year ~.,
1634696736931:labeller = label_wrap_gen(width = 12)) +
1634696736949:labs(
1634696736958:title = "FIVB Tournaments hosted by country",
1634696736968:x = "Country",
1634696736978:y = "number of tournaments per year",
1634696736987:)
1634696737046:plot(p)
1634696972453:toplot <- vb_matches |>
1634696972460:filter(circuit == "AVP") |>
1634696972467:filter(year == 2018 | year == 2019) |>
1634696972474:filter(bracket == "Finals" | bracket == "Gold Medal")
1634696978576:View(toplot)
1634697132837:toplot <- vb_matches |>
1634697132845:filter(circuit == "AVP")
1634697221610:toplot <- vb_matches |>
1634697221617:filter(circuit == "AVP") |>
1634697221623:filter(year == 2018 | year == 2019) |>
1634697221629:filter(bracket == "Winner's Bracket")
1634697264793:avg_team_height <- rowMeans(toplot[ , c('w_p1_hgt', 'w_p2_hgt')])
1634697264801:toplot <- toplot |>
1634697264807:add_column(AverageHgt = avg_team_height)
1634697264816:toplot$gender <- as.factor(toplot$gender)
1634697272143:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634697272150:geom_boxplot()+
1634697272157:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634697272164:facet_wrap(~gender)
1634697320366:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634697320374:geom_boxplot()+
1634697320380:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634697320390:facet_wrap(gender ~.)
1634697344940:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634697344947:geom_boxplot()+
1634697344954:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634697344961:facet_wrap(gender~)
1634697458174:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634697458182:geom_boxplot()+
1634697458189:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634697458195:facet_wrap(~gender)
1634697476765:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634697476773:geom_boxplot()+
1634697476780:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634697476786:facet_wrap(gender~. )
1634697517170:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634697517176:geom_boxplot()+
1634697517183:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634697517190:facet_grid(gender~. )
1634697590298:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634697590304:geom_boxplot()+
1634697590310:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634697590316:facet_grid(.~gender )
1634697638018:countrytourn <- vb_matches |>
1634697638029:filter(circuit == "FIVB") |>
1634697638048:distinct(tournament, year, .keep_all = TRUE) |>
1634697638059:arrange(country, by_group = TRUE)
1634697638214:yearcount2 <- countrytourn |>
1634697638223:count(country, year)
1634697638257:p <- ggplot(
1634697638266:data = yearcount2,
1634697638275:mapping = aes(x = fct_infreq(country), y = n)
1634697638283:) +
1634697638292:geom_point(size = 0.2) +
1634697638300:facet_grid(year ~.,
1634697638308:labeller = label_wrap_gen(width = 12), scales = "free") +
1634697638323:labs(
1634697638332:title = "FIVB Tournaments hosted by country",
1634697638341:x = "Country",
1634697638350:y = "number of tournaments per year",
1634697638359:)
1634697638414:plot(p)
1634697659683:countrytourn <- vb_matches |>
1634697659693:filter(circuit == "FIVB") |>
1634697659703:distinct(tournament, year, .keep_all = TRUE) |>
1634697659712:arrange(country, by_group = TRUE)
1634697659883:yearcount2 <- countrytourn |>
1634697659892:count(country, year)
1634697659925:p <- ggplot(
1634697659933:data = yearcount2,
1634697659941:mapping = aes(x = fct_infreq(country), y = n)
1634697659949:) +
1634697659957:geom_point(size = 0.2) +
1634697659966:facet_grid(year ~.,
1634697659974:labeller = label_wrap_gen(width = 12), scales = "free") +
1634697659989:labs(
1634697659998:title = "FIVB Tournaments hosted by country",
1634697660006:x = "Country",
1634697660014:y = "number of tournaments per year",
1634697660021:)
1634697660059:plot(p)
1634697757903:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634697757909:geom_boxplot()+
1634697757914:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634697757920:facet_grid(gender~., nrow = 2)
1634697850200:ggplot (data = toplot, mapping = aes(x = country, y = AverageHgt, color = country)) +
1634697850208:geom_boxplot()+
1634697850215:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634697850222:facet_wrap(~gender, ncol =1 )
1634699528226:toplot <- vb_matches |>
1634699528233:filter(circuit == "AVP") |>
1634699528239:filter(year == 2018 | year == 2019)
1634699528296:avg_team_height <- rowMeans(toplot[ , c('w_p1_hgt', 'w_p2_hgt')])
1634699528303:toplot <- toplot |>
1634699528309:add_column(AverageHgt = avg_team_height)
1634699528318:toplot$gender <- as.factor(toplot$gender)
1634699537112:avg_team_height
1634699733091:avg_team_height <- rowMeans(toplot[ , c('w_p1_hgt', 'w_p2_hgt'), na.rm = TRUE])
1634699733099:toplot <- toplot |>
1634699733106:add_column(AverageHgt = avg_team_height)
1634699733140:toplot$gender <- as.factor(toplot$gender)
1634699785832:toplot <- vb_matches |>
1634699785839:filter(circuit == "AVP") |>
1634699785846:filter(year == 2018 | year == 2019)
1634699785904:avg_team_height <- rowMeans(toplot[ , c('w_p1_hgt', 'w_p2_hgt'), na.rm = TRUE])
1634699785912:toplot <- toplot |>
1634699785918:add_column(AverageHgt = avg_team_height)
1634699785929:toplot$gender <- as.factor(toplot$gender)
1634699857443:avg_team_height
1634699970354:toplot <- vb_matches |>
1634699970361:filter(circuit == "AVP") |>
1634699970367:filter(year == 2018 | year == 2019)
1634699970417:avg_team_height <- rowMeans(toplot[, c('w_p1_hgt', 'w_p2_hgt')], na.rm = TRUE)
1634699970427:toplot <- toplot |>
1634699970434:add_column(AverageHgt = avg_team_height)
1634699970443:toplot$gender <- as.factor(toplot$gender)
1634699976642:avg_team_height
1634702894742:avg_team_height <- rowMeans(toplot[, c('w_p1_hgt', 'w_p2_hgt')], na.rm = TRUE)
1634702894752:avg_team_height <- as.double(avg_team_height)
1634702904399:avg_team_height
1634703000580:ggplot (data = toplot, mapping = aes(x = w_p1_country, y = AverageHgt, color = country)) +
1634703000587:geom_boxplot()+
1634703000594:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634703000601:facet_wrap(~gender, ncol = 1 )
1634703041126:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt, color = country)) +
1634703041134:geom_boxplot()+
1634703041142:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634703041149:facet_wrap(~gender, ncol = 1 )
1634703078277:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt, color = w_p1_country)) +
1634703078285:geom_boxplot()+
1634703078291:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634703078298:facet_wrap(~gender, ncol = 1 )
1634703152994:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt, color = w_p1_country, fill = w_p1_country)) +
1634703153000:geom_boxplot()+
1634703153006:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634703153012:facet_wrap(~gender, ncol = 1 )
1634703327268:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country, w_p2_country), y = AverageHgt, color = w_p1_country, fill = w_p1_country)) +
1634703327275:geom_boxplot()+
1634703327282:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634703327288:facet_wrap(~gender, ncol = 1 )
1634703596055:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt, color = w_p1_country, fill = w_p1_country)) +
1634703596061:geom_boxplot()+
1634703596069:labs( title = "Average team heights for AVP match winners in 2018 and 2019", line.color = "black",
1634703596077:linetype = "solid",) +
1634703596084:facet_wrap(~gender, ncol = 1 )
1634703778564:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634703778571:geom_boxplot(aes(line.color = black, fill = w_p1_country ))+
1634703778579:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634703778585:facet_wrap(~gender, ncol = 1 )
1634703814684:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634703814690:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634703814695:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634703814701:facet_wrap(~gender, ncol = 1 )
1634704138725:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country, w_p2_country), y = AverageHgt)) +
1634704138732:geom_boxplot(aes(notch = TRUE, fill = w_p1_country, w_p2_country ))+
1634704138738:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634704138744:facet_wrap(~gender, ncol = 1 )
1634704202597:toplot |>
1634704214987:count(w_p1_country)
1634704228135:toplot |>
1634704228141:+ count(w_p2_country)
1634704235613:toplot |>
1634704240183:count(w_p2_country)
1634704639483:southa <- vb_matches |>
1634704685909:filter(w_p1_country == "South Africa" | w_p2_country == "South Africa") |>
1634704701477:filter(circuit == "AVP")
1634704711255:View(southa)
1634704730173:southa <- vb_matches |>
1634704734903:filter(w_p1_country == "South Africa" | w_p2_country == "South Africa")
1634705106477:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country, w_p2_country, l_p1_country, l_p2_country), y = AverageHgt)) +
1634705106484:geom_boxplot(aes(notch = TRUE, fill =  ))+
1634705106491:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634705106497:facet_wrap(~gender, ncol = 1 )
1634705711858:ggplot (data = toplot, mapping = aes(x = fct_infreq(c(w_p1_country, w_p2_country, l_p1_country, l_p2_country)), y = AverageHgt)) +
1634705711868:geom_boxplot(aes(notch = TRUE, fill =  ))+
1634705711876:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634705711883:facet_wrap(~gender, ncol = 1 )
1634705762082:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country, w_p2_country, l_p1_country, l_p2_country), y = AverageHgt)) +
1634705762088:geom_boxplot(aes(notch = TRUE, fill =  ))+
1634705762094:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634705762100:facet_wrap(~gender, ncol = 1 )
1634705820404:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country, l_p2_country), y = AverageHgt)) +
1634705820411:geom_boxplot(aes(notch = TRUE, fill =  ))+
1634705820417:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634705820422:facet_wrap(~gender, ncol = 1 )
1634705873831:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country & l_p2_country), y = AverageHgt)) +
1634705873839:geom_boxplot(aes(notch = TRUE ))+
1634705873847:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634705873855:facet_wrap(~gender, ncol = 1 )
1634705975095:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country | l_p2_country), y = AverageHgt)) +
1634705975101:geom_boxplot(aes(notch = TRUE ))+
1634705975107:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634705975112:facet_wrap(~gender, ncol = 1 )
1634706002832:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country, l_p2_country), y = AverageHgt)) +
1634706002838:geom_boxplot(aes(notch = TRUE ))+
1634706002844:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634706002850:facet_wrap(~gender, ncol = 1 )
1634706183645:ggplot (data = toplot, mapping = aes(x = fct_infreq(l_p2_country), y = AverageHgt)) +
1634706183652:geom_boxplot(aes(notch = TRUE ))+
1634706183659:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634706183666:facet_wrap(~gender, ncol = 1 )
1634706320222:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country, w_p2_country), y = AverageHgt)) +
1634706320228:geom_boxplot(aes(notch = TRUE ))+
1634706320234:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634706320240:facet_wrap(~gender, ncol = 1 )
1634706397294:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634706397300:geom_boxplot(aes(notch = TRUE ))+
1634706397307:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634706397314:facet_wrap(~gender, ncol = 1 )
1634707122862:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country, w_p2_country), y = AverageHgt)) +
1634707122869:geom_boxplot(aes(notch = TRUE ))+
1634707122875:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634707122881:facet_wrap(~gender, ncol = 1 )
1634707169427:gplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country, w_p2_country), y = AverageHgt)) +
1634707169434:geom_boxplot(aes(notch = TRUE, fill = w_p1_country, w_p2_country))+
1634707169440:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634707169447:facet_wrap(~gender, ncol = 1 )
1634707192369:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country, w_p2_country), y = AverageHgt)) +
1634707192377:geom_boxplot(aes(notch = TRUE, fill = w_p1_country, w_p2_country ))+
1634707192384:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634707192390:facet_wrap(~gender, ncol = 1 )
1634707573850:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634707573857:geom_boxplot(aes(notch = TRUE ))+
1634707573864:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634707573870:facet_wrap(~gender, ncol = 1 )
1634708088840:ggplot (data = toplot, mapping = aes(x = fct_infreq['w_p1_country', 'w_p2_country'], y = AverageHgt)) +
1634708088848:geom_boxplot(aes(notch = TRUE ))+
1634708088855:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634708088862:facet_wrap(~gender, ncol = 1 )
1634708109823:ggplot (data = toplot, mapping = aes(x = fct_infreq('w_p1_country', 'w_p2_country'), y = AverageHgt)) +
1634708109831:geom_boxplot(aes(notch = TRUE ))+
1634708109838:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634708109844:facet_wrap(~gender, ncol = 1 )
1634708611350:toplot2 <- toplot |>
1634708611357:select(c('w_p1_country', 'AverageHgt', 'w_p2_country'))
1634708616784:View(toplot2)
1634708639500:toplot2 <- toplot2 |>
1634708655863:add_column(AverageHgt)
1634708767172:ggplot (data = toplot2, mapping = aes(x = fct_infreq('w_p1_country', 'w_p2_country'), y = AverageHgt)) +
1634708767179:geom_boxplot(aes(notch = TRUE ))+
1634708767184:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634708767190:facet_wrap(~gender, ncol = 1 )
1634708797135:toplot2 <- toplot |>
1634708811431:select(c('w_p1_country', 'AverageHgt', 'w_p2_country', 'AverageHgt', 'gender'))
1634708830223:ggplot (data = toplot2, mapping = aes(x = fct_infreq('w_p1_country', 'w_p2_country'), y = AverageHgt)) +
1634708830230:geom_boxplot(aes(notch = TRUE ))+
1634708830236:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634708830241:facet_wrap(~gender, ncol = 1 )
1634708918004:ggplot (data = toplot, mapping = aes(x = 'w_p1_country', 'w_p2_country', y = AverageHgt)) +
1634708918010:geom_boxplot(aes(notch = TRUE ))+
1634708918016:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634708918023:facet_wrap(~gender, ncol = 1 )
1634708953104:ggplot (data = toplot, mapping = aes(x = w_p1_country, w_p2_country, y = AverageHgt)) +
1634708953110:geom_boxplot(aes(notch = TRUE ))+
1634708953116:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634708953123:facet_wrap(~gender, ncol = 1 )
1634710079338:toplot2 |>
1634710095901:m
1634710104511:toplot2 <- toplot2 |>
1634710157106:mutate(w_country = as_factor(w_p1_country, w_p2_country))
1634710900648:toplot2 <- toplot |>
1634710900655:select(c('w_p1_country', 'AverageHgt', 'w_p2_country', 'gender')) |>
1634710900662:mutate(w_p1_country = case_when(w_p1_country == w_p2_country ~ w_p1_country,
1634710900668:w_p1_country != w_p2_country ~ w_p2_country))
1634710962975:ggplot (data = toplot2, mapping = aes(x = fct_infreq('w_p1_country'), y = AverageHgt)) +
1634710962982:geom_boxplot(aes(notch = TRUE ))+
1634710962989:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634710962996:facet_wrap(~gender, ncol = 1 )
1634710977815:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634710977822:geom_boxplot(aes(notch = TRUE ))+
1634710977828:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634710977835:facet_wrap(~gender, ncol = 1 )
1634712227151:ggplot (data = toplot2, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634712227159:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634712227166:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634712227173:facet_wrap(~gender, ncol = 1 )
1634712960418:toplot <- vb_matches |>
1634712960426:filter(circuit == "AVP") |>
1634712960434:filter(year == 2018 | year == 2019)
1634712966058:avg_team_height <- rowMeans(toplot[, c('w_p1_hgt', 'w_p2_hgt')], na.rm = TRUE)
1634712966067:avg_team_height <- as.double(avg_team_height)
1634712966075:toplot <- toplot |>
1634712966082:add_column(AverageHgt = avg_team_height)
1634712966093:toplot$gender <- as.factor(toplot$gender)
1634712972280:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634712972287:geom_boxplot(aes(notch = TRUE, fill = w_p2_country ))+
1634712972294:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634712972301:facet_wrap(~gender, ncol = 1 )
1634712993114:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634712993121:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634712993128:labs( title = "Average team heights for AVP match winners in 2018 and 2019") +
1634712993135:facet_wrap(~gender, ncol = 1 )
1634713866711:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634713866720:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634713866727:labs( title = "Average team heights for AVP match winners in 2018 and 2019",  x = "Gender",
1634713866734:y = "Average Team Height (in)") +
1634713866742:facet_wrap(~gender, ncol = 1 ) +
1634713866749:scale_y_continuous()
1634713984818:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634713984825:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634713984832:labs( title = "Average team heights for AVP match winners in 2018 and 2019",  x = "Gender",
1634713984839:y = "Average Team Height (in)") +
1634713984846:facet_wrap(~gender, ncol = 1, scales = "free")
1634714067163:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634714067170:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634714067178:labs( title = "Average team heights for AVP match winners in 2018 and 2019",  x = "Gender",
1634714067185:y = "Average Team Height (in)") +
1634714067192:facet_wrap(~gender, ncol = 1, scale_y_continuous(limits = c(min, max)))
1634714084224:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634714084230:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634714084236:labs( title = "Average team heights for AVP match winners in 2018 and 2019",  x = "Gender",
1634714084242:y = "Average Team Height (in)") +
1634714084247:facet_wrap(~gender, ncol = 1, scale_y_continuous(limits = c(min, max)))
1634714099161:ggplot(data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634714099167:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634714099175:labs( title = "Average team heights for AVP match winners in 2018 and 2019",  x = "Gender",
1634714099182:y = "Average Team Height (in)") +
1634714099188:facet_wrap(~gender, ncol = 1, scale_y_continuous(limits = c(min, max)))
1634714113555:ggplot(data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634714113563:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634714113569:labs( title = "Average team heights for AVP match winners in 2018 and 2019",  x = "Gender",
1634714113575:y = "Average Team Height (in)") +
1634714113581:facet_wrap(~gender, ncol = 1, scale_y_continuous())
1634714143269:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634714143276:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634714143283:labs( title = "Average team heights for AVP match winners in 2018 and 2019",  x = "Gender",
1634714143289:y = "Average Team Height (in)") +
1634714143296:facet_wrap(~gender, ncol = 1)
1634714477897:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634714477904:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634714477912:labs( title = "Average team heights for AVP match winners in 2018 and 2019",  x = "Gender",
1634714477918:y = "Average Team Height (in)") +
1634714477924:facet_wrap(~gender, ncol = 1) +
1634714477930:theme(legend.title = element_blank())
1634714524329:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634714524336:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634714524343:labs( title = "Average team heights for AVP match winners in 2018 and 2019",  x = "Gender",
1634714524349:y = "Average Team Height (in)") +
1634714524356:facet_wrap(~gender, ncol = 1) +
1634714524362:theme(legend.position = "none")
1634714593654:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634714593661:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634714593668:labs( title = "Average team heights for AVP match winners in 2018 and 2019",  x = "Gender",
1634714593676:y = "Average Team Height (in)") +
1634714593684:facet_wrap(~gender, ncol = 1, scales = free_y) +
1634714593693:theme(legend.position = "none")
1634714612152:ggplot (data = toplot, mapping = aes(x = fct_infreq(w_p1_country), y = AverageHgt)) +
1634714612160:geom_boxplot(aes(notch = TRUE, fill = w_p1_country ))+
1634714612167:labs( title = "Average team heights for AVP match winners in 2018 and 2019",  x = "Gender",
1634714612174:y = "Average Team Height (in)") +
1634714612181:facet_wrap(~gender, ncol = 1, scales = "free_y") +
1634714612188:theme(legend.position = "none")
1634714983595:countrytourn <- vb_matches |>
1634714983605:filter(circuit == "FIVB") |>
1634714983615:distinct(tournament, year, .keep_all = TRUE) |>
1634714983626:arrange(country, by_group = TRUE)
1634714983816:yearcount2 <- countrytourn |>
1634714983827:count(country, year)
1634714983868:p <- ggplot(
1634714983878:data = yearcount2,
1634714983887:mapping = aes(x = fct_infreq(country), y = n)
1634714983896:) +
1634714983905:geom_point(size = 0.2) +
1634714983915:facet_grid(year ~.,scales = "free", space='free') +
1634714983932:labs(
1634714983942:title = "FIVB Tournaments hosted by country",
1634714983951:x = "Country",
1634714983961:y = "number of tournaments per year",
1634714983971:)
1634714984039:plot(p)
1634714986200:cat("China has hosted the most FIVB tournaments in total")
1634715006221:ggplot(
1634715006228:data = yearcount2,
1634715006234:mapping = aes(x = fct_infreq(country), y = n)
1634715006240:) +
1634715006247:geom_point(size = 0.2) +
1634715006255:facet_grid(year ~.,scales = "free", space='free') +
1634715006266:labs(
1634715006271:title = "FIVB Tournaments hosted by country",
1634715006277:x = "Country",
1634715006284:y = "number of tournaments per year",
1634715006290:)
1634715055757:ggplot(
1634715055765:data = yearcount2,
1634715055771:mapping = aes(x = fct_infreq(country), y = n)
1634715055777:) +
1634715055784:geom_point(size = 0.2) +
1634715055791:facet_grid(year ~.,scales = "free", space='free') +
1634715055798:scale_x_discrete(expand = c(0, 0.5)) +
1634715055804:labs(
1634715055811:title = "FIVB Tournaments hosted by country",
1634715055817:x = "Country",
1634715055823:y = "number of tournaments per year",
1634715055830:)
1634715124782:library(ggforce)
1634715135605:install.packages('ggforce')
1634715299060:library(ggforce)
1634715358940:ggplot(
1634715358946:data = yearcount2,
1634715358952:mapping = aes(x = fct_infreq(country), y = n)
1634715358958:) +
1634715358964:geom_point(size = 0.2) +
1634715358970:facet_grid(year ~.,scales = "free", space='free', shrink = FALSE)
1634715371838:library(ggforce)
1634715459256:countrytourn <- vb_matches |>
1634715459267:filter(circuit == "FIVB") |>
1634715459277:distinct(tournament, year, .keep_all = TRUE) |>
1634715459287:arrange(country, by_group = TRUE)
1634715459449:yearcount2 <- countrytourn |>
1634715459458:count(country, year)
1634715459493:p <- ggplot(
1634715459503:data = yearcount2,
1634715459512:mapping = aes(x = fct_infreq(country), y = n)
1634715459522:) +
1634715459532:geom_point(size = 0.2) +
1634715459541:facet_grid(year ~.,scales = "free", space='free', shrink = FALSE) +
1634715459558:labs(
1634715459567:title = "FIVB Tournaments hosted by country",
1634715459577:x = "Country",
1634715459586:y = "number of tournaments per year",
1634715459595:)
1634715459650:p + ggforce::facet_row(vars(SP), scales = 'free', space = 'free')
1634715488857:countrytourn <- vb_matches |>
1634715488867:filter(circuit == "FIVB") |>
1634715488878:distinct(tournament, year, .keep_all = TRUE) |>
1634715488888:arrange(country, by_group = TRUE)
1634715489103:yearcount2 <- countrytourn |>
1634715489112:count(country, year)
1634715489151:p <- ggplot(
1634715489159:data = yearcount2,
1634715489167:mapping = aes(x = fct_infreq(country), y = n)
1634715489176:) +
1634715489184:geom_point(size = 0.2) +
1634715489192:facet_grid(year ~.,scales = "free", space='free', shrink = FALSE) +
1634715489207:labs(
1634715489216:title = "FIVB Tournaments hosted by country",
1634715489225:x = "Country",
1634715489234:y = "number of tournaments per year",
1634715489243:)
1634715489291:p + ggforce::facet_row(vars(year), scales = 'free', space = 'free')
1634715490734:#plot(p)
1634715490765:cat("China has hosted the most FIVB tournaments in total")
1634715515269:countrytourn <- vb_matches |>
1634715515280:filter(circuit == "FIVB") |>
1634715515290:distinct(tournament, year, .keep_all = TRUE) |>
1634715515310:arrange(country, by_group = TRUE)
1634715515490:yearcount2 <- countrytourn |>
1634715515502:count(country, year)
1634715515546:p <- ggplot(
1634715515555:data = yearcount2,
1634715515564:mapping = aes(x = fct_infreq(country), y = n)
1634715515576:) +
1634715515586:geom_point(size = 0.2) +
1634715515599:facet_grid(year ~.,scales = "free", space='free', shrink = FALSE) +
1634715515621:labs(
1634715515632:title = "FIVB Tournaments hosted by country",
1634715515643:x = "Country",
1634715515655:y = "number of tournaments per year",
1634715515666:)
1634715515719:p + ggforce::facet_row( scales = 'free', space = 'free')
1634715670764:ggplot(
1634715670771:data = yearcount2,
1634715670777:mapping = aes(x = fct_infreq(country), y = n)
1634715670784:) +
1634715670791:geom_point(size = 0.2) +
1634715670798:facet_grid(year ~.,scales = "free_x", space='free_x', shrink = FALSE) +
1634715670810:labs(
1634715670817:title = "FIVB Tournaments hosted by country",
1634715670824:x = "Country",
1634715670830:y = "number of tournaments per year",
1634715670837:)
1634715753499:countrytourn <- vb_matches |>
1634715753509:filter(circuit == "FIVB") |>
1634715753518:distinct(tournament, year, .keep_all = TRUE) |>
1634715753527:arrange(country, by_group = TRUE)
1634715753675:yearcount2 <- countrytourn |>
1634715753683:count(country, year)
1634715753715:p <- ggplot(
1634715753723:data = yearcount2,
1634715753731:mapping = aes(x = fct_infreq(country), y = n)
1634715753742:) +
1634715753752:geom_point(size = 0.2) +
1634715753762:facet_grid(year ~.,scales = "free_x", space='free_x', shrink = FALSE) +
1634715753781:labs(
1634715753790:title = "FIVB Tournaments hosted by country",
1634715753800:x = "Country",
1634715753809:y = "number of tournaments per year",
1634715753825:)
1634715753880:ggsave('Mydata.jpeg1', width =4, height = 400, units='cm)
1634715753897:#plot(p)
1634715753913:cat("China has hosted the most FIVB tournaments in total")
1634715911728:countrytourn <- vb_matches |>
1634715911737:filter(circuit == "FIVB") |>
1634715911748:distinct(tournament, year, .keep_all = TRUE) |>
1634715911757:arrange(country, by_group = TRUE)
1634715911931:yearcount2 <- countrytourn |>
1634715911941:count(country, year)
1634715912000:p <- ggplot(
1634715912011:data = yearcount2,
1634715912019:mapping = aes(x = fct_infreq(country), y = n)
1634715912029:) +
1634715912038:geom_point(size = 0.2) +
1634715912048:facet_grid(year ~.,scales = "free_x", space='free_x', shrink = FALSE) +
1634715912065:labs(
1634715912074:title = "FIVB Tournaments hosted by country",
1634715912084:x = "Country",
1634715912093:y = "number of tournaments per year",
1634715912103:)
1634715912158:ggsave(filename = 'Mydata.jpeg1', width = 400, height = 400, units='cm')
1634715923758:countrytourn <- vb_matches |>
1634715923766:filter(circuit == "FIVB") |>
1634715923775:distinct(tournament, year, .keep_all = TRUE) |>
1634715923784:arrange(country, by_group = TRUE)
1634715923976:yearcount2 <- countrytourn |>
1634715923984:count(country, year)
1634715924029:p <- ggplot(
1634715924038:data = yearcount2,
1634715924046:mapping = aes(x = fct_infreq(country), y = n)
1634715924056:) +
1634715924065:geom_point(size = 0.2) +
1634715924075:facet_grid(year ~.,scales = "free_x", space='free_x', shrink = FALSE) +
1634715924091:labs(
1634715924100:title = "FIVB Tournaments hosted by country",
1634715924108:x = "Country",
1634715924118:y = "number of tournaments per year",
1634715924127:)
1634715924178:ggsave(filename = 'Mydata.jpeg', width = 400, height = 400, units='cm')
1634715942938:countrytourn <- vb_matches |>
1634715942949:filter(circuit == "FIVB") |>
1634715942958:distinct(tournament, year, .keep_all = TRUE) |>
1634715942967:arrange(country, by_group = TRUE)
1634715943118:yearcount2 <- countrytourn |>
1634715943126:count(country, year)
1634715943161:p <- ggplot(
1634715943170:data = yearcount2,
1634715943177:mapping = aes(x = fct_infreq(country), y = n)
1634715943185:) +
1634715943192:geom_point(size = 0.2) +
1634715943201:facet_grid(year ~.,scales = "free_x", space='free_x', shrink = FALSE) +
1634715943220:labs(
1634715943229:title = "FIVB Tournaments hosted by country",
1634715943239:x = "Country",
1634715943249:y = "number of tournaments per year",
1634715943259:)
1634715943321:ggsave(filename = 'toplot2', width = 400, height = 400, units='cm')
1634715959046:rlang::last_error()
1634716000621:countrytourn <- vb_matches |>
1634716000632:filter(circuit == "FIVB") |>
1634716000642:distinct(tournament, year, .keep_all = TRUE) |>
1634716000651:arrange(country, by_group = TRUE)
1634716000871:yearcount2 <- countrytourn |>
1634716000882:count(country, year)
1634716000938:p <- ggplot(
1634716000948:data = yearcount2,
1634716000958:mapping = aes(x = fct_infreq(country), y = n)
1634716000966:) +
1634716000975:geom_point(size = 0.2) +
1634716000983:facet_grid(year ~.,scales = "free_x", space='free_x', shrink = FALSE) +
1634716001000:labs(
1634716001009:title = "FIVB Tournaments hosted by country",
1634716001020:x = "Country",
1634716001030:y = "number of tournaments per year",
1634716001042:)
1634716001094:ggsave(filename = 'toplot2.png', width = 400, height = 400, units='cm')
1634716011254:countrytourn <- vb_matches |>
1634716011264:filter(circuit == "FIVB") |>
1634716011274:distinct(tournament, year, .keep_all = TRUE) |>
1634716011284:arrange(country, by_group = TRUE)
1634716011442:yearcount2 <- countrytourn |>
1634716011450:count(country, year)
1634716011486:p <- ggplot(
1634716011494:data = yearcount2,
1634716011502:mapping = aes(x = fct_infreq(country), y = n)
1634716011510:) +
1634716011518:geom_point(size = 0.2) +
1634716011526:facet_grid(year ~.,scales = "free_x", space='free_x', shrink = FALSE) +
1634716011540:labs(
1634716011548:title = "FIVB Tournaments hosted by country",
1634716011556:x = "Country",
1634716011565:y = "number of tournaments per year",
1634716011574:)
1634716011626:ggsave(filename = 'toplot2.png', width = 400, height = 400, units='pixels')
1634716019014:countrytourn <- vb_matches |>
1634716019025:filter(circuit == "FIVB") |>
1634716019035:distinct(tournament, year, .keep_all = TRUE) |>
1634716019046:arrange(country, by_group = TRUE)
1634716019186:yearcount2 <- countrytourn |>
1634716019194:count(country, year)
1634716019229:p <- ggplot(
1634716019238:data = yearcount2,
1634716019247:mapping = aes(x = fct_infreq(country), y = n)
1634716019256:) +
1634716019266:geom_point(size = 0.2) +
1634716019276:facet_grid(year ~.,scales = "free_x", space='free_x', shrink = FALSE) +
1634716019293:labs(
1634716019302:title = "FIVB Tournaments hosted by country",
1634716019310:x = "Country",
1634716019318:y = "number of tournaments per year",
1634716019326:)
1634716019356:ggsave(filename = 'toplot2.png', width = 400, height = 400, units='px')
1634716020294:#plot(p)
1634716020309:cat("China has hosted the most FIVB tournaments in total")
1634716111233:countrytourn <- vb_matches |>
1634716111243:filter(circuit == "FIVB") |>
1634716111254:distinct(tournament, year, .keep_all = TRUE) |>
1634716111264:arrange(country, by_group = TRUE)
1634716111424:yearcount2 <- countrytourn |>
1634716111434:count(country, year)
1634716111497:p <- ggplot(
1634716111507:data = yearcount2,
1634716111516:mapping = aes(x = fct_infreq(country), y = n)
1634716111526:) +
1634716111536:geom_point(size = 0.2) +
1634716111546:facet_grid(year ~.,scales = "free_x", space='free_x', shrink = FALSE) +
1634716111563:labs(
1634716111572:title = "FIVB Tournaments hosted by country",
1634716111581:x = "Country",
1634716111592:y = "number of tournaments per year",
1634716111601:)
1634716111649:ggsave(filename = 'toplot2.png', width = 400, height = 400, units='px')
1634716112610:plot(p)
1634716113608:cat("China has hosted the most FIVB tournaments in total")
1634957195333:install.packages('tidyverse')
1634957311916:install.packages('tidymodels')
1634957540203:install.packages('broom')
1634957601702:read.csv(‘evals-mod.csv’)
1634957617675:read.csv(evals-mod.csv)
1634957636599:read.csv(data)
1634957661780:read.csv('data')
1634957809401:data <- readr::read_csv(‘evals-mod.csv’)
1634957825318:data <- readr::read_csv(evals-mod.csv)
1634958064329:cars <- read.csv('/Home/COGS 137/lab04-isa5805/data/evals-mod.csv', row.names=1)
1634958111135:library(readr)
1634958111172:evals_mod <- read_csv("data/evals-mod.csv")
1634958111633:View(evals_mod)
1634958248089:bty_avg <- evals |>
1634958248099:rowwise() |>
1634958248108:bty_f1lower(bty_avg = mean( c( bty_m2upper) )) |>
1634958248118:ungroup()
1634958322413:library(tidyverse)
1634958330838:library(broom)
1634958347585:library(tidymodels)
1634958354038:bty_avg <- evals |>
1634958354048:rowwise() |>
1634958354058:bty_f1lower(bty_avg = mean( c( bty_m2upper) )) |>
1634958354068:ungroup()
1634958716875:bty_avg <- evals |>
1634958716885:rowwise() |>
1634958716895:mutate(bty_avg = mean( c( 'bty_m2upper', 'bty_f1lower') )) |>
1634958716904:ungroup()
1634958728894:library(readr)
1634958728905:evals <- read_csv("data/evals-mod.csv")
1634958731234:bty_avg <- evals |>
1634958731244:rowwise() |>
1634958731255:mutate(bty_avg = mean( c( 'bty_m2upper', 'bty_f1lower') )) |>
1634958731265:ungroup()
1634959090091:bty_avg <- evals |>
1634959090102:rowwise() |>
1634959090111:mutate(bty_avg = mean( c(bty_f1lower, bty_m2upper) )) |>
1634959090121:ungroup()
1634959249246:ggplot(score)
1634959260279:ggplot(evals$score)
1634959466600:ggplot( data = evals, mapping = aes(x = score)) +
1634959480623:geom_histogram()
1634959677432:ggplot( data = evals, mapping = aes(x = score, y = bty_avg)) +
1634959677442:geom_histogram()
1634959695296:ggplot( data = evals, mapping = aes(x = score, y = bty_avg)) +
1634959695305:geom_point()
1634959813346:ggplot( data = evals, aes(x = score, y = bty_avg)) +
1634959813357:geom_point()
1634959924431:ggplot( data = evals,
1634959924440:mappiung = aes(x = score, y = bty_avg)) +
1634959924448:geom_point()
1634959949743:ggplot( data = evals,
1634959949751:mapping = aes(x = score, y = bty_avg)) +
1634959949758:geom_point()
1634959986470:ggplot( data = evals, mapping = aes(x = score)) +
1634959986480:geom_histogram()
1634960028581:install.packages("ggplot2")
1634960032669:install.packages("ggplot2")
1634960066847:library("ggplot2")
1634960353724:View(bty_avg)
1634960385679:ggplot(data = evals,
1634960385690:mapping = aes(x = bty_avg, y = score)) +
1634960385700:geom_point()
1634960569766:ggplot(evals, aes(x = score, y = bty_avg))+
1634960577387:geom_point()
1634960598541:ggplot(data = evals,
1634960598555:mapping = aes(x = 'bty_avg', y = 'score')) +
1634960598568:geom_point()
1634960609456:ggplot(data = evals,
1634960609464:mapping = aes(x = 'bty_avg', y = 'score')) +
1634960609471:geom_point()
1634960639862:ggplot(data = evals,
1634960639874:mapping = aes(x = score, y = bty_avg)) +
1634960639884:geom_point()
1634960648321:rlang::last_error()
1634960793008:ggplot(data = evals,
1634960793018:mapping = aes(x = score, y = bty_avg, fill = score)) +
1634960793029:geom_point()
1634960904824:ggplot(data = evals,
1634960904835:mapping = aes(x = score, y = bty_avg)) +
1634960904845:geom_jitter()
1634960981552:View(bty_avg)
1634961211347:ggplot(data = bty_avg,
1634961211358:mapping = aes(x = score, y = bty_avg)) +
1634961211368:geom_point()
1634961297175:ggplot(data = bty_avg,
1634961297192:mapping = aes(x = score, y = bty_avg, fill = score)) +
1634961297202:geom_jitter()
1634961305585:ggplot(data = bty_avg,
1634961305596:mapping = aes(x = score, y = bty_avg, fill = bty_avg)) +
1634961305611:geom_jitter()
1634961316120:ggplot(data = bty_avg,
1634961316131:mapping = aes(x = score, y = bty_avg)) +
1634961316141:geom_jitter()
1634962071018:```{r}
1634962685170:```m_bty = lm ( score~ bty_avg), data= bty_avg
1634962703078:```m_bty = lm ( score ~ bty_avg), data= bty_avg
1634962868518:```m_bty = lm (score ~ bty_avg), data= "bty_avg"
1634962948809:```m_bty = (lm [score] ~ [bty_avg], data= "bty_avg"
1634962963043:```m_bty = (lm [score] ~ [bty_avg], data= bty_avg)
1634962999934:m_bty = (lm [score] ~ [bty_avg], data= bty_avg)
1634963013106:m_bty = (lm score ~ bty_avg, data= bty_avg)
1634963021228:m_bty = lm score ~ bty_avg, data= bty_avg
1634963052483:m_bty <- lm(score ~ bty_avg, data= bty_avg)
1634963052605:### Exercise 6
1634963089646:View(m_bty)
1634963101462:m_bty <- lm(score ~ bty_avg, data= bty_avg)
1634963284321:ggplot(data = bty_avg,
1634963284329:mapping = aes(x = score, y = bty_avg)) +
1634963284336:geom_jitter() +
1634963284342:geom_smooth(method = "lm", se = FALSE)
1634963408153:ggplot(data = bty_avg,
1634963408161:mapping = aes(x = score, y = bty_avg)) +
1634963408168:geom_jitter() +
1634963408175:geom_smooth(method = "lm", se = FALSE, col = 'orange')
1634964309070:View(m_bty)
1634964407836:View(m_bty)
1634964426691:m_bty$coefficients
1634964547864:summary(m_bty)
1634965363164:m_gen <- lm (score ~ gender, data = bty_avg)
1634965400710:summarise(m_gen)
1634965413571:summary(m_gen)
1634965784225:m_gen <- lm (score ~ gender(female), data = bty_avg)
1634965797011:m_gen <- lm (score ~ gender$female, data = bty_avg)
1634965827566:m_gen <- lm (score ~ genderfemale
1634965827576:, data = bty_avg)
1634965868570:m_gen |>
1634965870882:tidy()
1634966736648:m_gen <- lm (score ~ gender, data = bty_avg, gender = FALSE)
1634966761931:m_gen <- lm (score ~ gender, data = bty_avg, gender = "female")
1634966853734:ggplot(data = bty_avg,
1634966853742:mapping = aes(x = score, y = gender)) +
1634966853748:geom_jitter() +
1634966853756:geom_smooth(method = "lm", se = FALSE, col = 'orange')
1634967004168:m_rank <- lm (score ~ rank, data = bty_avg)
1634967004277:m_rank |>
1634967004287:tidy()
1634967037904:m_gen |> tidy()
1635372805025:library(tidyverse)
1635372811636:library(broom)
1635372822016:pp <- read_csv("data/paris_paintings.csv", na = c("n/a", "", "NA"))
1635372907336:pp <- read_csv("https://raw.githubusercontent.com/COGS137/datasets/main/paris_paintings.csv", na = c("n/a", "", "NA"))
1635372916155:View(pp)
1635382805884:library(tidyverse)
1635382809170:library(broom)
1635382809195:library(tidymodels)
1635382812221:library(palmerpenguins)
1635382844215:View(penguins)
1635382957521:ggplot( data = penguins, aes(x = body_mass_g, color = sex))
1635383014233:ggplot( data = penguins, aes(x = body_mass_g, color = sex)) + geom_point()
1635383237882:ggplot( data = penguins, aes(x = body_mass_g, y = sex, color = sex)) + geom_point()
1635383264519:ggplot( data = penguins, aes(x = sex, y = body_mass_g, color = sex)) + geom_point()
1635383432040:ggplot( data = penguins, aes(x = body_mass_g, color = sex)) + geom_histogram()
1635383502714:ggplot( data = penguins, aes(x = body_mass_g, y = sex, color = sex)) + geom_point()
1635383514990:ggplot( data = penguins, aes(x = sex, y = body_mass_g, color = sex)) + geom_point()
1635383568494:ggplot( data = penguins, aes(x = sex, y = body_mass_g, color = sex)) + geom_point() +
1635383610478:labs(
1635383610486:title = "Mass of female and male penguins",
1635383610493:x = "Mass",
1635383610499:y = "Sex",
1635383610506:)
1635383645959:ggplot( data = penguins, aes(x = sex, y = body_mass_g, color = sex, na.rm = TRUE)) +
1635383647813:geom_point() +
1635383664160:labs(title = "whats up")
1635383915328:ggplot( data = na.omit(penguins), aes(x = sex, y = body_mass_g, color = sex)) + geom_point() +
1635383915339:labs(
1635383915350:title = "Mass of female and male penguins",
1635383915361:x = "Mass",
1635383915373:y = "Sex")
1635383953800:ggplot( data = na.omit(penguins), aes(x = sex, y = body_mass_g, color = sex)) + geom_point() +
1635383953808:labs(
1635383953815:title = "Mass of female and male penguins",
1635383953822:x = "Mass",
1635383953830:y = "Sex")
1635384520118:ggplot(data = na.omit(penguins), aes(x = species)) +
1635384520126:geom_bar() +
1635384520134:facet_grid(islands)
1635384576242:ggplot(data = na.omit(penguins), aes(x = species)) +
1635384576249:geom_bar()
1635384640119:ggplot(data = na.omit(penguins), aes(x = species)) +
1635384640127:geom_bar() +
1635384640135:facet_grid(~islands)
1635384652341:ggplot(data = na.omit(penguins), aes(x = species)) +
1635384652347:geom_bar() +
1635384652354:facet_grid(~island)
1635384667677:ggplot(data = na.omit(penguins), aes(x = species, color = species)) +
1635384667685:geom_bar() +
1635384667692:facet_grid(~island)
1635384685257:ggplot(data = na.omit(penguins), aes(x = species, color = species)) +
1635384685265:geom_bar(fill = species) +
1635384685273:facet_grid(~island)
1635384700293:ggplot(data = na.omit(penguins), aes(x = species, color = species)) +
1635384700300:geom_bar(color = species) +
1635384700308:facet_grid(~island)
1635384751898:ggplot(data = na.omit(penguins), aes(x = species, color = species)) +
1635384751906:geom_bar(stat = "species") +
1635384751914:facet_grid(~island)
1635384802273:ggplot(data = na.omit(penguins), aes(x = species, color = species, fill = x)) +
1635384802281:geom_bar() +
1635384802288:facet_grid(~island)
1635384849838:ggplot(data = na.omit(penguins), aes(x = species, color = species)) +
1635384849847:geom_bar(stat = "identity") +
1635384849855:facet_grid(~island)
1635384865688:ggplot(data = na.omit(penguins), aes(x = species, color = species)) +
1635384865696:geom_bar() +
1635384865704:facet_grid(~island)
1635384982779:ggplot(data = na.omit(penguins), aes(x = species, color = species, fill = species)) +
1635384982785:geom_bar(stat = "identity") +
1635384982792:facet_grid(~island)
1635384993739:ggplot(data = na.omit(penguins), aes(x = species, color = species, fill = species)) +
1635384993748:geom_bar() +
1635384993755:facet_grid(~island)
1635385036982:ggplot(data = na.omit(penguins), aes(x = species, color = species, fill = species)) +
1635385036990:geom_bar() +
1635385036997:facet_grid(~island) +
1635385037003:labs(
1635385037010:title = "Species of Penguin per Island",
1635385037017:x = "Species")
1635385066730:ggplot(data = penguins, aes(x = species, color = species, fill = species)) +
1635385066737:geom_bar() +
1635385066744:facet_grid(~island) +
1635385066750:labs(
1635385066757:title = "Species of Penguin per Island",
1635385066766:x = "Species")
1635385266001:ggplot(data = na.omit(penguins), aes(x = species, color = species, fill = species)) +
1635385266010:geom_bar() +
1635385266018:facet_grid(~island) +
1635385266026:labs(
1635385266033:title = "Species of Penguin per Island",
1635385266040:x = "Species",
1635385266047:y = "Number of Penguins")
1635385266606:+ ylim(0, 150)
1635385295277:ggplot(data = na.omit(penguins), aes(x = species, color = species, fill = species)) +
1635385295285:geom_bar() +
1635385295293:facet_grid(~island) +
1635385295300:labs(
1635385295308:title = "Species of Penguin per Island",
1635385295316:x = "Species",
1635385295324:y = "Number of Penguins") +
1635385295332:ylim(0, 150)
1635385376755:ggplot(data = na.omit(penguins), aes(x = species, color = species, fill = species)) +
1635385376763:geom_bar() +
1635385376770:facet_grid(~island) +
1635385376778:labs(
1635385376785:title = "Species of Penguin per Island",
1635385376793:x = "Species",
1635385376800:y = "Number of Penguins") +
1635385376807:expand_limits(y=c(0, 150))
1635385528893:ggplot(data = na.omit(penguins), aes(x = year, y = flipper_length_mm , color = species, fill = species)) +
1635385528900:geom_jitter()
1635385633862:ggplot(data = na.omit(penguins), aes(x = year, y = flipper_length_mm , color = species, fill = species)) +
1635385633869:geom_jitter() +
1635385633876:facet_grid(~species)
1635385692388:ggplot(data = na.omit(penguins), aes(x = year, y = flipper_length_mm , color = species, fill = species)) +
1635385692396:geom_jitter() +
1635385692405:facet_grid(species~)
1635385811416:ggplot(data = na.omit(penguins), aes(x = year, y = flipper_length_mm , color = species, fill = species)) +
1635385811423:geom_jitter() +
1635385811430:facet_grid(species)
1635385836809:ggplot(data = na.omit(penguins), aes(x = year, y = flipper_length_mm , color = species, fill = species)) +
1635385836817:geom_jitter() +
1635385836825:facet_grid(rows = vars(species))
1635385871494:ggplot(data = na.omit(penguins), aes(x = year, y = flipper_length_mm , color = species, fill = species)) +
1635385871501:geom_jitter() +
1635385871507:facet_wrap(~species)
1635385917583:ggplot(data = na.omit(penguins), aes(x = year, y = flipper_length_mm , color = species, fill = species)) +
1635385917591:geom_jitter() +
1635385917598:facet_wrap(~species, ncol = 1)
1635386129895:ggplot(data = na.omit(penguins), aes(x = factor(year), y = flipper_length_mm , color = species, fill = species)) +
1635386129902:geom_jitter() +
1635386129909:facet_wrap(~species, ncol = 1) +
1635386129917:labs(
1635386129923:title = "Flipper Length Over Time",
1635386129930:x = "Year",
1635386129936:y = "Flipper Length")
1635386148115:factor(year)
1635386161370:factor(penguins$year)
1635387617507:playerinfo <- read_csv("https://projects.fivethirtyeight.com/nba-model/2022/latest_RAPTOR_by_player.csv", na = c("n/a", "", "NA"))
1635387631864:View(playerinfo)
1635388312309:knitr::opts_chunk$set(echo = TRUE)
1635388312320:library(tidyverse)
1635388312331:library(dplyr)
1635388312342:library(palmerpenguins)
1635388312478:pp <- read_csv("nbaallelo.csv", na = c("n/a", "", "NA"))
1635388402861:pp <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635388433043:playerinfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635388729672:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635388798706:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635388813571:geom_freqpoly()
1635388915608:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635388919751:geom_line()
1635388951398:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635389136513:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635389136521:+ geom_line() +
1635389136528:geom_hline(yintercept = mean(Indcatotvalue), color="blue")
1635389155008:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635389155015:geom_line() +
1635389155022:geom_hline(yintercept = mean(Indcatotvalue), color="blue")
1635389183345:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635389183353:geom_line() +
1635389183361:geom_hline(yintercept = mean(elo_i), color="blue")
1635389205628:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635389205636:geom_line() +
1635389205643:geom_hline(yintercept = mean(HeatInfo$elo_i), color="blue")
1635389725912:factor(HeatInfo$year_id)
1635393711108:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635393711116:geom_line(size = 0.2) +
1635393711124:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635393711132:expand_limits(y=c(1100, 1900))
1635393951125:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635393951134:geom_line(size = 0.2) +
1635393951142:geom_hline(Average = 1500), color="grey")+
1635393951150:expand_limits(y=c(1100, 1900))
1635394600798:class(date_game)
1635394609259:class(HeatInfo$date_game)
1635394821451:p <- c(HeatInfo$date_game)
1635394825699:class(p)
1635395003508:HeatInfo$date_game <- as.Date(HeatInfo$date_game)
1635395018676:class(HeatInfo$date_game)
1635395760618:HeatInfo <- HeatInfo |>
1635395760627:add_column(Empty_Col = NA)
1635395785650:head(HeatInfo)
1635396118765:temp <- HeatInfo |>
1635396118775:mutate(
1635396118783:Season = case_when(date_game > 10-01-1946 & date_game < 04-30-1947 ~ "1946 - 47 ")
1635396118790:)
1635396128826:View(temp)
1635396153395:HeatInfo <- HeatInfo |>
1635396153403:add_column(Season = NA)
1635396161495:temp <- HeatInfo |>
1635396161503:mutate(
1635396161512:Season = case_when(date_game > 10-01-1946 & date_game < 04-30-1947 ~ "1946 - 47 ")
1635396161521:)
1635396171914:View(temp)
1635396284180:temp <- HeatInfo |>
1635396284192:mutate(
1635396284201:Season = case_when(date_game > 10-01-1946  ~ "1946 - 47 ")
1635396284208:)
1635396289411:View(temp)
1635396380502:View(HeatInfo)
1635396412323:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635396417657:HeatInfo <- HeatInfo |>
1635396417664:add_column(Season = NA)
1635396423247:View(HeatInfo)
1635396626774:HeatInfo$date_game <- as.Date(HeatInfo$date_game)
1635396641804:head(HeatInfo)
1635396951485:temp <- HeatInfo$Season
1635396959123:View(temp)
1635397331932:temp <- HeatInfo |>
1635397331940:mutate(Season = if_else(game_date > 10-30-1946 & game_date < 04-30-1947, "1946-47", Season))
1635397353139:temp <- HeatInfo |>
1635397353147:mutate(Season = if_else(date_game > 10-30-1946 & date_game < 04-30-1947, "1946-47", Season))
1635397394907:HeatInfo <- HeatInfo |>
1635397394915:add_column(Season = "none")
1635397407802:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635397414783:HeatInfo$date_game <- as.Date(HeatInfo$date_game)
1635397419145:HeatInfo <- HeatInfo |>
1635397419154:add_column(Season = "none")
1635397424711:temp <- HeatInfo |>
1635397424719:mutate(Season = if_else(date_game > 10-30-1946 & date_game < 04-30-1947, "1946-47", Season))
1635397434412:View(temp)
1635397505192:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635397520477:HeatInfo$date_game <- as.Date(HeatInfo$date_game)
1635397705924:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635397707428:HeatInfo$date_game <- as.Date(HeatInfo$date_game, "%m/%d/%Y")
1635397732472:HeatInfo <- HeatInfo |>
1635397732483:add_column(Season = "none")
1635397739997:temp <- HeatInfo |>
1635397740004:mutate(Season = if_else(date_game > 10-30-1946 & date_game < 04-30-1947, "1946-47", Season))
1635397745537:View(tempp)
1635397750548:View(temp)
1635397877289:temp <- HeatInfo |>
1635397877298:mutate(Season = if_else(date_game > 10-30-1946 & date_game < 04-30-1947, "1946-47"))
1635397923830:temp <- HeatInfo |>
1635397923837:mutate(Season = if_else(date_game > 10-30-1946 & date_game < 04-30-1947, "1946-47", NA_real_))
1635398053633:temp <- HeatInfo |>
1635398053641:mutate(Season = case_when((date_game > 10-30-1946 & date_game < 04-30-1947 ~ "1946-47")))
1635398062110:View(temp)
1635398125064:temp <- HeatInfo |>
1635398125071:mutate(Season = case_when((date_game > 1946-10-30 & date_game < 1947-04-30 ~ "1946-47")))
1635398128872:View(temp)
1635398434806:temp <- HeatInfo |>
1635398434814:mutate(Season = case_when(between(date_game, 10-01-1946, 04-30-1947) ~ "1947"))
1635398439951:View(temp)
1635398603222:install.packages("lubridate")
1635398606353:install.packages("lubridate")
1635398786116:library(lubridate)
1635398817513:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635398819144:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635398820597:HeatInfo$date_game <- as.Date(HeatInfo$date_game, "%m/%d/%Y")
1635398821302:HeatInfo <- HeatInfo |>
1635398821311:add_column(Season = "none")
1635398827729:temp <- HeatInfo |>
1635398827737:mutate(Season = case_when(between(date_game, as.Date("10-01-1946"), as.Date("04-30-1947")) ~ "1947"))
1635399626548:temp <- HeatInfo |>
1635399894412:f
1635399901194:temp <- HeatInfo[HeatInfo$date_game > "1946-11-01" &
1635399901202:HeatInfo$date_game < "1946-04-30", ]
1635399906164:View(temp)
1635399946826:temp <- HeatInfo[HeatInfo$date_game > 1946-11-01 &
1635399946836:HeatInfo$date_game < 1946-04-30, ]
1635399971704:View(temp)
1635400810113:temp<- HeatInfo$Season
1635400846999:temp <- HeatInfo |>
1635400847006:mutate(V1 = case_when(between(date_game, as.Date("10-01-1946"), as.Date("04-30-1947")) ~ "1947"))
1635401007893:HeatInfo <- HeatInfo |>
1635401022615:mutate(Season = "Hi")
1635401058941:HeatInfo <- HeatInfo |>
1635401132239:mutate(Season = casewhen(date_game <= "1946-11-30" ~ "no"))
1635401139967:HeatInfo <- HeatInfo |>
1635401147899:mutate(Season = case_when(date_game <= "1946-11-30" ~ "no"))
1635401204408:HeatInfo <- HeatInfo |>
1635401481441:mutate(Season = case_when(date_game <= "1947-06-30" ~ "1946 - 47", date_game > "1947-06-30" & date_game <= "1948-06-30" ~ "1947 - 48"))
1635403549040:HeatInfo <- HeatInfo |>
1635403549049:+ mutate(Season = case_when(date_game <= "1947-06-30" ~ "1946 - 47", date_game > "1947-06-30" & date_game <= "1948-06-30" ~ "1947 - 48", date_game > "1950-06-30" & date_game <= "1951-06-30" ~ "19450 - 51", date_game > "1951-06-30" & date_game <= "1951-06-30" ~ "19451 - 52", date_game > "1952-06-30" & date_game <= "1953-06-30" ~ "1952 - 53", date_game > "1953-06-30" & date_game <= "1954-06-30" ~ "1953 - 54", date_game > "1954-06-30" & date_game <= "1955-06-30" ~ "1954 - 55", date_game > "1955-06-30" & date_game <= "1956-06-30" ~ "1955 - 56", date_game > "1956-06-30" & date_game <= "1957-06-30" ~ "1956 - 57", date_game > "1957-06-30" & date_game <= "1958-06-30" ~ "1957 - 58", date_game > "1958-06-30" & date_game <= "1959-06-30" ~ "1958 - 59", date_game > "1959-06-30" & date_game <= "1960-06-30" ~ "1959 - 60", date_game > "1960-06-30" & date_game <= "1961-06-30" ~ "1960 - 61", date_game > "1961-06-30" & date_game <= "1962-06-30" ~ "1961 - 62", date_game > "1962-06-30" & date_game <= "1963-06-30" ~ "1962 - 63", date_game > "1963-06-30" & date_game <= "1964-06-30" ~ "1963 - 64", date_game > "1964-06-30" & date_game <= "1965-06-30" ~ "1964 - 65", date_game > "1965-06-30" & date_game <= "1966-06-30" ~ "1965 - 66", date_game > "1966-06-30" & date_game <= "1967-06-30" ~ "1966 - 67", date_game > "1967-06-30" & date_game <= "1968-06-30" ~ "1967 - 68",date_game > "1968-06-30" & date_game <= "1969-06-30" ~ "1968 - 69", date_game > "1969-06-30" & date_game <= "1970-06-30" ~ "1969 - 70", date_game > "1970-06-30" & date_game <= "1971-06-30" ~ "1970 - 71", date_game > "1971-06-30" & date_game <= "1972-06-30" ~ "1971 - 72", date_game > "1972-06-30" & date_game <= "1973-06-30" ~ "1972 - 73", date_game > "1973-06-30" & date_game <= "1974-06-30" ~ "1973 - 74", date_game > "1974-06-30" & date_game <= "1975-06-30" ~ "1974 - 75", date_game > "1975-06-30" & date_game <= "1976-06-30" ~ "1975 - 76", date_game > "1976-06-30" & date_game <= "1977-06-30" ~ "1976 - 67", date_game > "1977-06-30" & date_game <= "1978-06-30" ~ "1977 - 78",date_game > "1978-06-30" & date_game <= "1979-06-30" ~ "1978 - 79", date_game > "1979-06-30" & date_game <= "1980-06-30" ~ "1979 - 80", date_game > "1980-06-30" & date_game <= "1981-06-30" ~ "1980 - 81", date_game > "1981-06-30" & date_game <= "1982-06-30" ~ "1981 - 82", date_game > "1982-06-30" & date_game <= "1983-06-30" ~ "1982 - 83", date_game > "1983-06-30" & date_game <= "1984-06-30" ~ "1983 - 84", date_game > "1984-06-30" & date_game <= "1985-06-30" ~ "1984 - 85", date_game > "1985-06-30" & date_game <= "1986-06-30" ~ "1985 - 86", date_game > "1986-06-30" & date_game <= "1987-06-30" ~ "1986 - 87", date_game > "1987-06-30" & date_game <= "1988-06-30" ~ "1987 - 88",date_game > "1988-06-30" & date_game <= "1989-06-30" ~ "1988 - 89", date_game > "1989-06-30" & date_game <= "1990-06-30" ~ "1989 - 90", date_game > "1990-06-30" & date_game <= "1991-06-30" ~ "1990 - 91", date_game > "1991-06-30" & date_game <= "1992-06-30" ~ "1991 - 92", date_game > "1992-06-30" & date_game <= "1993-06-30" ~ "1992 - 93", date_game > "1993-06-30" & date_game <= "1994-06-30" ~ "1993 - 79", date_game > "1994-06-30" & date_game <= "1995-06-30" ~ "1994 - 95", date_game > "1995-06-30" & date_game <= "1996-06-30" ~ "1995 - 96", date_game > "1996-06-30" & date_game <= "1997-06-30" ~ "1996 - 97", date_game > "1997-06-30" & date_game <= "1998-06-30" ~ "1997 - 98",date_game > "1998-06-30" & date_game <= "1999-06-30" ~ "1998 - 99", date_game > "1999-06-30" & date_game <= "2000-06-30" ~ "1999 - 00", date_game > "2000-06-30" & date_game <= "2001-06-30" ~ "2000 - 01", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2002-06-30" & date_game <= "2003-06-30" ~ "2002 - 03", date_game > "2003-06-30" & date_game <= "2004-06-30" ~ "2003 - 04", date_game > "2004-06-30" & date_game <= "2005-06-30" ~ "2004 - 05", date_game > "2005-06-30" & date_game <= "2005-06-30" ~ "2005 - 06", date_game > "2006-06-30" & date_game <= "2007-06-30" ~ "2006 - 07", date_game > "2007-06-30" & date_game <= "2008-06-30" ~ "2007 - 08", date_game > "2008-06-30" & date_game <= "2009-06-30" ~ "2008 - 09", date_game > "2009-06-30" & date_game <= "2010-06-30" ~ "2009 - 10", date_game > "2010-06-30" & date_game <= "2011-06-30" ~ "2010 - 11", date_game > "2011-06-30" & date_game <= "2012-06-30" ~ "2011 - 12", date_game > "2012-06-30" & date_game <= "2013-06-30" ~ "2012 - 13", date_game > "2013-06-30" & date_game <= "2014-06-30" ~ "2013 - 14", date_game > "2014-06-30" & date_game <= "2015-06-30" ~ "2014 - 15", date_game > "2015-06-30" & date_game <= "2016-06-30" ~ "2015 - 16 ", date_game > "2016-06-30" & date_game <= "2017-06-30" ~ "2016 - 17", date_game > "2017-06-30" & date_game <= "2018-06-30" ~ "2017 - 18", date_game > "2018-06-30" & date_game <= "2019-06-30" ~ "2018 - 19", date_game > "2019-06-30" & date_game <= "2020-06-30" ~ "2019 - 20", date_game > "2020-06-30" & date_game <= "2021-06-30" ~ "2020 - 21"))
1635403556051:View(HeatInfo)
1635403592357:HeatInfo <- HeatInfo |>
1635403615822:HeatInfo <- HeatInfo |>
1635403615832:+ mutate(Season = case_when(date_game <= "1947-06-30" ~ "1946 - 47", date_game > "1947-06-30" & date_game <= "1948-06-30" ~ "1947 - 48", date_game > "1950-06-30" & date_game <= "1951-06-30" ~ "19450 - 51", date_game > "1951-06-30" & date_game <= "1951-06-30" ~ "19451 - 52", date_game > "1952-06-30" & date_game <= "1953-06-30" ~ "1952 - 53", date_game > "1953-06-30" & date_game <= "1954-06-30" ~ "1953 - 54", date_game > "1954-06-30" & date_game <= "1955-06-30" ~ "1954 - 55", date_game > "1955-06-30" & date_game <= "1956-06-30" ~ "1955 - 56", date_game > "1956-06-30" & date_game <= "1957-06-30" ~ "1956 - 57", date_game > "1957-06-30" & date_game <= "1958-06-30" ~ "1957 - 58", date_game > "1958-06-30" & date_game <= "1959-06-30" ~ "1958 - 59", date_game > "1959-06-30" & date_game <= "1960-06-30" ~ "1959 - 60", date_game > "1960-06-30" & date_game <= "1961-06-30" ~ "1960 - 61", date_game > "1961-06-30" & date_game <= "1962-06-30" ~ "1961 - 62", date_game > "1962-06-30" & date_game <= "1963-06-30" ~ "1962 - 63", date_game > "1963-06-30" & date_game <= "1964-06-30" ~ "1963 - 64", date_game > "1964-06-30" & date_game <= "1965-06-30" ~ "1964 - 65", date_game > "1965-06-30" & date_game <= "1966-06-30" ~ "1965 - 66", date_game > "1966-06-30" & date_game <= "1967-06-30" ~ "1966 - 67", date_game > "1967-06-30" & date_game <= "1968-06-30" ~ "1967 - 68",date_game > "1968-06-30" & date_game <= "1969-06-30" ~ "1968 - 69", date_game > "1969-06-30" & date_game <= "1970-06-30" ~ "1969 - 70", date_game > "1970-06-30" & date_game <= "1971-06-30" ~ "1970 - 71", date_game > "1971-06-30" & date_game <= "1972-06-30" ~ "1971 - 72", date_game > "1972-06-30" & date_game <= "1973-06-30" ~ "1972 - 73", date_game > "1973-06-30" & date_game <= "1974-06-30" ~ "1973 - 74", date_game > "1974-06-30" & date_game <= "1975-06-30" ~ "1974 - 75", date_game > "1975-06-30" & date_game <= "1976-06-30" ~ "1975 - 76", date_game > "1976-06-30" & date_game <= "1977-06-30" ~ "1976 - 67", date_game > "1977-06-30" & date_game <= "1978-06-30" ~ "1977 - 78",date_game > "1978-06-30" & date_game <= "1979-06-30" ~ "1978 - 79", date_game > "1979-06-30" & date_game <= "1980-06-30" ~ "1979 - 80", date_game > "1980-06-30" & date_game <= "1981-06-30" ~ "1980 - 81", date_game > "1981-06-30" & date_game <= "1982-06-30" ~ "1981 - 82", date_game > "1982-06-30" & date_game <= "1983-06-30" ~ "1982 - 83", date_game > "1983-06-30" & date_game <= "1984-06-30" ~ "1983 - 84", date_game > "1984-06-30" & date_game <= "1985-06-30" ~ "1984 - 85", date_game > "1985-06-30" & date_game <= "1986-06-30" ~ "1985 - 86", date_game > "1986-06-30" & date_game <= "1987-06-30" ~ "1986 - 87", date_game > "1987-06-30" & date_game <= "1988-06-30" ~ "1987 - 88",date_game > "1988-06-30" & date_game <= "1989-06-30" ~ "1988 - 89", date_game > "1989-06-30" & date_game <= "1990-06-30" ~ "1989 - 90", date_game > "1990-06-30" & date_game <= "1991-06-30" ~ "1990 - 91", date_game > "1991-06-30" & date_game <= "1992-06-30" ~ "1991 - 92", date_game > "1992-06-30" & date_game <= "1993-06-30" ~ "1992 - 93", date_game > "1993-06-30" & date_game <= "1994-06-30" ~ "1993 - 79", date_game > "1994-06-30" & date_game <= "1995-06-30" ~ "1994 - 95", date_game > "1995-06-30" & date_game <= "1996-06-30" ~ "1995 - 96", date_game > "1996-06-30" & date_game <= "1997-06-30" ~ "1996 - 97", date_game > "1997-06-30" & date_game <= "1998-06-30" ~ "1997 - 98",date_game > "1998-06-30" & date_game <= "1999-06-30" ~ "1998 - 99", date_game > "1999-06-30" & date_game <= "2000-06-30" ~ "1999 - 00", date_game > "2000-06-30" & date_game <= "2001-06-30" ~ "2000 - 01", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2002-06-30" & date_game <= "2003-06-30" ~ "2002 - 03", date_game > "2003-06-30" & date_game <= "2004-06-30" ~ "2003 - 04", date_game > "2004-06-30" & date_game <= "2005-06-30" ~ "2004 - 05", date_game > "2005-06-30" & date_game <= "2005-06-30" ~ "2005 - 06", date_game > "2006-06-30" & date_game <= "2007-06-30" ~ "2006 - 07", date_game > "2007-06-30" & date_game <= "2008-06-30" ~ "2007 - 08", date_game > "2008-06-30" & date_game <= "2009-06-30" ~ "2008 - 09", date_game > "2009-06-30" & date_game <= "2010-06-30" ~ "2009 - 10", date_game > "2010-06-30" & date_game <= "2011-06-30" ~ "2010 - 11", date_game > "2011-06-30" & date_game <= "2012-06-30" ~ "2011 - 12", date_game > "2012-06-30" & date_game <= "2013-06-30" ~ "2012 - 13", date_game > "2013-06-30" & date_game <= "2014-06-30" ~ "2013 - 14", date_game > "2014-06-30" & date_game <= "2015-06-30" ~ "2014 - 15", date_game > "2015-06-30" & date_game <= "2016-06-30" ~ "2015 - 16 ", date_game > "2016-06-30" & date_game <= "2017-06-30" ~ "2016 - 17", date_game > "2017-06-30" & date_game <= "2018-06-30" ~ "2017 - 18", date_game > "2018-06-30" & date_game <= "2019-06-30" ~ "2018 - 19", date_game > "2019-06-30" & date_game <= "2020-06-30" ~ "2019 - 20", date_game > "2020-06-30" & date_game <= "2021-06-30" ~ "2020 - 21"))
1635403652255:HeatInfo <- HeatInfo |>
1635403652264:+ mutate(Season = case_when(date_game <= "1947-06-30" ~ "1946 - 47", date_game > "1947-06-30" & date_game <= "1948-06-30" ~ "1947 - 48", date_game > "1950-06-30" & date_game <= "1951-06-30" ~ "19450 - 51", date_game > "1951-06-30" & date_game <= "1951-06-30" ~ "19451 - 52", date_game > "1952-06-30" & date_game <= "1953-06-30" ~ "1952 - 53", date_game > "1953-06-30" & date_game <= "1954-06-30" ~ "1953 - 54", date_game > "1954-06-30" & date_game <= "1955-06-30" ~ "1954 - 55", date_game > "1955-06-30" & date_game <= "1956-06-30" ~ "1955 - 56", date_game > "1956-06-30" & date_game <= "1957-06-30" ~ "1956 - 57", date_game > "1957-06-30" & date_game <= "1958-06-30" ~ "1957 - 58", date_game > "1958-06-30" & date_game <= "1959-06-30" ~ "1958 - 59", date_game > "1959-06-30" & date_game <= "1960-06-30" ~ "1959 - 60", date_game > "1960-06-30" & date_game <= "1961-06-30" ~ "1960 - 61", date_game > "1961-06-30" & date_game <= "1962-06-30" ~ "1961 - 62", date_game > "1962-06-30" & date_game <= "1963-06-30" ~ "1962 - 63", date_game > "1963-06-30" & date_game <= "1964-06-30" ~ "1963 - 64", date_game > "1964-06-30" & date_game <= "1965-06-30" ~ "1964 - 65", date_game > "1965-06-30" & date_game <= "1966-06-30" ~ "1965 - 66", date_game > "1966-06-30" & date_game <= "1967-06-30" ~ "1966 - 67", date_game > "1967-06-30" & date_game <= "1968-06-30" ~ "1967 - 68",date_game > "1968-06-30" & date_game <= "1969-06-30" ~ "1968 - 69", date_game > "1969-06-30" & date_game <= "1970-06-30" ~ "1969 - 70", date_game > "1970-06-30" & date_game <= "1971-06-30" ~ "1970 - 71", date_game > "1971-06-30" & date_game <= "1972-06-30" ~ "1971 - 72", date_game > "1972-06-30" & date_game <= "1973-06-30" ~ "1972 - 73", date_game > "1973-06-30" & date_game <= "1974-06-30" ~ "1973 - 74", date_game > "1974-06-30" & date_game <= "1975-06-30" ~ "1974 - 75", date_game > "1975-06-30" & date_game <= "1976-06-30" ~ "1975 - 76", date_game > "1976-06-30" & date_game <= "1977-06-30" ~ "1976 - 67", date_game > "1977-06-30" & date_game <= "1978-06-30" ~ "1977 - 78",date_game > "1978-06-30" & date_game <= "1979-06-30" ~ "1978 - 79", date_game > "1979-06-30" & date_game <= "1980-06-30" ~ "1979 - 80", date_game > "1980-06-30" & date_game <= "1981-06-30" ~ "1980 - 81", date_game > "1981-06-30" & date_game <= "1982-06-30" ~ "1981 - 82", date_game > "1982-06-30" & date_game <= "1983-06-30" ~ "1982 - 83", date_game > "1983-06-30" & date_game <= "1984-06-30" ~ "1983 - 84", date_game > "1984-06-30" & date_game <= "1985-06-30" ~ "1984 - 85", date_game > "1985-06-30" & date_game <= "1986-06-30" ~ "1985 - 86", date_game > "1986-06-30" & date_game <= "1987-06-30" ~ "1986 - 87", date_game > "1987-06-30" & date_game <= "1988-06-30" ~ "1987 - 88",date_game > "1988-06-30" & date_game <= "1989-06-30" ~ "1988 - 89", date_game > "1989-06-30" & date_game <= "1990-06-30" ~ "1989 - 90", date_game > "1990-06-30" & date_game <= "1991-06-30" ~ "1990 - 91", date_game > "1991-06-30" & date_game <= "1992-06-30" ~ "1991 - 92", date_game > "1992-06-30" & date_game <= "1993-06-30" ~ "1992 - 93", date_game > "1993-06-30" & date_game <= "1994-06-30" ~ "1993 - 79", date_game > "1994-06-30" & date_game <= "1995-06-30" ~ "1994 - 95", date_game > "1995-06-30" & date_game <= "1996-06-30" ~ "1995 - 96", date_game > "1996-06-30" & date_game <= "1997-06-30" ~ "1996 - 97", date_game > "1997-06-30" & date_game <= "1998-06-30" ~ "1997 - 98",date_game > "1998-06-30" & date_game <= "1999-06-30" ~ "1998 - 99", date_game > "1999-06-30" & date_game <= "2000-06-30" ~ "1999 - 00", date_game > "2000-06-30" & date_game <= "2001-06-30" ~ "2000 - 01", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2002-06-30" & date_game <= "2003-06-30" ~ "2002 - 03", date_game > "2003-06-30" & date_game <= "2004-06-30" ~ "2003 - 04", date_game > "2004-06-30" & date_game <= "2005-06-30" ~ "2004 - 05", date_game > "2005-06-30" & date_game <= "2005-06-30" ~ "2005 - 06", date_game > "2006-06-30" & date_game <= "2007-06-30" ~ "2006 - 07", date_game > "2007-06-30" & date_game <= "2008-06-30" ~ "2007 - 08", date_game > "2008-06-30" & date_game <= "2009-06-30" ~ "2008 - 09", date_game > "2009-06-30" & date_game <= "2010-06-30" ~ "2009 - 10", date_game > "2010-06-30" & date_game <= "2011-06-30" ~ "2010 - 11", date_game > "2011-06-30" & date_game <= "2012-06-30" ~ "2011 - 12", date_game > "2012-06-30" & date_game <= "2013-06-30" ~ "2012 - 13", date_game > "2013-06-30" & date_game <= "2014-06-30" ~ "2013 - 14", date_game > "2014-06-30" & date_game <= "2015-06-30" ~ "2014 - 15", date_game > "2015-06-30" & date_game <= "2016-06-30" ~ "2015 - 16 ", date_game > "2016-06-30" & date_game <= "2017-06-30" ~ "2016 - 17", date_game > "2017-06-30" & date_game <= "2018-06-30" ~ "2017 - 18", date_game > "2018-06-30" & date_game <= "2019-06-30" ~ "2018 - 19", date_game > "2019-06-30" & date_game <= "2020-06-30" ~ "2019 - 20", date_game > "2020-06-30" & date_game <= "2021-06-30" ~ "2020 - 21"))
1635403727217:HeatInfo <- HeatInfo |>
1635403727226:+ mutate(Season = case_when(date_game <= "1947-06-30" ~ "1946 - 47", date_game > "1947-06-30" & date_game <= "1948-06-30" ~ "1947 - 48", date_game > "1950-06-30" & date_game <= "1951-06-30" ~ "19450 - 51", date_game > "1951-06-30" & date_game <= "1951-06-30" ~ "19451 - 52", date_game > "1952-06-30" & date_game <= "1953-06-30" ~ "1952 - 53", date_game > "1953-06-30" & date_game <= "1954-06-30" ~ "1953 - 54", date_game > "1954-06-30" & date_game <= "1955-06-30" ~ "1954 - 55", date_game > "1955-06-30" & date_game <= "1956-06-30" ~ "1955 - 56", date_game > "1956-06-30" & date_game <= "1957-06-30" ~ "1956 - 57", date_game > "1957-06-30" & date_game <= "1958-06-30" ~ "1957 - 58", date_game > "1958-06-30" & date_game <= "1959-06-30" ~ "1958 - 59", date_game > "1959-06-30" & date_game <= "1960-06-30" ~ "1959 - 60", date_game > "1960-06-30" & date_game <= "1961-06-30" ~ "1960 - 61", date_game > "1961-06-30" & date_game <= "1962-06-30" ~ "1961 - 62", date_game > "1962-06-30" & date_game <= "1963-06-30" ~ "1962 - 63", date_game > "1963-06-30" & date_game <= "1964-06-30" ~ "1963 - 64", date_game > "1964-06-30" & date_game <= "1965-06-30" ~ "1964 - 65", date_game > "1965-06-30" & date_game <= "1966-06-30" ~ "1965 - 66", date_game > "1966-06-30" & date_game <= "1967-06-30" ~ "1966 - 67", date_game > "1967-06-30" & date_game <= "1968-06-30" ~ "1967 - 68",date_game > "1968-06-30" & date_game <= "1969-06-30" ~ "1968 - 69", date_game > "1969-06-30" & date_game <= "1970-06-30" ~ "1969 - 70", date_game > "1970-06-30" & date_game <= "1971-06-30" ~ "1970 - 71", date_game > "1971-06-30" & date_game <= "1972-06-30" ~ "1971 - 72", date_game > "1972-06-30" & date_game <= "1973-06-30" ~ "1972 - 73", date_game > "1973-06-30" & date_game <= "1974-06-30" ~ "1973 - 74", date_game > "1974-06-30" & date_game <= "1975-06-30" ~ "1974 - 75", date_game > "1975-06-30" & date_game <= "1976-06-30" ~ "1975 - 76", date_game > "1976-06-30" & date_game <= "1977-06-30" ~ "1976 - 67", date_game > "1977-06-30" & date_game <= "1978-06-30" ~ "1977 - 78",date_game > "1978-06-30" & date_game <= "1979-06-30" ~ "1978 - 79", date_game > "1979-06-30" & date_game <= "1980-06-30" ~ "1979 - 80", date_game > "1980-06-30" & date_game <= "1981-06-30" ~ "1980 - 81", date_game > "1981-06-30" & date_game <= "1982-06-30" ~ "1981 - 82", date_game > "1982-06-30" & date_game <= "1983-06-30" ~ "1982 - 83", date_game > "1983-06-30" & date_game <= "1984-06-30" ~ "1983 - 84", date_game > "1984-06-30" & date_game <= "1985-06-30" ~ "1984 - 85", date_game > "1985-06-30" & date_game <= "1986-06-30" ~ "1985 - 86", date_game > "1986-06-30" & date_game <= "1987-06-30" ~ "1986 - 87", date_game > "1987-06-30" & date_game <= "1988-06-30" ~ "1987 - 88",date_game > "1988-06-30" & date_game <= "1989-06-30" ~ "1988 - 89", date_game > "1989-06-30" & date_game <= "1990-06-30" ~ "1989 - 90", date_game > "1990-06-30" & date_game <= "1991-06-30" ~ "1990 - 91", date_game > "1991-06-30" & date_game <= "1992-06-30" ~ "1991 - 92", date_game > "1992-06-30" & date_game <= "1993-06-30" ~ "1992 - 93", date_game > "1993-06-30" & date_game <= "1994-06-30" ~ "1993 - 79", date_game > "1994-06-30" & date_game <= "1995-06-30" ~ "1994 - 95", date_game > "1995-06-30" & date_game <= "1996-06-30" ~ "1995 - 96", date_game > "1996-06-30" & date_game <= "1997-06-30" ~ "1996 - 97", date_game > "1997-06-30" & date_game <= "1998-06-30" ~ "1997 - 98",date_game > "1998-06-30" & date_game <= "1999-06-30" ~ "1998 - 99", date_game > "1999-06-30" & date_game <= "2000-06-30" ~ "1999 - 00", date_game > "2000-06-30" & date_game <= "2001-06-30" ~ "2000 - 01", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2002-06-30" & date_game <= "2003-06-30" ~ "2002 - 03", date_game > "2003-06-30" & date_game <= "2004-06-30" ~ "2003 - 04", date_game > "2004-06-30" & date_game <= "2005-06-30" ~ "2004 - 05", date_game > "2005-06-30" & date_game <= "2005-06-30" ~ "2005 - 06", date_game > "2006-06-30" & date_game <= "2007-06-30" ~ "2006 - 07", date_game > "2007-06-30" & date_game <= "2008-06-30" ~ "2007 - 08", date_game > "2008-06-30" & date_game <= "2009-06-30" ~ "2008 - 09", date_game > "2009-06-30" & date_game <= "2010-06-30" ~ "2009 - 10", date_game > "2010-06-30" & date_game <= "2011-06-30" ~ "2010 - 11", date_game > "2011-06-30" & date_game <= "2012-06-30" ~ "2011 - 12", date_game > "2012-06-30" & date_game <= "2013-06-30" ~ "2012 - 13", date_game > "2013-06-30" & date_game <= "2014-06-30" ~ "2013 - 14", date_game > "2014-06-30" & date_game <= "2015-06-30" ~ "2014 - 15", date_game > "2015-06-30" & date_game <= "2016-06-30" ~ "2015 - 16 ", date_game > "2016-06-30" & date_game <= "2017-06-30" ~ "2016 - 17", date_game > "2017-06-30" & date_game <= "2018-06-30" ~ "2017 - 18", date_game > "2018-06-30" & date_game <= "2019-06-30" ~ "2018 - 19", date_game > "2019-06-30" & date_game <= "2020-06-30" ~ "2019 - 20", date_game > "2020-06-30" & date_game <= "2021-06-30" ~ "2020 - 21"))
1635403754377:install.packages("lubridate")
1635403760648:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635403764610:HeatInfo$date_game <- as.Date(HeatInfo$date_game, "%m/%d/%Y")
1635403764707:HeatInfo <- HeatInfo |>
1635403764717:add_column(Season = "none")
1635403764779:HeatInfo <- HeatInfo |>
1635403764789:+ mutate(Season = case_when(date_game <= "1947-06-30" ~ "1946 - 47", date_game > "1947-06-30" & date_game <= "1948-06-30" ~ "1947 - 48", date_game > "1950-06-30" & date_game <= "1951-06-30" ~ "19450 - 51", date_game > "1951-06-30" & date_game <= "1951-06-30" ~ "19451 - 52", date_game > "1952-06-30" & date_game <= "1953-06-30" ~ "1952 - 53", date_game > "1953-06-30" & date_game <= "1954-06-30" ~ "1953 - 54", date_game > "1954-06-30" & date_game <= "1955-06-30" ~ "1954 - 55", date_game > "1955-06-30" & date_game <= "1956-06-30" ~ "1955 - 56", date_game > "1956-06-30" & date_game <= "1957-06-30" ~ "1956 - 57", date_game > "1957-06-30" & date_game <= "1958-06-30" ~ "1957 - 58", date_game > "1958-06-30" & date_game <= "1959-06-30" ~ "1958 - 59", date_game > "1959-06-30" & date_game <= "1960-06-30" ~ "1959 - 60", date_game > "1960-06-30" & date_game <= "1961-06-30" ~ "1960 - 61", date_game > "1961-06-30" & date_game <= "1962-06-30" ~ "1961 - 62", date_game > "1962-06-30" & date_game <= "1963-06-30" ~ "1962 - 63", date_game > "1963-06-30" & date_game <= "1964-06-30" ~ "1963 - 64", date_game > "1964-06-30" & date_game <= "1965-06-30" ~ "1964 - 65", date_game > "1965-06-30" & date_game <= "1966-06-30" ~ "1965 - 66", date_game > "1966-06-30" & date_game <= "1967-06-30" ~ "1966 - 67", date_game > "1967-06-30" & date_game <= "1968-06-30" ~ "1967 - 68",date_game > "1968-06-30" & date_game <= "1969-06-30" ~ "1968 - 69", date_game > "1969-06-30" & date_game <= "1970-06-30" ~ "1969 - 70", date_game > "1970-06-30" & date_game <= "1971-06-30" ~ "1970 - 71", date_game > "1971-06-30" & date_game <= "1972-06-30" ~ "1971 - 72", date_game > "1972-06-30" & date_game <= "1973-06-30" ~ "1972 - 73", date_game > "1973-06-30" & date_game <= "1974-06-30" ~ "1973 - 74", date_game > "1974-06-30" & date_game <= "1975-06-30" ~ "1974 - 75", date_game > "1975-06-30" & date_game <= "1976-06-30" ~ "1975 - 76", date_game > "1976-06-30" & date_game <= "1977-06-30" ~ "1976 - 67", date_game > "1977-06-30" & date_game <= "1978-06-30" ~ "1977 - 78",date_game > "1978-06-30" & date_game <= "1979-06-30" ~ "1978 - 79", date_game > "1979-06-30" & date_game <= "1980-06-30" ~ "1979 - 80", date_game > "1980-06-30" & date_game <= "1981-06-30" ~ "1980 - 81", date_game > "1981-06-30" & date_game <= "1982-06-30" ~ "1981 - 82", date_game > "1982-06-30" & date_game <= "1983-06-30" ~ "1982 - 83", date_game > "1983-06-30" & date_game <= "1984-06-30" ~ "1983 - 84", date_game > "1984-06-30" & date_game <= "1985-06-30" ~ "1984 - 85", date_game > "1985-06-30" & date_game <= "1986-06-30" ~ "1985 - 86", date_game > "1986-06-30" & date_game <= "1987-06-30" ~ "1986 - 87", date_game > "1987-06-30" & date_game <= "1988-06-30" ~ "1987 - 88",date_game > "1988-06-30" & date_game <= "1989-06-30" ~ "1988 - 89", date_game > "1989-06-30" & date_game <= "1990-06-30" ~ "1989 - 90", date_game > "1990-06-30" & date_game <= "1991-06-30" ~ "1990 - 91", date_game > "1991-06-30" & date_game <= "1992-06-30" ~ "1991 - 92", date_game > "1992-06-30" & date_game <= "1993-06-30" ~ "1992 - 93", date_game > "1993-06-30" & date_game <= "1994-06-30" ~ "1993 - 79", date_game > "1994-06-30" & date_game <= "1995-06-30" ~ "1994 - 95", date_game > "1995-06-30" & date_game <= "1996-06-30" ~ "1995 - 96", date_game > "1996-06-30" & date_game <= "1997-06-30" ~ "1996 - 97", date_game > "1997-06-30" & date_game <= "1998-06-30" ~ "1997 - 98",date_game > "1998-06-30" & date_game <= "1999-06-30" ~ "1998 - 99", date_game > "1999-06-30" & date_game <= "2000-06-30" ~ "1999 - 00", date_game > "2000-06-30" & date_game <= "2001-06-30" ~ "2000 - 01", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2002-06-30" & date_game <= "2003-06-30" ~ "2002 - 03", date_game > "2003-06-30" & date_game <= "2004-06-30" ~ "2003 - 04", date_game > "2004-06-30" & date_game <= "2005-06-30" ~ "2004 - 05", date_game > "2005-06-30" & date_game <= "2005-06-30" ~ "2005 - 06", date_game > "2006-06-30" & date_game <= "2007-06-30" ~ "2006 - 07", date_game > "2007-06-30" & date_game <= "2008-06-30" ~ "2007 - 08", date_game > "2008-06-30" & date_game <= "2009-06-30" ~ "2008 - 09", date_game > "2009-06-30" & date_game <= "2010-06-30" ~ "2009 - 10", date_game > "2010-06-30" & date_game <= "2011-06-30" ~ "2010 - 11", date_game > "2011-06-30" & date_game <= "2012-06-30" ~ "2011 - 12", date_game > "2012-06-30" & date_game <= "2013-06-30" ~ "2012 - 13", date_game > "2013-06-30" & date_game <= "2014-06-30" ~ "2013 - 14", date_game > "2014-06-30" & date_game <= "2015-06-30" ~ "2014 - 15", date_game > "2015-06-30" & date_game <= "2016-06-30" ~ "2015 - 16 ", date_game > "2016-06-30" & date_game <= "2017-06-30" ~ "2016 - 17", date_game > "2017-06-30" & date_game <= "2018-06-30" ~ "2017 - 18", date_game > "2018-06-30" & date_game <= "2019-06-30" ~ "2018 - 19", date_game > "2019-06-30" & date_game <= "2020-06-30" ~ "2019 - 20", date_game > "2020-06-30" & date_game <= "2021-06-30" ~ "2020 - 21"))
1635403764800:View(HeatInfo)
1635403764858:#ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635403764868:#geom_line(size = 0.2) +
1635403764877:#geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635403807240:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635403808694:HeatInfo$date_game <- as.Date(HeatInfo$date_game, "%m/%d/%Y")
1635403808843:HeatInfo <- HeatInfo |>
1635403808852:add_column(Season = "none")
1635403808908:HeatInfo <- HeatInfo |>
1635403808918:+ mutate(Season = case_when(date_game <= "1947-06-30" ~ "1946 - 47", date_game > "1947-06-30" & date_game <= "1948-06-30" ~ "1947 - 48", date_game > "1950-06-30" & date_game <= "1951-06-30" ~ "19450 - 51", date_game > "1951-06-30" & date_game <= "1951-06-30" ~ "19451 - 52", date_game > "1952-06-30" & date_game <= "1953-06-30" ~ "1952 - 53", date_game > "1953-06-30" & date_game <= "1954-06-30" ~ "1953 - 54", date_game > "1954-06-30" & date_game <= "1955-06-30" ~ "1954 - 55", date_game > "1955-06-30" & date_game <= "1956-06-30" ~ "1955 - 56", date_game > "1956-06-30" & date_game <= "1957-06-30" ~ "1956 - 57", date_game > "1957-06-30" & date_game <= "1958-06-30" ~ "1957 - 58", date_game > "1958-06-30" & date_game <= "1959-06-30" ~ "1958 - 59", date_game > "1959-06-30" & date_game <= "1960-06-30" ~ "1959 - 60", date_game > "1960-06-30" & date_game <= "1961-06-30" ~ "1960 - 61", date_game > "1961-06-30" & date_game <= "1962-06-30" ~ "1961 - 62", date_game > "1962-06-30" & date_game <= "1963-06-30" ~ "1962 - 63", date_game > "1963-06-30" & date_game <= "1964-06-30" ~ "1963 - 64", date_game > "1964-06-30" & date_game <= "1965-06-30" ~ "1964 - 65", date_game > "1965-06-30" & date_game <= "1966-06-30" ~ "1965 - 66", date_game > "1966-06-30" & date_game <= "1967-06-30" ~ "1966 - 67", date_game > "1967-06-30" & date_game <= "1968-06-30" ~ "1967 - 68",date_game > "1968-06-30" & date_game <= "1969-06-30" ~ "1968 - 69", date_game > "1969-06-30" & date_game <= "1970-06-30" ~ "1969 - 70", date_game > "1970-06-30" & date_game <= "1971-06-30" ~ "1970 - 71", date_game > "1971-06-30" & date_game <= "1972-06-30" ~ "1971 - 72", date_game > "1972-06-30" & date_game <= "1973-06-30" ~ "1972 - 73", date_game > "1973-06-30" & date_game <= "1974-06-30" ~ "1973 - 74", date_game > "1974-06-30" & date_game <= "1975-06-30" ~ "1974 - 75", date_game > "1975-06-30" & date_game <= "1976-06-30" ~ "1975 - 76", date_game > "1976-06-30" & date_game <= "1977-06-30" ~ "1976 - 67", date_game > "1977-06-30" & date_game <= "1978-06-30" ~ "1977 - 78",date_game > "1978-06-30" & date_game <= "1979-06-30" ~ "1978 - 79", date_game > "1979-06-30" & date_game <= "1980-06-30" ~ "1979 - 80", date_game > "1980-06-30" & date_game <= "1981-06-30" ~ "1980 - 81", date_game > "1981-06-30" & date_game <= "1982-06-30" ~ "1981 - 82", date_game > "1982-06-30" & date_game <= "1983-06-30" ~ "1982 - 83", date_game > "1983-06-30" & date_game <= "1984-06-30" ~ "1983 - 84", date_game > "1984-06-30" & date_game <= "1985-06-30" ~ "1984 - 85", date_game > "1985-06-30" & date_game <= "1986-06-30" ~ "1985 - 86", date_game > "1986-06-30" & date_game <= "1987-06-30" ~ "1986 - 87", date_game > "1987-06-30" & date_game <= "1988-06-30" ~ "1987 - 88",date_game > "1988-06-30" & date_game <= "1989-06-30" ~ "1988 - 89", date_game > "1989-06-30" & date_game <= "1990-06-30" ~ "1989 - 90", date_game > "1990-06-30" & date_game <= "1991-06-30" ~ "1990 - 91", date_game > "1991-06-30" & date_game <= "1992-06-30" ~ "1991 - 92", date_game > "1992-06-30" & date_game <= "1993-06-30" ~ "1992 - 93", date_game > "1993-06-30" & date_game <= "1994-06-30" ~ "1993 - 79", date_game > "1994-06-30" & date_game <= "1995-06-30" ~ "1994 - 95", date_game > "1995-06-30" & date_game <= "1996-06-30" ~ "1995 - 96", date_game > "1996-06-30" & date_game <= "1997-06-30" ~ "1996 - 97", date_game > "1997-06-30" & date_game <= "1998-06-30" ~ "1997 - 98",date_game > "1998-06-30" & date_game <= "1999-06-30" ~ "1998 - 99", date_game > "1999-06-30" & date_game <= "2000-06-30" ~ "1999 - 00", date_game > "2000-06-30" & date_game <= "2001-06-30" ~ "2000 - 01", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2002-06-30" & date_game <= "2003-06-30" ~ "2002 - 03", date_game > "2003-06-30" & date_game <= "2004-06-30" ~ "2003 - 04", date_game > "2004-06-30" & date_game <= "2005-06-30" ~ "2004 - 05", date_game > "2005-06-30" & date_game <= "2005-06-30" ~ "2005 - 06", date_game > "2006-06-30" & date_game <= "2007-06-30" ~ "2006 - 07", date_game > "2007-06-30" & date_game <= "2008-06-30" ~ "2007 - 08", date_game > "2008-06-30" & date_game <= "2009-06-30" ~ "2008 - 09", date_game > "2009-06-30" & date_game <= "2010-06-30" ~ "2009 - 10", date_game > "2010-06-30" & date_game <= "2011-06-30" ~ "2010 - 11", date_game > "2011-06-30" & date_game <= "2012-06-30" ~ "2011 - 12", date_game > "2012-06-30" & date_game <= "2013-06-30" ~ "2012 - 13", date_game > "2013-06-30" & date_game <= "2014-06-30" ~ "2013 - 14", date_game > "2014-06-30" & date_game <= "2015-06-30" ~ "2014 - 15", date_game > "2015-06-30" & date_game <= "2016-06-30" ~ "2015 - 16 ", date_game > "2016-06-30" & date_game <= "2017-06-30" ~ "2016 - 17", date_game > "2017-06-30" & date_game <= "2018-06-30" ~ "2017 - 18", date_game > "2018-06-30" & date_game <= "2019-06-30" ~ "2018 - 19", date_game > "2019-06-30" & date_game <= "2020-06-30" ~ "2019 - 20", date_game > "2020-06-30" & date_game <= "2021-06-30" ~ "2020 - 21"))
1635403808928:View(HeatInfo)
1635403864493:HeatInfo <- HeatInfo |>
1635403864502:+ mutate(Season = case_when(date_game <= "1947-06-30" ~ "1946 - 47", date_game > "1947-06-30" & date_game <= "1948-06-30" ~ "1947 - 48", date_game > "1950-06-30" & date_game <= "1951-06-30" ~ "19450 - 51", date_game > "1951-06-30" & date_game <= "1951-06-30" ~ "19451 - 52", date_game > "1952-06-30" & date_game <= "1953-06-30" ~ "1952 - 53", date_game > "1953-06-30" & date_game <= "1954-06-30" ~ "1953 - 54", date_game > "1954-06-30" & date_game <= "1955-06-30" ~ "1954 - 55", date_game > "1955-06-30" & date_game <= "1956-06-30" ~ "1955 - 56", date_game > "1956-06-30" & date_game <= "1957-06-30" ~ "1956 - 57", date_game > "1957-06-30" & date_game <= "1958-06-30" ~ "1957 - 58", date_game > "1958-06-30" & date_game <= "1959-06-30" ~ "1958 - 59", date_game > "1959-06-30" & date_game <= "1960-06-30" ~ "1959 - 60"))
1635403883410:HeatInfo <- HeatInfo |>
1635403883419:mutate(Season = case_when(date_game <= "1947-06-30" ~ "1946 - 47", date_game > "1947-06-30" & date_game <= "1948-06-30" ~ "1947 - 48", date_game > "1950-06-30" & date_game <= "1951-06-30" ~ "19450 - 51", date_game > "1951-06-30" & date_game <= "1951-06-30" ~ "19451 - 52", date_game > "1952-06-30" & date_game <= "1953-06-30" ~ "1952 - 53", date_game > "1953-06-30" & date_game <= "1954-06-30" ~ "1953 - 54", date_game > "1954-06-30" & date_game <= "1955-06-30" ~ "1954 - 55", date_game > "1955-06-30" & date_game <= "1956-06-30" ~ "1955 - 56", date_game > "1956-06-30" & date_game <= "1957-06-30" ~ "1956 - 57", date_game > "1957-06-30" & date_game <= "1958-06-30" ~ "1957 - 58", date_game > "1958-06-30" & date_game <= "1959-06-30" ~ "1958 - 59", date_game > "1959-06-30" & date_game <= "1960-06-30" ~ "1959 - 60"))
1635403954284:View(HeatInfo)
1635404073876:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635404075515:HeatInfo$date_game <- as.Date(HeatInfo$date_game, "%m/%d/%Y")
1635404075654:HeatInfo <- HeatInfo |>
1635404075664:add_column(Season = "none")
1635404075724:HeatInfo <- HeatInfo |>
1635404075734:mutate(Season = case_when(date_game <= "1947-06-30" ~ "1946 - 47", date_game > "1947-06-30" & date_game <= "1948-06-30" ~ "1947 - 48", date_game > "1950-06-30" & date_game <= "1951-06-30" ~ "19450 - 51", date_game > "1951-06-30" & date_game <= "1951-06-30" ~ "19451 - 52", date_game > "1952-06-30" & date_game <= "1953-06-30" ~ "1952 - 53", date_game > "1953-06-30" & date_game <= "1954-06-30" ~ "1953 - 54", date_game > "1954-06-30" & date_game <= "1955-06-30" ~ "1954 - 55", date_game > "1955-06-30" & date_game <= "1956-06-30" ~ "1955 - 56", date_game > "1956-06-30" & date_game <= "1957-06-30" ~ "1956 - 57", date_game > "1957-06-30" & date_game <= "1958-06-30" ~ "1957 - 58", date_game > "1958-06-30" & date_game <= "1959-06-30" ~ "1958 - 59", date_game > "1959-06-30" & date_game <= "1960-06-30" ~ "1959 - 60"))
1635404075893:HeatInfo <- HeatInfo |>
1635404075905:mutate(Season = case_when(date_game > "1960-06-30" & date_game <= "1961-06-30" ~ "1960 - 61", date_game > "1961-06-30" & date_game <= "1962-06-30" ~ "1961 - 62", date_game > "1962-06-30" & date_game <= "1963-06-30" ~ "1962 - 63", date_game > "1963-06-30" & date_game <= "1964-06-30" ~ "1963 - 64", date_game > "1964-06-30" & date_game <= "1965-06-30" ~ "1964 - 65", date_game > "1965-06-30" & date_game <= "1966-06-30" ~ "1965 - 66", date_game > "1966-06-30" & date_game <= "1967-06-30" ~ "1966 - 67", date_game > "1967-06-30" & date_game <= "1968-06-30" ~ "1967 - 68",date_game > "1968-06-30" & date_game <= "1969-06-30" ~ "1968 - 69", date_game > "1969-06-30" & date_game <= "1970-06-30" ~ "1969 - 70"))
1635404076438:HeatInfo <- HeatInfo |>
1635404076448:mutate(Season = case_when(date_game > "1970-06-30" & date_game <= "1971-06-30" ~ "1970 - 71", date_game > "1971-06-30" & date_game <= "1972-06-30" ~ "1971 - 72", date_game > "1972-06-30" & date_game <= "1973-06-30" ~ "1972 - 73", date_game > "1973-06-30" & date_game <= "1974-06-30" ~ "1973 - 74", date_game > "1974-06-30" & date_game <= "1975-06-30" ~ "1974 - 75", date_game > "1975-06-30" & date_game <= "1976-06-30" ~ "1975 - 76", date_game > "1976-06-30" & date_game <= "1977-06-30" ~ "1976 - 67", date_game > "1977-06-30" & date_game <= "1978-06-30" ~ "1977 - 78",date_game > "1978-06-30" & date_game <= "1979-06-30" ~ "1978 - 79", date_game > "1979-06-30" & date_game <= "1980-06-30" ~ "1979 - 80"))
1635404076559:HeatInfo <- HeatInfo |>
1635404076569:mutate(Season = case_when(date_game > "1980-06-30" & date_game <= "1981-06-30" ~ "1980 - 81", date_game > "1981-06-30" & date_game <= "1982-06-30" ~ "1981 - 82", date_game > "1982-06-30" & date_game <= "1983-06-30" ~ "1982 - 83", date_game > "1983-06-30" & date_game <= "1984-06-30" ~ "1983 - 84", date_game > "1984-06-30" & date_game <= "1985-06-30" ~ "1984 - 85", date_game > "1985-06-30" & date_game <= "1986-06-30" ~ "1985 - 86", date_game > "1986-06-30" & date_game <= "1987-06-30" ~ "1986 - 87", date_game > "1987-06-30" & date_game <= "1988-06-30" ~ "1987 - 88",date_game > "1988-06-30" & date_game <= "1989-06-30" ~ "1988 - 89", date_game > "1989-06-30" & date_game <= "1990-06-30" ~ "1989 - 90"))
1635404076693:HeatInfo <- HeatInfo |>
1635404076704:mutate(Season = case_when(date_game > "1990-06-30" & date_game <= "1991-06-30" ~ "1990 - 91", date_game > "1991-06-30" & date_game <= "1992-06-30" ~ "1991 - 92", date_game > "1992-06-30" & date_game <= "1993-06-30" ~ "1992 - 93", date_game > "1993-06-30" & date_game <= "1994-06-30" ~ "1993 - 79", date_game > "1994-06-30" & date_game <= "1995-06-30" ~ "1994 - 95", date_game > "1995-06-30" & date_game <= "1996-06-30" ~ "1995 - 96", date_game > "1996-06-30" & date_game <= "1997-06-30" ~ "1996 - 97", date_game > "1997-06-30" & date_game <= "1998-06-30" ~ "1997 - 98",date_game > "1998-06-30" & date_game <= "1999-06-30" ~ "1998 - 99", date_game > "1999-06-30" & date_game <= "2000-06-30" ~ "1999 - 00"))
1635404076811:HeatInfo <- HeatInfo |>
1635404076822:mutate(Season = case_when(date_game > "2000-06-30" & date_game <= "2001-06-30" ~ "2000 - 01", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2001-06-30" & date_game <= "2002-06-30" ~ "2001 - 02", date_game > "2002-06-30" & date_game <= "2003-06-30" ~ "2002 - 03", date_game > "2003-06-30" & date_game <= "2004-06-30" ~ "2003 - 04", date_game > "2004-06-30" & date_game <= "2005-06-30" ~ "2004 - 05", date_game > "2005-06-30" & date_game <= "2005-06-30" ~ "2005 - 06", date_game > "2006-06-30" & date_game <= "2007-06-30" ~ "2006 - 07", date_game > "2007-06-30" & date_game <= "2008-06-30" ~ "2007 - 08", date_game > "2008-06-30" & date_game <= "2009-06-30" ~ "2008 - 09", date_game > "2009-06-30" & date_game <= "2010-06-30" ~ "2009 - 10"))
1635404076928:HeatInfo <- HeatInfo |>
1635404076938:mutate(Season = case_when(date_game > "2010-06-30" & date_game <= "2011-06-30" ~ "2010 - 11", date_game > "2011-06-30" & date_game <= "2012-06-30" ~ "2011 - 12", date_game > "2012-06-30" & date_game <= "2013-06-30" ~ "2012 - 13", date_game > "2013-06-30" & date_game <= "2014-06-30" ~ "2013 - 14", date_game > "2014-06-30" & date_game <= "2015-06-30" ~ "2014 - 15", date_game > "2015-06-30" & date_game <= "2016-06-30" ~ "2015 - 16 ", date_game > "2016-06-30" & date_game <= "2017-06-30" ~ "2016 - 17", date_game > "2017-06-30" & date_game <= "2018-06-30" ~ "2017 - 18", date_game > "2018-06-30" & date_game <= "2019-06-30" ~ "2018 - 19", date_game > "2019-06-30" & date_game <= "2020-06-30" ~ "2019 - 20", date_game > "2020-06-30" & date_game <= "2021-06-30" ~ "2020 - 21"))
1635404077034:View(HeatInfo)
1635404101983:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635404104556:HeatInfo$date_game <- as.Date(HeatInfo$date_game, "%m/%d/%Y")
1635404107102:HeatInfo <- HeatInfo |>
1635404107110:add_column(Season = "none")
1635404109291:HeatInfo <- HeatInfo |>
1635404109299:mutate(Season = case_when(date_game <= "1947-06-30" ~ "1946 - 47", date_game > "1947-06-30" & date_game <= "1948-06-30" ~ "1947 - 48", date_game > "1950-06-30" & date_game <= "1951-06-30" ~ "19450 - 51", date_game > "1951-06-30" & date_game <= "1951-06-30" ~ "19451 - 52", date_game > "1952-06-30" & date_game <= "1953-06-30" ~ "1952 - 53", date_game > "1953-06-30" & date_game <= "1954-06-30" ~ "1953 - 54", date_game > "1954-06-30" & date_game <= "1955-06-30" ~ "1954 - 55", date_game > "1955-06-30" & date_game <= "1956-06-30" ~ "1955 - 56", date_game > "1956-06-30" & date_game <= "1957-06-30" ~ "1956 - 57", date_game > "1957-06-30" & date_game <= "1958-06-30" ~ "1957 - 58", date_game > "1958-06-30" & date_game <= "1959-06-30" ~ "1958 - 59", date_game > "1959-06-30" & date_game <= "1960-06-30" ~ "1959 - 60"))
1635404199525:HeatInfo <- HeatInfo |>
1635404199534:mutate(Season = case_when(date_game <= "1947-06-30" ~ "1946 - 47", date_game > "1947-06-30" & date_game <= "1948-06-30" ~ "1947 - 48", date_game > "1950-06-30" & date_game <= "1951-06-30" ~ "19450 - 51", date_game > "1951-06-30" & date_game <= "1951-06-30" ~ "19451 - 52", date_game > "1952-06-30" & date_game <= "1953-06-30" ~ "1952 - 53", date_game > "1953-06-30" & date_game <= "1954-06-30" ~ "1953 - 54", date_game > "1954-06-30" & date_game <= "1955-06-30" ~ "1954 - 55", date_game > "1955-06-30" & date_game <= "1956-06-30" ~ "1955 - 56", date_game > "1956-06-30" & date_game <= "1957-06-30" ~ "1956 - 57", date_game > "1957-06-30" & date_game <= "1958-06-30" ~ "1957 - 58", date_game > "1958-06-30" & date_game <= "1959-06-30" ~ "1958 - 59", date_game > "1959-06-30" & date_game <= "1960-06-30" ~ "1959 - 60"))
1635404205366:View(HeatInfo)
1635405147875:class(year_id)
1635405156516:class(HeatInfo$year_id)
1635405252044:HeatInfo <- HeatInfo |>
1635405252051:mutate(Season = case_when(year_id == 1951 ~ " 1950 - 51", year_id == 1952 ~ " 1951 - 52", year_id == 1953 ~ " 1952 - 53", year_id == 1954 ~ " 1953 - 54", year_id == 1955 ~ " 1954 - 55", year_id == 1956 ~ " 1955 - 56"))
1635405257201:View(HeatInfo)
1635405274534:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635405277239:HeatInfo$date_game <- as.Date(HeatInfo$date_game, "%m/%d/%Y")
1635405278794:HeatInfo <- HeatInfo |>
1635405278803:add_column(Season = "none")
1635405281348:HeatInfo <- HeatInfo |>
1635405281357:mutate(Season = case_when(year_id == 1951 ~ " 1950 - 51", year_id == 1952 ~ " 1951 - 52", year_id == 1953 ~ " 1952 - 53", year_id == 1954 ~ " 1953 - 54", year_id == 1955 ~ " 1954 - 55", year_id == 1956 ~ " 1955 - 56"))
1635405287293:View(HeatInfo)
1635405738577:HeatInfo <- HeatInfo |>
1635405738586:mutate(year_id = case_when(year_id == 1951 ~ "1950-51"))
1635405744807:View(HeatInfo)
1635405822089:HeatInfo <- HeatInfo |>
1635405822098:mutate(year_id = case_when(year_id == 1951 ~ "1950-51", TRUE ~ year_id))
1635405828467:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635405833004:HeatInfo$date_game <- as.Date(HeatInfo$date_game, "%m/%d/%Y")
1635405834747:HeatInfo <- HeatInfo |>
1635405834755:add_column(Season = "none")
1635405836086:HeatInfo <- HeatInfo |>
1635405836094:mutate(year_id = case_when(year_id == 1951 ~ "1950-51", TRUE ~ year_id))
1635405901106:HeatInfo$year_id <- as.character(HeatInfo$year_id)
1635405902755:HeatInfo <- HeatInfo |>
1635405902763:mutate(year_id = case_when(year_id == 1951 ~ "1950-51", TRUE ~ year_id))
1635406170938:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635406172969:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635406174587:HeatInfo$date_game <- as.Date(HeatInfo$date_game, "%m/%d/%Y")
1635406175413:HeatInfo$year_id <- as.character(HeatInfo$year_id)
1635406177533:HeatInfo <- HeatInfo |>
1635406177542:mutate(year_id = case_when(year_id == 1951 ~ "1950-51", year_id == 1961 ~ "1960 - 61", year_id == 1971 ~ "1970-71", year_id == 1981 ~ "1980-81", year_id == 1991 ~ "1990-91", year_id == 2001 ~ "2000-01", year_id == 2011 ~ "2010-11", year_id == 2021 ~ "2020-21", TRUE ~ year_id))
1635406183584:View(HeatInfo)
1635406294420:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635406294427:geom_line(size = 0.2) +
1635406294434:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635406294442:expand_limits(y=c(1100, 1900))
1635406608777:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635406608785:geom_line(size = 0.2) +
1635406608793:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635406608801:expand_limits(y=c(1100, 1900))
1635406629605:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635406634052:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635406634059:geom_line(size = 0.2) +
1635406634067:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635406634074:expand_limits(y=c(1100, 1900))
1635407035007:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635407035014:geom_line(size = 0.2) +
1635407035021:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635407035028:expand_limits(y=c(1100, 1900)) +
1635407035036:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001, 2021))
1635407151821:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635407151828:geom_line(size = 0.2) +
1635407151836:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635407151844:expand_limits(y=c(1100, 1900)) +
1635407151851:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001, 2021))
1635407160539:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900))
1635407213346:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635407213354:geom_line(size = 0.2) +
1635407213362:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635407213370:expand_limits(y=c(1100, 1900)) +
1635407213379:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001, 2021)) +
1635407213387:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900))
1635407338467:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635407338474:geom_line(size = 0.2) +
1635407338481:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635407338488:expand_limits(y=c(1100, 1900)) +
1635407338495:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001, 2021)) +
1635407338502:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900)) +
1635407338509:labs(
1635407338516:x = " ",
1635407338523:y = " "
1635407338529:)
1635407770573:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635407770582:geom_line(size = 0.2) +
1635407770590:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635407770596:expand_limits(y=c(1100, 1900)) +
1635407770603:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")
1635407792727:d
1635407796347:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635407796354:geom_line(size = 0.2) +
1635407796361:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635407796368:expand_limits(y=c(1100, 1900)) +
1635407796375:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")
1635407803804:h
1635407814340:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635407814346:geom_line(size = 0.2) +
1635407814353:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635407814360:expand_limits(y=c(1100, 1900)) +
1635407814366:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21"))
1635407873497:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635407873505:geom_line(size = 0.2) +
1635407873512:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635407873518:expand_limits(y=c(1100, 1900)) +
1635407873525:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635407873532:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900))
1635407916500:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635407916509:geom_line(size = 0.2) +
1635407916517:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635407916525:expand_limits(y=c(1100, 1900)) +
1635407916533:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635407916541:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900)) +
1635407916549:labs(
1635407916557:x = " ",
1635407916565:y = " "
1635407916573:)
1635408018370:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635408018378:geom_line(size = 0.2) +
1635408018385:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635408018394:expand_limits(y=c(1100, 1900)) +
1635408018401:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635408018409:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635408018417:labs(
1635408018425:x = " ",
1635408018432:y = " "
1635408018439:)
1635408368900:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635408368908:geom_line(size = 0.2) +
1635408368916:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635408368923:expand_limits(y=c(1100, 1900)) +
1635408368930:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635408368937:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635408368944:labs(
1635408368952:x = " ",
1635408368959:y = " "
1635408368965:) +
1635408368972:theme_bw() +
1635408368980:options(repr.plot.width=400, repr.plot.height=300)
1635408507329:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635408507336:geom_line(size = 0.2) +
1635408507342:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635408507349:expand_limits(y=c(1100, 1900)) +
1635408507355:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635408507361:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635408507368:labs(
1635408507374:x = " ",
1635408507381:y = " "
1635408507387:) +
1635408507394:theme_bw() +
1635408507400:theme(panel.border = element_blank()) +
1635408507407:options(repr.plot.width=400, repr.plot.height=300)
1635408548945:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635408548952:geom_line(size = 0.2) +
1635408548959:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635408548967:expand_limits(y=c(1100, 1900)) +
1635408548974:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635408548981:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635408548988:labs(
1635408548996:x = " ",
1635408549003:y = " "
1635408549011:) +
1635408549017:theme_bw() +
1635408549024:options(repr.plot.width=400, repr.plot.height=300)
1635408558301:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635408558309:geom_line(size = 0.2) +
1635408558317:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635408558325:expand_limits(y=c(1100, 1900)) +
1635408558332:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635408558339:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635408558346:labs(
1635408558353:x = " ",
1635408558360:y = " "
1635408558367:) +
1635408558373:theme_bw()
1635408566640:options(repr.plot.width=400, repr.plot.height=300)
1635408593606:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635408593612:geom_line(size = 0.2) +
1635408593619:geom_hline(yintercept = mean(HeatInfo$elo_i), color="grey")+
1635408593627:expand_limits(y=c(1100, 1900)) +
1635408593634:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635408593641:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635408593648:labs(
1635408593655:x = " ",
1635408593661:y = " "
1635408593668:) +
1635408593675:theme_bw() +
1635408593682:theme(panel.border = element_blank())
1635408894097:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635408894105:geom_line(size = 0.2) +
1635408894113:geom_hline(yintercept = Avg, color = "grey")
1635408899387:Avg <- 1500
1635408905364:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635408905372:geom_line(size = 0.2) +
1635408905380:geom_hline(yintercept = Avg, color = "grey")
1635408953579:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635408953586:geom_line(size = 0.2) +
1635408953593:geom_hline(yintercept = Avg, color = "grey") +
1635408953602:expand_limits(y=c(1100, 1900)) +
1635408953609:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635408953616:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635408953623:labs(
1635408953630:x = " ",
1635408953636:y = " "
1635408953642:) +
1635408953649:theme_bw() +
1635408953655:theme(panel.border = element_blank())
1635408962690:options(repr.plot.width=400, repr.plot.height=300)
1635409444031:x1 <- HeatInfo |>
1635409444040:filter( team_id == "MIA"| opp_id == "MIA")
1635409451205:View(x1)
1635409601092:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635409601099:geom_line(size = 0.2) +
1635409601107:geom_hline(yintercept = Avg, color = "grey") +
1635409601114:geaom_line(x = x1)
1635409608727:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635409608736:geom_line(size = 0.2) +
1635409608744:geom_hline(yintercept = Avg, color = "grey") +
1635409608752:geom_line(x = x1)
1635409848390:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635409848398:geom_line(size = 0.2) +
1635409848405:geom_hline(yintercept = Avg, color = "grey") +
1635409848413:geom_line(data = x1, color = "red")
1635409919113:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635409919120:geom_line(size = 0.2) +
1635409919127:geom_hline(yintercept = Avg, color = "grey") +
1635409919134:geom_line(data = x1, color = "red")
1635409928353:expand_limits(y=c(1100, 1900)) +
1635409928359:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635409928365:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635409928372:labs(
1635409928378:x = " ",
1635409928385:y = " "
1635409928393:) +
1635409928399:theme_bw() +
1635409928406:theme(panel.border = element_blank())
1635409945984:options(repr.plot.width=400, repr.plot.height=300)
1635410271281:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635410271287:geom_line(size = 0.2) +
1635410271292:geom_hline(yintercept = Avg, color = "grey") +
1635410271297:geom_line(data = x1, color = "red")
1635410280746:expand_limits(y=c(1100, 1900)) +
1635410280754:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635410280761:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635410280769:labs(
1635410280776:x = " ",
1635410280783:y = " "
1635410280790:) +
1635410280797:theme_bw(panel.border = element_blank()) +
1635410280803:options(repr.plot.width=400, repr.plot.height=300)
1635410450798:Avg <- 1500
1635410450806:x1 <- HeatInfo |>
1635410450812:filter( team_id == "MIA"| opp_id == "MIA")
1635410458528:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635410479960:install.packages("tidyverse")
1635410497378:library(tidyverse)
1635410499485:library(tidyverse)
1635410499497:library(broom)
1635410501765:library(tidymodels)
1635410504478:library(tidymodels)
1635410504488:library(palmerpenguins)
1635410509099:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635410513514:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635410515455:x1 <- HeatInfo |>
1635410515465:filter( team_id == "MIA"| opp_id == "MIA")
1635410515820:Avg <- 1500
1635410588975:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635410588983:geom_line(size = 0.2) +
1635410588989:geom_hline(yintercept = Avg, color = "grey") +
1635410588996:geom_line(data = x1, color = "red")
1635410599141:expand_limits(y=c(1100, 1900)) +
1635410599150:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635410599157:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635410599164:labs(
1635410599171:x = " ",
1635410599178:y = " "
1635410599185:) +
1635410599192:theme_bw(panel.border = element_blank()) +
1635410599199:options(repr.plot.width=400, repr.plot.height=300)
1635410856171:library(tidyverse)
1635410860229:library(broom)
1635410861853:library(tidymodels)
1635410864551:library(tidymodels)
1635410864561:library(palmerpenguins)
1635410868581:HeatInfo <- read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv", na = c("n/a", "", "NA"))
1635410871730:x1 <- HeatInfo |>
1635410871739:filter( team_id == "MIA"| opp_id == "MIA")
1635410878543:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635410878551:geom_line(size = 0.2) +
1635410878558:geom_hline(yintercept = Avg, color = "grey") +
1635410878565:geom_line(data = x1, color = "red")
1635410878592:expand_limits(y=c(1100, 1900)) +
1635410878600:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635410878607:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635410878613:labs(
1635410878620:x = " ",
1635410878627:y = " "
1635410878634:) +
1635410878641:theme_bw(panel.border = element_blank()) +
1635410878648:options(repr.plot.width=400, repr.plot.height=300)
1635410892368:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635410892376:geom_line(size = 0.2) +
1635410892383:geom_hline(yintercept = Avg, color = "grey") +
1635410892390:geom_line(data = x1, color = "red")
1635410892402:expand_limits(y=c(1100, 1900)) +
1635410892410:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635410892417:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635410892424:labs(
1635410892432:x = " ",
1635410892440:y = " "
1635410892448:) +
1635410892456:theme_bw() +
1635410892463:options(repr.plot.width=400, repr.plot.height=300)
1635410914796:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))+
1635410914804:geom_line(size = 0.2) +
1635410914812:geom_hline(yintercept = Avg, color = "grey") +
1635410914819:geom_line(data = x1, color = "red")
1635410914830:expand_limits(y=c(1100, 1900)) +
1635410914837:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635410914843:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635410914850:labs(
1635410914857:x = " ",
1635410914864:y = " "
1635410914870:) +
1635410914876:theme_bw()
1635410914891:options(repr.plot.width=400, repr.plot.height=300)
1635410968025:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i))
1635410968485:geom_line(size = 0.2) +
1635410968492:geom_hline(yintercept = Avg, color = "grey") +
1635410968499:geom_line(data = x1, color = "red")
1635410968509:expand_limits(y=c(1100, 1900)) +
1635410968516:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635410968523:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635410968529:labs(
1635410968536:x = " ",
1635410968543:y = " "
1635410968550:) +
1635410968557:theme_bw()
1635410968776:options(repr.plot.width=400, repr.plot.height=300)
1635411016214:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i)) +
1635411016221:geom_line(size = 0.2) +
1635411016227:geom_hline(yintercept = Avg, color = "grey") +
1635411016239:expand_limits(y=c(1100, 1900)) +
1635411016245:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635411016252:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635411016258:labs(
1635411016264:x = " ",
1635411016270:y = " "
1635411016276:) +
1635411016282:theme_bw()
1635411016294:options(repr.plot.width=400, repr.plot.height=300)
1635411036898:Avg <- 1500
1635411045247:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i)) +
1635411045253:geom_line(size = 0.2) +
1635411045259:geom_hline(yintercept = Avg, color = "grey") +
1635411045270:expand_limits(y=c(1100, 1900)) +
1635411045276:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635411045281:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635411045287:labs(
1635411045293:x = " ",
1635411045299:y = " "
1635411045304:) +
1635411045311:theme_bw()
1635411056027:options(repr.plot.width=400, repr.plot.height=300)
1635411162585:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i)) +
1635411162594:geom_line(size = 0.2) +
1635411162602:geom_hline(yintercept = Avg, color = "grey") +
1635411162609:geom_line( x = x1, color = "red")
1635411217821:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i)) +
1635411217829:geom_line(size = 0.2) +
1635411217837:geom_hline(yintercept = Avg, color = "grey") +
1635411217845:geom_line( data = x1, x = year_id, color = "red")
1635411251034:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i)) +
1635411251041:geom_line(size = 0.2) +
1635411251047:geom_hline(yintercept = Avg, color = "grey") +
1635411251053:geom_line( data = x1,  aes(x = year_id, color = "red"))
1635411315772:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i)) +
1635411315779:geom_line(size = 0.2) +
1635411315787:geom_hline(yintercept = Avg, color = "grey") +
1635411315794:geom_line( data = x1,  aes(x = year_id, color = "red"))
1635411327350:expand_limits(y=c(1100, 1900)) +
1635411327360:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635411327369:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635411327378:labs(
1635411327390:x = " ",
1635411327399:y = " "
1635411327409:) +
1635411327417:theme_bw()
1635411403123:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i)) +
1635411403131:geom_line(size = 0.2) +
1635411403139:geom_hline(yintercept = Avg, color = "grey") +
1635411403146:expand_limits(y=c(1100, 1900)) +
1635411403154:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635411403162:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635411403172:labs(
1635411403181:x = " ",
1635411403188:y = " "
1635411403196:) +
1635411403203:theme_bw() +
1635411403211:geom_line( data = x1,  aes(x = year_id, color = "red"))
1635411820275:x1 <- HeatInfo |>
1635411820285:filter( team_id == "MIA")
1635411834395:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635411834402:geom_line(size = 0.2) +
1635411834410:geom_hline(yintercept = Avg, color = "grey") +
1635411834417:expand_limits(y=c(1100, 1900)) +
1635411834424:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635411834431:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635411834438:labs(
1635411834446:x = " ",
1635411834453:y = " "
1635411834460:) +
1635411834467:theme_bw() +
1635411834475:geom_line( data = x1,  aes(x = year_id, color = "red"))
1635411976383:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635411976391:geom_line(size = 0.2, color = "gray91") +
1635411976399:geom_hline(yintercept = Avg, color = "grey") +
1635411976407:expand_limits(y=c(1100, 1900)) +
1635411976415:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635411976423:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635411976430:labs(
1635411976437:x = " ",
1635411976444:y = " "
1635411976452:) +
1635411976460:theme_bw() +
1635411976468:geom_line( data = x1,  aes(x = year_id, color = "red"))
1635412016571:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635412016579:geom_line(size = 0.2, color = "gray50") +
1635412016587:geom_hline(yintercept = Avg, color = "grey") +
1635412016594:expand_limits(y=c(1100, 1900)) +
1635412016602:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635412016609:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635412016617:labs(
1635412016624:x = " ",
1635412016632:y = " "
1635412016639:) +
1635412016645:theme_bw() +
1635412016652:geom_line( data = x1,  aes(x = year_id, color = "red"))
1635412018003:options(repr.plot.width=400, repr.plot.height=300)
1635412144402:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635412144410:geom_line(size = 0.2, color = "gray50") +
1635412144418:geom_hline(yintercept = Avg, color = "grey") +
1635412144426:expand_limits(y=c(1100, 1900)) +
1635412144434:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635412144442:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635412144448:labs(
1635412144456:x = " ",
1635412144462:y = " "
1635412144469:) +
1635412144477:theme_bw() +
1635412144484:theme(panel.background = element_blank())+
1635412144492:geom_line( data = x1,  aes(x = year_id, color = "red"))
1635412145725:options(repr.plot.width=400, repr.plot.height=300)
1635412186695:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635412186702:geom_line(size = 0.2, color = "gray50") +
1635412186709:geom_hline(yintercept = Avg, color = "grey") +
1635412186716:expand_limits(y=c(1100, 1900)) +
1635412186723:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635412186731:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635412186738:labs(
1635412186745:x = " ",
1635412186751:y = " "
1635412186758:) +
1635412186766:theme_bw() +
1635412186772:theme(panel.border = element_blank())+
1635412186779:geom_line( data = x1,  aes(x = year_id, color = "red"))
1635412188404:options(repr.plot.width=400, repr.plot.height=300)
1635412275077:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635412275084:geom_line(size = 0.2, color = "gray60") +
1635412275091:geom_hline(yintercept = Avg, color = "gray17") +
1635412275099:expand_limits(y=c(1100, 1900)) +
1635412275107:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635412275114:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635412275121:labs(
1635412275128:x = " ",
1635412275134:y = " "
1635412275141:) +
1635412275148:theme_bw() +
1635412275156:theme(panel.border = element_blank())+
1635412275163:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635412275170:theme(legend.position = "none")
1635412276629:options(repr.plot.width=400, repr.plot.height=300)
1635412603207:ggplot(data = HeatInfo, aes(x = date_game, y = elo_i, group = team_id)) +
1635412603214:geom_line(size = 0.2, color = "gray60") +
1635412603221:geom_hline(yintercept = Avg, color = "gray17") +
1635412603228:expand_limits(y=c(1100, 1900)) +
1635412603236:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635412603244:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635412603253:labs(
1635412603260:x = " ",
1635412603267:y = " "
1635412603274:) +
1635412603281:theme_bw() +
1635412603287:theme(panel.border = element_blank())+
1635412603295:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635412603301:theme(legend.position = "none")
1635412603410:options(repr.plot.width=400, repr.plot.height=300)
1635412684780:ggplot(data = HeatInfo, aes(x = date_game, y = elo_i, group = team_id)) +
1635412684787:geom_line(size = 0.2, color = "gray60") +
1635412684794:geom_hline(yintercept = Avg, color = "gray17") +
1635412684801:expand_limits(y=c(1100, 1900)) +
1635412684809:scale_x_discrete(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635412684817:scale_y_discrete(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635412684824:labs(
1635412684831:x = " ",
1635412684837:y = " "
1635412684844:) +
1635412684850:theme_bw() +
1635412684858:theme(panel.border = element_blank())+
1635412684865:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635412684871:theme(legend.position = "none")
1635412690099:options(repr.plot.width=400, repr.plot.height=300)
1635412777672:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = year_id)) +
1635412777680:geom_line(size = 0.2, color = "gray60") +
1635412777688:geom_hline(yintercept = Avg, color = "gray17") +
1635412777695:expand_limits(y=c(1100, 1900)) +
1635412777702:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635412777709:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635412777715:labs(
1635412777722:x = " ",
1635412777728:y = " "
1635412777735:) +
1635412777741:theme_bw() +
1635412777748:theme(panel.border = element_blank())+
1635412777755:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635412777762:theme(legend.position = "none")
1635412782159:options(repr.plot.width=400, repr.plot.height=300)
1635412869356:ggplot(data = HeatInfo, aes(x = as.numerical(date_game), y = elo_i, group = year_id)) +
1635412869363:geom_line(size = 0.2, color = "gray60") +
1635412869370:geom_hline(yintercept = Avg, color = "gray17") +
1635412869377:expand_limits(y=c(1100, 1900)) +
1635412869384:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635412869391:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635412869398:labs(
1635412869404:x = " ",
1635412869412:y = " "
1635412869419:) +
1635412869425:theme_bw() +
1635412869432:theme(panel.border = element_blank())+
1635412869439:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635412869446:theme(legend.position = "none")
1635412869510:options(repr.plot.width=400, repr.plot.height=300)
1635412894346:ggplot(data = HeatInfo, aes(x = as.numeric(date_game), y = elo_i, group = year_id)) +
1635412894354:geom_line(size = 0.2, color = "gray60") +
1635412894361:geom_hline(yintercept = Avg, color = "gray17") +
1635412894369:expand_limits(y=c(1100, 1900)) +
1635412894376:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635412894383:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635412894391:labs(
1635412894399:x = " ",
1635412894407:y = " "
1635412894414:) +
1635412894421:theme_bw() +
1635412894429:theme(panel.border = element_blank())+
1635412894436:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635412894444:theme(legend.position = "none")
1635412894857:options(repr.plot.width=400, repr.plot.height=300)
1635412954126:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = date_game)) +
1635412954133:geom_line(size = 0.2, color = "gray60") +
1635412954141:geom_hline(yintercept = Avg, color = "gray17") +
1635412954148:expand_limits(y=c(1100, 1900)) +
1635412954156:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635412954164:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635412954172:labs(
1635412954180:x = " ",
1635412954187:y = " "
1635412954194:) +
1635412954201:theme_bw() +
1635412954208:theme(panel.border = element_blank())+
1635412954216:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635412954225:theme(legend.position = "none")
1635412961473:options(repr.plot.width=400, repr.plot.height=300)
1635412993522:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = year_id)) +
1635412993530:geom_line(size = 0.2, color = "gray60") +
1635412993536:geom_hline(yintercept = Avg, color = "gray17") +
1635412993543:expand_limits(y=c(1100, 1900)) +
1635412993549:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635412993557:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635412993563:labs(
1635412993570:x = " ",
1635412993577:y = " "
1635412993584:) +
1635412993590:theme_bw() +
1635412993597:theme(panel.border = element_blank())+
1635412993604:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635412993611:theme(legend.position = "none")
1635412997429:options(repr.plot.width=400, repr.plot.height=300)
1635413092372:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635413092380:geom_line(size = 0.2, color = "gray60") +
1635413092387:geom_hline(yintercept = Avg, color = "gray17") +
1635413092395:expand_limits(y=c(1100, 1900)) +
1635413092403:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635413092410:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635413092416:labs(
1635413092423:x = " ",
1635413092431:y = " "
1635413092438:) +
1635413092445:theme_bw() +
1635413092453:theme(panel.border = element_blank())+
1635413092460:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635413092466:theme(legend.position = "none")
1635413093818:options(repr.plot.width=400, repr.plot.height=300)
1635413482026:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635413482034:geom_line(size = 0.2, color = "gray60") +
1635413482042:geom_hline(yintercept = Avg, color = "gray17") +
1635413482050:expand_limits(y=c(1100, 1900)) +
1635413482058:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635413482066:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635413482074:labs(
1635413482081:x = " ",
1635413482088:y = " "
1635413482095:) +
1635413482103:theme_bw() +
1635413482111:theme(panel.border = element_blank(),
1635413482118:panel.grid.major = element_line(colour="grey70",size=0.25))+
1635413482126:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635413482134:theme(legend.position = "none")
1635413483627:options(repr.plot.width=400, repr.plot.height=300)
1635413689624:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635413689632:geom_line(size = 0.2, color = "gray60") +
1635413689639:geom_hline(yintercept = Avg, color = "gray17") +
1635413689646:expand_limits(y=c(1100, 1900)) +
1635413689653:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635413689660:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635413689667:labs(
1635413689674:x = " ",
1635413689681:y = " "
1635413689688:) +
1635413689696:theme_bw() +
1635413689703:theme(panel.border = element_blank(),
1635413689709:panel.grid.minor = element_line(colour="gray60", size=0.2))+
1635413689716:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635413689723:theme(legend.position = "none")
1635413691084:options(repr.plot.width=400, repr.plot.height=300)
1635414234896:x2 <- x1 |>
1635414234908:filter(date_game == "6/18/2006")
1635414302819:x2 <- x1 |>
1635414302827:filter(date_game == "6/20/2006" | date_game == "6/21/2021" | date_game == "6/20/2013")
1635414314231:x2 <- x1 |>
1635414314240:filter(date_game == "6/20/2006" | date_game == "6/21/2012" | date_game == "6/20/2013")
1635414320609:View(x2)
1635414476204:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635414476212:geom_line(size = 0.2, color = "gray60") +
1635414476218:geom_hline(yintercept = Avg, color = "gray17") +
1635414476226:expand_limits(y=c(1100, 1900)) +
1635414476232:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635414476239:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635414476245:labs(
1635414476252:x = " ",
1635414476258:y = " "
1635414476264:) +
1635414476271:theme_bw() +
1635414476278:theme(panel.border = element_blank())+
1635414476285:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635414476291:theme(legend.position = "none") +
1635414476298:geom_point(data = x2, aes (x = year_id, y = elo_i, shape = "triangle", fill = "red"))
1635414477545:options(repr.plot.width=400, repr.plot.height=300)
1635414601951:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635414601960:geom_line(size = 0.2, color = "gray60") +
1635414601967:geom_hline(yintercept = Avg, color = "gray17") +
1635414601975:expand_limits(y=c(1100, 1900)) +
1635414601981:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635414601988:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635414601995:labs(
1635414602002:x = " ",
1635414602010:y = " "
1635414602018:) +
1635414602026:theme_bw() +
1635414602033:theme(panel.border = element_blank())+
1635414602040:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635414602048:theme(legend.position = "none") +
1635414602055:geom_point(data = x2, aes(x = year_id, y = elo_i, shape = "triangle", fill = "yellow"))
1635414603399:options(repr.plot.width=400, repr.plot.height=300)
1635414653843:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635414653850:geom_line(size = 0.2, color = "gray60") +
1635414653857:geom_hline(yintercept = Avg, color = "gray17") +
1635414653864:expand_limits(y=c(1100, 1900)) +
1635414653871:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635414653877:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635414653883:labs(
1635414653889:x = " ",
1635414653895:y = " "
1635414653901:) +
1635414653908:theme_bw() +
1635414653915:theme(panel.border = element_blank())+
1635414653922:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635414653928:theme(legend.position = "none") +
1635414653936:geom_point(data = x2, aes(x = year_id, y = elo_i), shape = "triangle", fill = "yellow")
1635414655246:options(repr.plot.width=400, repr.plot.height=300)
1635414763037:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635414763045:geom_line(size = 0.2, color = "gray60") +
1635414763052:geom_hline(yintercept = Avg, color = "gray17") +
1635414763059:expand_limits(y=c(1100, 1900)) +
1635414763066:scale_x_continuous(breaks = c(1951, 1961, 1971, 1981, 1991, 2001,2011, 2021), labels = c("1950-51", "1960-61", "1970-71", "1980-81", "1990-91", "2000-01", "2010-11", "2020-21")) +
1635414763073:scale_y_continuous(breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900), labels = c("1100", "1200", "1300", "1400", "Avg.", "1600", "1700", "1800", "1900")) +
1635414763080:labs(
1635414763088:x = " ",
1635414763095:y = " "
1635414763102:) +
1635414763109:theme_bw() +
1635414763116:theme(panel.border = element_blank())+
1635414763123:geom_line( data = x1,  aes(x = year_id, color = "red")) +
1635414763130:theme(legend.position = "none") +
1635414763136:geom_point(data = x2, aes(x = year_id, y = elo_i), shape = "triangle", fill = "yellow", size = 2)
1635414764516:options(repr.plot.width=400, repr.plot.height=300)
1635415382401:![image](Desktop/hwimage.png)
1635415420498:!image(Desktop/hwimage.png)
1635415548838:!image('COGS 137'/hwimage.png)
1635415577781:!image('COGS 137'/hwimage.png)
1635415625801:!image(Home/COGS 137/hwimage.png)
1635415632956:!image(Home/'COGS 137'/hwimage.png)
1635415640239:!image('COGS 137'/hwimage.png)
1635415667941:!image(~/'COGS 137'/hwimage.png)
1635415881244:!image(~/'COGS 137'/hwimage.png)
1635415891054:!image(/'COGS 137'/hwimage.png)
1635415895110:!image('COGS 137'/hwimage.png)
1635415907179:!image('COGS 137'/hwimage.png)
1635416118331:![image](/'COGS 137'/hwimage.png)
1635416151614:### Question 4
1635416151622:https://projects.fivethirtyeight.com/complete-history-of-the-nba/#heat
1635416151630:![image](/'COGS 137'/hwimage.png)
1635416485953:ggplot(data = HeatInfo, aes(x = year_id, y = elo_i, group = team_id)) +
1635416485961:geom_line(size = 0.2, color = "gray60") +
1635416485969:geom_hline(yintercept = Avg, color = "gray17") +
1635416485978:expand_limits(y = c(1100, 1900)) +
1635416485985:scale_x_continuous(
1635416485993:breaks = c(1951, 1961, 1971, 1981, 1991, 2001, 2011, 2021),
1635416486001:labels = c(
1635416486009:"1950-51",
1635416486016:"1960-61",
1635416486024:"1970-71",
1635416486032:"1980-81",
1635416486040:"1990-91",
1635416486049:"2000-01",
1635416486057:"2010-11",
1635416486065:"2020-21"
1635416486073:)
1635416486081:) +
1635416486089:scale_y_continuous(
1635416486097:breaks = c(1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900),
1635416486105:labels = c(
1635416486113:"1100",
1635416486121:"1200",
1635416486130:"1300",
1635416486138:"1400",
1635416486147:"Avg.",
1635416486156:"1600",
1635416486165:"1700",
1635416486173:"1800",
1635416486183:"1900"
1635416486192:)
1635416486201:) +
1635416486212:labs(x = " ",
1635416486222:y = " ") +
1635416486231:theme_bw() +
1635416486240:theme(panel.border = element_blank()) +
1635416486249:geom_line(data = x1,  aes(x = year_id, color = "red")) +
1635416486260:theme(legend.position = "none") +
1635416486269:geom_point(
1635416486278:data = x2,
1635416486286:aes(x = year_id, y = elo_i),
1635416486293:shape = "triangle",
1635416486303:fill = "yellow",
1635416486313:size = 2
1635416486321:)
1635416487665:options(repr.plot.width = 400, repr.plot.height = 300)
1635451784677:library(tidyverse)
1635451787184:library(tidyverse)
1635451787195:library(broom)
1635451788228:library(tidymodels)
1635451791900:library(tidymodels)
1635451791912:library(palmerpenguins)
1635451798824:HeatInfo <-
1635451798834:read_csv(
1635451798842:"https://raw.githubusercontent.com/fivethirtyeight/data/master/nba-elo/nbaallelo.csv",
1635451798850:na = c("n/a", "", "NA")
1635451798859:)
1635451884536:### Question 7
1635451884543:![image](~/COGS 137/hwimage2.png)
1635451884550:```{r}
1635451884635:```
1635452395040:datatoplot <- tibble ( x = c("Netherlands", "Canada", "France", "U.S", "U.K.", "Mexico"),
1635452395050:y = c(3, 1.5, 1.31, 1.125, 0.75, 0.093))
1635452405955:View(datatoplot)
1635452537322:ggplot( data = datatoplot, aes(x, y, color = x))
1635452609494:ggplot( data = datatoplot, aes(x, y, color = x)) +
1635452609501:geom_bar(stat = "identity")
1635452772942:datatoplot <- tibble ( x = fct_infreq(c("Netherlands", "Canada", "France", "U.S", "U.K.", "Mexico")),
1635452772949:y = c(3, 1.5, 1.31, 1.125, 0.75, 0.093))
1635452778583:ggplot( data = datatoplot, aes(x, y, color = x)) +
1635452778591:geom_bar(stat = "identity")
1635452866197:ggplot( data = datatoplot, aes(fct_infreq(x), y, color = x)) +
1635452866204:geom_bar(stat = "identity")
1635452908600:ggplot( data = datatoplot, aes(x = fct_infreq(x), y, color = x)) +
1635452908607:geom_bar(stat = "identity")
1635453087013:ggplot( data = datatoplot, aes(x, y, color = x)) +
1635453087021:geom_bar(stat = "identity", fill = x)
1635453093411:datatoplot <- tibble ( x = c("Netherlands", "Canada", "France", "U.S", "U.K.", "Mexico"),
1635453093420:y = c(3, 1.5, 1.31, 1.125, 0.75, 0.093))
1635453099059:ggplot( data = datatoplot, aes(x, y, color = x)) +
1635453099065:geom_bar(stat = "identity", fill = x)
1635453132415:ggplot( data = datatoplot, aes(x, y, color = x)) +
1635453132424:geom_bar(stat = "identity", aes(fill = x))
1635453362801:datatoplot$x <- factor(datatoplot$x, levels=c("Netherlands", "Canada", "France", "U.S", "U.K.", "Mexico"))
1635453368170:ggplot( data = datatoplot, aes(x, y, color = x)) +
1635453368179:geom_bar(stat = "identity", aes(fill = x))
1635454426575:ggplot( data = datatoplot, aes(x, y, color = x)) +
1635454426582:geom_bar(stat = "identity", aes(fill = x)) +
1635454426590:scale_y_continuous(
1635454426597:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0))
1635455143680:ggplot( data = datatoplot, aes(x, y, color = x)) +
1635455143688:geom_bar(stat = "identity", aes(fill = x)) +
1635455143696:scale_fill_brewer(palette="Set1")+
1635455143702:scale_y_continuous(
1635455143708:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0))
1635455164758:ggplot( data = datatoplot, aes(x, y)) +
1635455164765:geom_bar(stat = "identity", aes(fill = x)) +
1635455164773:scale_fill_brewer(palette="Set1")+
1635455164780:scale_y_continuous(
1635455164786:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0))
1635455408529:ggplot( data = datatoplot, aes(x, y)) +
1635455408535:geom_bar(stat = "identity", aes(fill = x)) +
1635455408542:scale_fill_brewer(palette="Set1")+
1635455408549:scale_y_continuous(
1635455408556:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635455408563:theme(legend.position = "none") +
1635455408570:theme_bw() +
1635455408577:theme(panel.border = element_blank()) +
1635455408584:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits")
1635455470317:ggplot( data = datatoplot, aes(x, y)) +
1635455470324:geom_bar(stat = "identity", aes(fill = x)) +
1635455470331:scale_fill_brewer(palette="Set1")+
1635455470339:theme(legend.position = "none") +
1635455470345:scale_y_continuous(
1635455470353:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635455470361:theme_bw() +
1635455470369:theme(panel.border = element_blank()) +
1635455470376:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits")
1635455488138:ggplot( data = datatoplot, aes(x, y)) +
1635455488146:geom_bar(stat = "identity", aes(fill = x)) +
1635455488152:theme(legend.position = "none") +
1635455488160:scale_fill_brewer(palette="Set1")+
1635455488168:scale_y_continuous(
1635455488176:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635455488182:theme_bw() +
1635455488190:theme(panel.border = element_blank()) +
1635455488196:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits")
1635455579751:ggplot( data = datatoplot, aes(x, y)) +
1635455579758:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635455579765:scale_fill_brewer(palette="Set1")+
1635455579771:scale_y_continuous(
1635455579778:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635455579784:theme_bw() +
1635455579791:theme(panel.border = element_blank()) +
1635455579798:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits")
1635455664369:ggplot( data = datatoplot, aes(x, y)) +
1635455664376:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635455664382:scale_fill_brewer(palette="Set1")+
1635455664388:scale_y_continuous(
1635455664395:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635455664403:theme_bw() +
1635455664410:theme(panel.border = element_blank()) +
1635455664417:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635455664424:theme(plot.title = element_text(size=10))
1635455713211:library(extrafont)
1635455722407:import.packages("extrafont")
1635455736320:windowsFont()
1635455767315:install.packages('extrafont')
1635455804588:library(extrafont)
1635455816773:fonts()
1635455875563:ggplot( data = datatoplot, aes(x, y)) +
1635455875572:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635455875579:scale_fill_brewer(palette="Set1")+
1635455875585:scale_y_continuous(
1635455875592:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635455875598:theme_bw() +
1635455875604:theme(panel.border = element_blank()) +
1635455875611:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635455875618:theme(text=element_text(size=16, family="Impact"))
1635455986922:ggplot( data = datatoplot, aes(x, y)) +
1635455986929:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635455986935:scale_fill_brewer(palette="Set1")+
1635455986942:scale_y_continuous(
1635455986949:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635455986955:theme_bw() +
1635455986962:theme(panel.border = element_blank()) +
1635455986968:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635455986975:theme(text=element_text(size=10, family="Comic Sans MS"))
1635456033719:ggplot( data = datatoplot, aes(x, y)) +
1635456033726:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635456033732:scale_fill_brewer(palette="Set1")+
1635456033737:scale_y_continuous(
1635456033743:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635456033749:theme_bw() +
1635456033754:theme(panel.border = element_blank()) +
1635456033760:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635456033765:theme(text=element_text(size = 10, family ="Comic Sans MS"))
1635456061078:ggplot( data = datatoplot, aes(x, y)) +
1635456061085:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635456061092:scale_fill_brewer(palette="Set1")+
1635456061099:scale_y_continuous(
1635456061106:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635456061112:theme_bw() +
1635456061119:theme(panel.border = element_blank()) +
1635456061127:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635456061133:theme(text=element_text(size = 10, family ="Comic Sans MS")) +
1635456061140:theme(plot.title = element_text(size=15)) +
1635456070799:h
1635456072514:ggplot( data = datatoplot, aes(x, y)) +
1635456072521:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635456072528:scale_fill_brewer(palette="Set1")+
1635456072536:scale_y_continuous(
1635456072543:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635456072549:theme_bw() +
1635456072556:theme(panel.border = element_blank()) +
1635456072562:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635456072569:theme(text=element_text(size = 10, family ="Comic Sans MS")) +
1635456072575:theme(plot.title = element_text(size=15))
1635456326524:ggplot( data = datatoplot, aes(x, y)) +
1635456326532:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635456326539:scale_fill_brewer(palette="Blues")+
1635456326545:scale_y_continuous(
1635456326552:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635456326558:theme_bw() +
1635456326565:theme(panel.border = element_blank()) +
1635456326571:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635456326578:theme(text=element_text(size = 10, family ="Comic Sans MS")) +
1635456326584:theme(
1635456326591:panel.background = element_rect(fill = "lightblue",
1635456326597:colour = "lightblue",
1635456326604:size = 0.5, linetype = "solid"),
1635456326610:panel.grid.major = element_line(size = 0.5, linetype = 'solid',
1635456326618:colour = "white"),
1635456326625:panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
1635456326633:colour = "white"))
1635456364985:ggplot( data = datatoplot, aes(x, y)) +
1635456364996:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635456365008:scale_fill_brewer(palette="Blues")+
1635456365019:scale_y_continuous(
1635456365030:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635456365040:theme_bw() +
1635456365052:theme(panel.border = element_blank()) +
1635456365060:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635456365067:theme(text=element_text(size = 10, family ="Comic Sans MS")) +
1635456365074:theme(
1635456365080:panel.background = element_rect(fill = "Gray60",
1635456365087:colour = "Gray60",
1635456365096:size = 0.5, linetype = "solid"),
1635456365104:panel.grid.major = element_line(size = 0.5, linetype = 'solid',
1635456365118:colour = "white"),
1635456365126:panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
1635456365135:colour = "white"))
1635456378337:ggplot( data = datatoplot, aes(x, y)) +
1635456378344:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635456378351:scale_fill_brewer(palette="Blues")+
1635456378357:scale_y_continuous(
1635456378363:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635456378369:theme_bw() +
1635456378375:theme(panel.border = element_blank()) +
1635456378381:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635456378387:theme(text=element_text(size = 10, family ="Comic Sans MS")) +
1635456378393:theme(
1635456378398:panel.background = element_rect(fill = "Gray90",
1635456378405:colour = "Gray90",
1635456378412:size = 0.5, linetype = "solid"),
1635456378418:panel.grid.major = element_line(size = 0.5, linetype = 'solid',
1635456378424:colour = "white"),
1635456378429:panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
1635456378436:colour = "white"))
1635456439178:loadfonts(device = "all")
1635456444257:loadfonts()
1635456476781:ggplot( data = datatoplot, aes(x, y)) +
1635456476788:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635456476796:scale_fill_brewer(palette="Blues")+
1635456476803:scale_y_continuous(
1635456476810:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635456476816:theme_bw() +
1635456476823:theme(panel.border = element_blank()) +
1635456476829:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635456476836:theme(text=element_text(size = 10, family ="Comic Sans MS")) +
1635456476842:theme(
1635456476850:panel.background = element_rect(fill = "Gray90",
1635456476856:colour = "Gray90",
1635456476864:size = 0.5, linetype = "solid"),
1635456476871:panel.grid.major = element_line(size = 0.5, linetype = 'solid',
1635456476878:colour = "white"),
1635456476885:panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
1635456476891:colour = "white"))
1635456507736:ggplot( data = datatoplot, aes(x, y)) +
1635456507743:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635456507750:scale_fill_brewer(palette="Blues")+
1635456507756:scale_y_continuous(
1635456507763:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635456507769:theme_bw() +
1635456507775:theme(panel.border = element_blank()) +
1635456507782:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635456507789:theme(text=element_text(size = 10, family ="Comic Sans MS")) +
1635456507795:theme(
1635456507802:panel.background = element_rect(fill = "Gray90",
1635456507809:colour = "Gray90",
1635456507816:size = 0.5, linetype = "solid"),
1635456507822:panel.grid.major = element_line(size = 0.5, linetype = 'solid',
1635456507829:colour = "white"),
1635456507835:panel.grid.minor = element_line(size = 0.1, linetype = 'solid',
1635456507842:colour = "white"))
1635456617095:ggplot( data = datatoplot, aes(x, y)) +
1635456617104:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635456617114:scale_fill_brewer(palette="Blues")+
1635456617121:scale_y_continuous(
1635456617128:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635456617135:theme_bw() +
1635456617142:theme(panel.border = element_blank()) +
1635456617150:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635456617159:theme(text=element_text(size = 10, family ="Comic Sans MS")) +
1635456617168:theme(
1635456617179:panel.background = element_rect(fill = "Gray90",
1635456617187:colour = "Gray90",
1635456617195:size = 0.5, linetype = "solid"),
1635456617202:panel.grid.major = element_line(size = 0.5, linetype = 'solid',
1635456617209:colour = "white"),
1635456617218:panel.grid.minor = element_line(size = 0.2, linetype = 'solid',
1635456617227:colour = "white")) +
1635456617236:scale_y_continuous(minor_breaks = seq(1, 10, 0.5))
1635456680869:ggplot( data = datatoplot, aes(x, y)) +
1635456680877:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635456680884:scale_fill_brewer(palette="Blues")+
1635456680890:scale_y_continuous(
1635456680897:breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635456680903:theme_bw() +
1635456680910:theme(panel.border = element_blank()) +
1635456680918:labs(title = "Average Number of Dentist Consultations per Person per Year by Country", x = "Country", y = "Average Number of Visits") +
1635456680925:theme(text=element_text(size = 10, family ="Comic Sans MS")) +
1635456680932:theme(
1635456680940:panel.background = element_rect(fill = "Gray90",
1635456680947:colour = "Gray90",
1635456680954:size = 0.5, linetype = "solid"),
1635456680961:panel.grid.major = element_line(size = 0.5, linetype = 'solid',
1635456680968:colour = "white"),
1635456680975:panel.grid.minor = element_line(size = 0.2, linetype = 'solid',
1635456680983:colour = "white")) +
1635456680990:scale_y_continuous(minor_breaks = seq(0, 10, 0.1))
1635456911810:ggplot(data = datatoplot, aes(x, y)) +
1635456911816:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635456911822:scale_fill_brewer(palette = "Blues") +
1635456911829:scale_y_continuous(breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635456911835:theme_bw() +
1635456911841:theme(panel.border = element_blank()) +
1635456911847:labs(
1635456911854:title = "Average Number of Dentist Consultations per Person per Year by Country",
1635456911859:caption = "Data Source: Reddit",
1635456911865:x = "Country",
1635456911871:y = "Average Number of Visits"
1635456911877:) +
1635456911883:theme(text = element_text(size = 10, family = "Comic Sans MS")) +
1635456911889:theme(
1635456911895:panel.background = element_rect(
1635456911901:fill = "Gray90",
1635456911907:colour = "Gray90",
1635456911913:size = 0.5,
1635456911918:linetype = "solid"
1635456911924:),
1635456911930:panel.grid.major = element_line(
1635456911936:size = 0.5,
1635456911942:linetype = 'solid',
1635456911949:colour = "white"
1635456911956:),
1635456911963:panel.grid.minor = element_line(
1635456911970:size = 0.2,
1635456911976:linetype = 'solid',
1635456911982:colour = "white"
1635456911989:)
1635456911995:) +
1635456912001:scale_y_continuous(minor_breaks = seq(0, 10, 0.1)) +
1635456912008:theme(plot.title = element_text(hjust = 0.5),
1635456912016:plot.subtitle = element_text(hjust = 0.5))
1635456951076:ggplot(data = datatoplot, aes(x, y)) +
1635456951084:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635456951093:scale_fill_brewer(palette = "Blues") +
1635456951101:scale_y_continuous(breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635456951109:theme_bw() +
1635456951118:theme(panel.border = element_blank()) +
1635456951125:labs(
1635456951133:title = "Average Number of Dentist Consultations per Person
1635456951142:per Year by Country",
1635456951150:caption = "Data Source: Reddit",
1635456951160:x = "Country",
1635456951166:y = "Average Number of Visits"
1635456951172:) +
1635456951178:theme(text = element_text(size = 10, family = "Comic Sans MS")) +
1635456951185:theme(
1635456951191:panel.background = element_rect(
1635456951198:fill = "Gray90",
1635456951204:colour = "Gray90",
1635456951210:size = 0.5,
1635456951216:linetype = "solid"
1635456951222:),
1635456951229:panel.grid.major = element_line(
1635456951235:size = 0.5,
1635456951241:linetype = 'solid',
1635456951247:colour = "white"
1635456951253:),
1635456951259:panel.grid.minor = element_line(
1635456951266:size = 0.2,
1635456951274:linetype = 'solid',
1635456951281:colour = "white"
1635456951288:)
1635456951295:) +
1635456951303:scale_y_continuous(minor_breaks = seq(0, 10, 0.1)) +
1635456951313:theme(plot.title = element_text(hjust = 0.5))
1635457076976:ggplot(data = datatoplot, aes(x, y)) +
1635457076983:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635457076989:scale_fill_brewer(palette = "Blues") +
1635457076996:scale_y_continuous(breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635457077004:theme_bw() +
1635457077011:theme(panel.border = element_blank()) +
1635457077018:labs(
1635457077025:title = "Average Number of Dentist Consultations per Person
1635457077032:per Year by Country",
1635457077039:caption = "Data Source: Reddit",
1635457077046:x = "Country",
1635457077053:y = "Average Number of Visits"
1635457077060:) +
1635457077067:theme(text = element_text(size = 10, family = "Comic Sans MS")) +
1635457077075:theme(
1635457077083:panel.background = element_rect(
1635457077090:fill = "Gray90",
1635457077096:colour = "Gray90",
1635457077103:size = 0.5,
1635457077110:linetype = "solid"
1635457077116:),
1635457077122:panel.grid.major = element_line(
1635457077129:size = 0.5,
1635457077136:linetype = 'solid',
1635457077143:colour = "white"
1635457077152:),
1635457077159:panel.grid.minor = element_line(
1635457077165:size = 0.2,
1635457077172:linetype = 'solid',
1635457077179:colour = "white"
1635457077186:)
1635457077192:) +
1635457077198:scale_y_continuous(minor_breaks = seq(0, 10, 0.1)) +
1635457077205:theme(plot.title = element_text(hjust = 0.5, color = "dogderblue1"))
1635457122752:theme(plot.title = element_text(hjust = 0.5, colour = "dogderblue1"))
1635457137105:ggplot(data = datatoplot, aes(x, y)) +
1635457137112:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635457137120:scale_fill_brewer(palette = "Blues") +
1635457137127:scale_y_continuous(breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635457137135:theme_bw() +
1635457137145:theme(panel.border = element_blank()) +
1635457137154:labs(
1635457137161:title = "Average Number of Dentist Consultations per Person
1635457137167:per Year by Country",
1635457137173:caption = "Data Source: Reddit",
1635457137180:x = "Country",
1635457137186:y = "Average Number of Visits"
1635457137192:) +
1635457137198:theme(text = element_text(size = 10, family = "Comic Sans MS")) +
1635457137204:theme(
1635457137209:panel.background = element_rect(
1635457137216:fill = "Gray90",
1635457137222:colour = "Gray90",
1635457137228:size = 0.5,
1635457137234:linetype = "solid"
1635457137241:),
1635457137247:panel.grid.major = element_line(
1635457137253:size = 0.5,
1635457137259:linetype = 'solid',
1635457137264:colour = "white"
1635457137270:),
1635457137275:panel.grid.minor = element_line(
1635457137281:size = 0.2,
1635457137287:linetype = 'solid',
1635457137293:colour = "white"
1635457137299:)
1635457137304:) +
1635457137310:scale_y_continuous(minor_breaks = seq(0, 10, 0.1)) +
1635457137315:theme(plot.title = element_text(hjust = 0.5, colour = "dogderblue1"))
1635457200385:ggplot(data = datatoplot, aes(x, y)) +
1635457200392:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635457200399:scale_fill_brewer(palette = "Blues") +
1635457200406:scale_y_continuous(breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635457200412:theme_bw() +
1635457200419:theme(panel.border = element_blank()) +
1635457200427:labs(
1635457200434:title = "Average Number of Dentist Consultations per Person
1635457200441:per Year by Country",
1635457200448:caption = "Data Source: Reddit",
1635457200455:x = "Country",
1635457200461:y = "Average Number of Visits"
1635457200468:) +
1635457200474:theme(text = element_text(size = 10, family = "Comic Sans MS")) +
1635457200481:theme(
1635457200487:panel.background = element_rect(
1635457200494:fill = "Gray90",
1635457200501:colour = "Gray90",
1635457200510:size = 0.5,
1635457200516:linetype = "solid"
1635457200523:),
1635457200529:panel.grid.major = element_line(
1635457200536:size = 0.5,
1635457200543:linetype = 'solid',
1635457200550:colour = "white"
1635457200556:),
1635457200562:panel.grid.minor = element_line(
1635457200569:size = 0.2,
1635457200576:linetype = 'solid',
1635457200582:colour = "white"
1635457200589:)
1635457200596:) +
1635457200602:scale_y_continuous(minor_breaks = seq(0, 10, 0.1)) +
1635457200609:theme(plot.title = element_text(color = "blue", hjust = 0.5))
1635457252075:ggplot(data = datatoplot, aes(x, y)) +
1635457252083:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635457252090:scale_fill_brewer(palette = "Blues") +
1635457252097:scale_y_continuous(breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635457252103:theme_bw() +
1635457252110:theme(panel.border = element_blank()) +
1635457252116:labs(
1635457252122:title = "Average Number of Dentist Consultations per Person
1635457252128:per Year by Country",
1635457252134:caption = "Data Source: Reddit",
1635457252140:x = "Country",
1635457252147:y = "Average Number of Visits"
1635457252153:) +
1635457252159:theme(text = element_text(size = 10, family = "Comic Sans MS")) +
1635457252165:theme(
1635457252171:panel.background = element_rect(
1635457252177:fill = "Gray90",
1635457252183:colour = "Gray90",
1635457252190:size = 0.5,
1635457252196:linetype = "solid"
1635457252203:),
1635457252210:panel.grid.major = element_line(
1635457252216:size = 0.5,
1635457252222:linetype = 'solid',
1635457252228:colour = "white"
1635457252236:),
1635457252242:panel.grid.minor = element_line(
1635457252248:size = 0.2,
1635457252254:linetype = 'solid',
1635457252260:colour = "white"
1635457252267:)
1635457252273:) +
1635457252279:scale_y_continuous(minor_breaks = seq(0, 10, 0.1)) +
1635457252285:theme(plot.title = element_text(color = "steelblue3", hjust = 0.5))
1635457421884:ggplot(data = datatoplot, aes(x, y)) +
1635457421892:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635457421899:scale_fill_brewer(palette = "Blues") +
1635457421906:scale_y_continuous(breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635457421914:theme_bw() +
1635457421922:theme(panel.border = element_blank()) +
1635457421929:labs(
1635457421937:title = "Average Number of Dentist Consultations per Person
1635457421945:per Year by Country",
1635457421953:caption = "Data Source: Reddit",
1635457421961:x = "Country",
1635457421968:y = "Average Number of Visits"
1635457421976:) +
1635457421983:theme(text = element_text(size = 10, family = "Comic Sans MS")) +
1635457421991:theme(
1635457421998:panel.background = element_rect(
1635457422005:fill = "Gray90",
1635457422012:colour = "Gray90",
1635457422019:size = 0.5,
1635457422025:linetype = "solid"
1635457422032:),
1635457422039:panel.grid.major = element_line(
1635457422045:size = 0.5,
1635457422052:linetype = 'solid',
1635457422060:colour = "white"
1635457422067:),
1635457422073:panel.grid.minor = element_line(
1635457422080:size = 0.2,
1635457422086:linetype = 'solid',
1635457422093:colour = "white"
1635457422100:)
1635457422107:) +
1635457422113:scale_y_continuous(minor_breaks = seq(0, 10, 0.1)) +
1635457422120:theme(plot.title = element_text(color = "steelblue4", hjust = 0.5), plot.caption = element_text = (color = "steelblue4")) +
1635457422128:theme(axis.title.x = element_text(colour = "steelblue4"),
1635457422135:axis.title.y = element_text(colour = "steelblue4"))
1635457493758:ggplot(data = datatoplot, aes(x, y)) +
1635457493764:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635457493770:scale_fill_brewer(palette = "Blues") +
1635457493776:scale_y_continuous(breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635457493782:theme_bw() +
1635457493787:theme(panel.border = element_blank()) +
1635457493793:labs(
1635457493798:title = "Average Number of Dentist Consultations per Person
1635457493804:per Year by Country",
1635457493810:caption = "Data Source: Reddit",
1635457493816:x = "Country",
1635457493821:y = "Average Number of Visits"
1635457493827:) +
1635457493833:theme(text = element_text(size = 10, family = "Comic Sans MS")) +
1635457493839:theme(
1635457493845:panel.background = element_rect(
1635457493853:fill = "Gray90",
1635457493859:colour = "Gray90",
1635457493866:size = 0.5,
1635457493872:linetype = "solid"
1635457493878:),
1635457493884:panel.grid.major = element_line(
1635457493891:size = 0.5,
1635457493899:linetype = 'solid',
1635457493905:colour = "white"
1635457493911:),
1635457493917:panel.grid.minor = element_line(
1635457493923:size = 0.2,
1635457493930:linetype = 'solid',
1635457493937:colour = "white"
1635457493944:)
1635457493951:) +
1635457493959:scale_y_continuous(minor_breaks = seq(0, 10, 0.1)) +
1635457493965:theme(plot.title = element_text(color = "steelblue4", hjust = 0.5), plot.caption = element_text(color = "steelblue4")) +
1635457493972:theme(axis.title.x = element_text(colour = "steelblue4"),
1635457493980:axis.title.y = element_text(colour = "steelblue4"))
1635458292021:loadfonts(device = "pdf")
1635458307965:ggplot(data = datatoplot, aes(x, y)) +
1635458307973:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635458307980:scale_fill_brewer(palette = "Blues") +
1635458307987:scale_y_continuous(breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635458307994:theme_bw() +
1635458308001:theme(panel.border = element_blank()) +
1635458308008:labs(
1635458308015:title = "Average Number of Dentist Consultations per Person
1635458308021:per Year by Country",
1635458308028:caption = "Data Source: Reddit",
1635458308034:x = "Country",
1635458308040:y = "Average Number of Visits"
1635458308047:) +
1635458308054:theme(text = element_text(size = 10, family = "Comic Sans MS")) +
1635458308061:theme(
1635458308068:panel.background = element_rect(
1635458308075:fill = "Gray90",
1635458308082:colour = "Gray90",
1635458308088:size = 0.5,
1635458308094:linetype = "solid"
1635458308100:),
1635458308106:panel.grid.major = element_line(
1635458308112:size = 0.5,
1635458308119:linetype = 'solid',
1635458308125:colour = "white"
1635458308131:),
1635458308139:panel.grid.minor = element_line(
1635458308146:size = 0.2,
1635458308152:linetype = 'solid',
1635458308159:colour = "white"
1635458308167:)
1635458308174:) +
1635458308181:scale_y_continuous(minor_breaks = seq(0, 10, 0.1)) +
1635458308187:theme(plot.title = element_text(color = "steelblue4", hjust = 0.5), plot.caption = element_text(color = "steelblue4")) +
1635458308195:theme(axis.title.x = element_text(colour = "steelblue4"),
1635458308201:axis.title.y = element_text(colour = "steelblue4"))
1635458576603:myFont <- "DejaVu Sans Mono"
1635458588971:myFont <- "Comic Sans Ms"
1635458690769:ggplot(data = datatoplot, aes(x, y)) +
1635458690776:geom_bar(stat = "identity", aes(fill = x), show.legend = FALSE) +
1635458690782:scale_fill_brewer(palette = "Blues") +
1635458690789:scale_y_continuous(breaks = c(0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0)) +
1635458690796:scale_y_continuous(minor_breaks = seq(0, 10, 0.1)) +
1635458690802:labs(
1635458690809:title = "Average Number of Dentist Consultations per Person
1635458690815:per Year by Country",
1635458690822:caption = "Data Source: Reddit",
1635458690828:x = "Country",
1635458690834:y = "Average Number of Visits"
1635458690840:) +
1635458690847:theme_bw(base_family = myFont) +
1635458690854:theme(panel.border = element_blank()) +
1635458690860:theme(text = element_text(size = 10)) +
1635458690868:theme(
1635458690874:panel.background = element_rect(
1635458690880:fill = "Gray90",
1635458690887:colour = "Gray90",
1635458690894:size = 0.5,
1635458690901:linetype = "solid"
1635458690908:),
1635458690914:panel.grid.major = element_line(
1635458690921:size = 0.5,
1635458690927:linetype = 'solid',
1635458690934:colour = "white"
1635458690942:),
1635458690949:panel.grid.minor = element_line(
1635458690957:size = 0.2,
1635458690963:linetype = 'solid',
1635458690970:colour = "white"
1635458690977:)
1635458690984:) +
1635458690992:theme(
1635458690999:plot.title = element_text(color = "steelblue4", hjust = 0.5),
1635458691007:plot.caption = element_text(color = "steelblue4")
1635458691014:) +
1635458691020:theme(
1635458691027:axis.title.x = element_text(colour = "steelblue4"),
1635458691034:axis.title.y = element_text(colour = "steelblue4")
1635458691040:)
1635458715772:loadfonts(device = "all")
1635459319460:install.packages("extrafont",repos = "http://cran.us.r-project.org")
1635459329805:install.packages("extrafont", repos = "http://cran.us.r-project.org")
1635459535131:library(extrafont)
1635465676232:knitr::include_graphics("~/COGS 137/hw02-fa21-isa5805/hwimage.png", error = FALSE)
1635465676267:knitr::include_graphics("~/COGS 137/hw02-fa21-isa5805/hwimage2.png", error = FALSE)
1635465782580:knitr::include_graphics("~/COGS 137/hw02-fa21-isa5805/hwimage.png", error = FALSE)
1635465809037:knitr::include_graphics("~/COGS 137/hw02-fa21-isa5805/hwimage2.png", error = FALSE)
1635465851838:knitr::include_graphics("~/COGS 137/hw02-fa21-isa5805/hwimage.png", error = FALSE)
1635466315014:knitr::include_graphics("~/hw02-fa21-isa5805/hwimage.png", error = FALSE)
1635466338164:knitr::include_graphics("~/hw02-fa21-isa5805/hwimage.png", error = FALSE)
1635466407345:knitr::include_graphics("~/COGS 137/hw02-fa21-isa5805/hwimage.png", error = FALSE)
1635466424894:knitr::include_graphics("/COGS 137/hw02-fa21-isa5805/hwimage.png", error = FALSE)
1635466885770:setwd("~/COGS 137/hw02-fa21-isa5805")
1635467062608:### Question 7
1635467062619:https://www.reddit.com/r/dataisugly/
1635467062632:![image](../hw02-fa21-isa5805/hwimage2.png)
1635467115775:![image2](../hw02-fa21-isa5805/hwimage2.png)
1635546394804:data1 <- read_csv('wrangled_major_groups_data.csv')
1635546408549:library(tidyverse)
1635546415464:data1 <- read_csv('wrangled_major_groups_data.csv')
1635546457456:data1 <- read_csv('data/wrangled_major_groups_data.csv')
1635546457867:data2 <- read_csv('data/wrangled_latinx_subgroups_data.csv')
1635546457937:data3 <- read_csv('data/wrangled_asian_subgroups_data.csv')
1635546508738:View(data1)
1635546513749:View(data2)
1635546519094:View(data3)
1635546918529:temp <- data1 |>
1635546928657:distinctt(Year)
1635546937168:temp <- data1 |>
1635546945368:distinct(Year)
1635546949007:View(temp)
1635546970235:temp <- data1 |>
1635547026661:distinct(Group)
1635547492946:ggplot(data = data1, aes(x=factor(Year), y = Percent)) +
1635547492953:geom_bar(stat = "identity") +
1635547492960:facet_wrap(~Group)
1635547695461:ggplot(data = data1, aes(x=factor(Year), y = Percent, color = Group)) +
1635547695469:geom_bar(stat = "identity") +
1635547695477:facet_wrap(~Group)
1635547732674:ggplot(data = data1, aes(x=factor(Year), y = Percent, color = Group)) +
1635547732682:geom_bar(stat = "identity", show.legend = FALSE) +
1635547732689:facet_wrap(~Group)
1635547836913:ggplot(data = data1, aes(x=factor(Year), y = Percent, color = Group)) +
1635547836921:geom_bar(stat = "identity", show.legend = FALSE) +
1635547836931:facet_wrap(~Group) +
1635547836941:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1635547976846:ggplot(data = data1, aes(x=factor(Year), y = Percent, color = Group)) +
1635547976855:geom_bar(stat = "identity", show.legend = FALSE) +
1635547976863:facet_wrap(~Group) +
1635547976871:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635547976879:labs(x = "Year")
1635548396748:ggplot(data = data2, aes(x = factor(group), y = Percent, fill = Year)) +
1635548396755:geom_bar(stat = "identity")
1635548422404:ggplot(data = data2, aes(x = factor(Race_Ethnicity), y = Percent, fill = Year)) +
1635548422412:geom_bar(stat = "identity")
1635548482170:ggplot(data = data2, aes(x = factor(Race_Ethnicity), y = Percent, fill = Year)) +
1635548482177:geom_bar(position="dodge", stat = "identity")
1635548507658:ggplot(data = data2, aes(x = factor(Race_Ethnicity), y = Percent, fill = Year)) +
1635548507665:geom_bar(position="dodge", stat = "identity") +
1635548507671:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1635548559858:ggplot(data = data2, aes(x = factor(Race_Ethnicity), y = Percent, fill = factor(Year))) +
1635548559868:geom_bar(position="dodge", stat = "identity") +
1635548559876:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1635548727643:ggplot(data = data2, aes(x = factor(Race_Ethnicity), y = Percent, fill = factor(Year))) +
1635548727651:geom_bar(position="dodge", stat = "identity") +
1635548727658:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635548727665:labs(x = "Year") +
1635548727672:scale_fill_brewer(palette="set1")
1635548748213:ggplot(data = data2, aes(x = factor(Race_Ethnicity), y = Percent, fill = factor(Year))) +
1635548748222:geom_bar(position="dodge", stat = "identity") +
1635548748229:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635548748235:labs(x = "Year") +
1635548748243:scale_fill_brewer(palette="Set1")
1635548851853:p <- ggplot(data = data2, aes(x = factor(Race_Ethnicity), y = Percent, fill = factor(Year))) +
1635548851864:geom_bar(position="dodge", stat = "identity") +
1635548851874:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635548851884:labs(x = "Year") +
1635548851894:scale_fill_brewer(palette="Set1")
1635548852026:m <- ggplot(data = data3, aes(x = factor(Race_Ethnicity), y = Percent, fill = factor(Year))) +
1635548852037:geom_bar(position="dodge", stat = "identity") +
1635548852046:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635548852054:labs(x = "Year") +
1635548852063:scale_fill_brewer(palette="Set1")
1635548852119:figure <- ggarrange(p,m, nrow = 2)
1635548882255:library(ggpubr)
1635548891586:install.packages(ggpubr)
1635548899401:install.packages('ggpubr')
1635549431582:install.packages('ggpubr')
1635549450022:p <- ggplot(da
1635549546756:library(ggpubr)
1635549563671:library(ggpubr)
1635549592356:p <- ggplot(data = data2, aes(x = factor(Race_Ethnicity), y = Percent, fill = factor(Year))) +
1635549592364:geom_bar(position="dodge", stat = "identity") +
1635549592372:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635549592379:labs(x = "Year") +
1635549592385:scale_fill_brewer(palette="Set1")
1635549592412:m <- ggplot(data = data3, aes(x = factor(Race_Ethnicity), y = Percent, fill = factor(Year))) +
1635549592419:geom_bar(position="dodge", stat = "identity") +
1635549592425:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635549592433:labs(x = "Year") +
1635549592439:scale_fill_brewer(palette="Set1")
1635549592463:figure <- ggarrange(p,m, nrow = 2)
1635549592764:figure
1635549684584:ggplot(data = data3, aes(x = factor(Race_Ethnicity), y = Percent, fill = factor(Year))) +
1635549684593:geom_bar(position="dodge", stat = "identity") +
1635549684601:theme(axis.text.x = element_text(angle = 90)) +
1635549684609:labs(x = "Asian Groups") +
1635549684616:scale_fill_brewer(palette="Set1")
1635549715075:p <- ggplot(data = data2, aes(x = factor(Race_Ethnicity), y = Percent, fill = factor(Year))) +
1635549715084:geom_bar(position="dodge", stat = "identity") +
1635549715093:theme(axis.text.x = element_text(angle = 90)) +
1635549715103:labs(x = "Latin Groups") +
1635549715111:scale_fill_brewer(palette="Set1")
1635549715129:m <- ggplot(data = data3, aes(x = factor(Race_Ethnicity), y = Percent, fill = factor(Year))) +
1635549715135:geom_bar(position="dodge", stat = "identity") +
1635549715141:theme(axis.text.x = element_text(angle = 90)) +
1635549715147:labs(x = "Asian Groups") +
1635549715154:scale_fill_brewer(palette="Set1")
1635549715173:figure <- ggarrange(p,m, nrow = 2)
1635549715419:figure
1635552342621:data1 |>
1635552342630:filter(Gender == "All") |>
1635552342639:ggplot(aes(x=factor(Year), y = Percent, color = Group)) +
1635552342649:geom_bar(stat = "identity", show.legend = FALSE) +
1635552342661:facet_wrap(~Group) +
1635552342671:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635552342682:labs(x = "Year")
1635552491940:data1 |>
1635552491949:filter(Gender == "All" & Group != "United States") |>
1635552491956:ggplot(aes(x=factor(Year), y = Percent, color = Group)) +
1635552491963:geom_line(size = 0.5, show.legend = FALSE) +
1635552491970:geom_point(size = 3) +
1635552491978:facet_wrap(~Group) +
1635552491985:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635552491992:labs(x = "Year")
1635552572230:data1 |>
1635552572238:filter(Gender == "All" & Group != "United States") |>
1635552572245:ggplot(aes(x=factor(Year), y = Percent, color = Group)) +
1635552572252:geom_line(size = 0.5) +
1635552572259:geom_point(size = 1) +
1635552572265:facet_wrap(~Group, ncol = 1) +
1635552572271:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635552572278:labs(x = "Year")
1635552639249:data1 |>
1635552639256:filter(Gender == "All" & Group != "United States") |>
1635552639262:ggplot(aes(x=factor(Year), y = Percent, color = Group)) +
1635552639268:geom_line(size = 0.5) +
1635552639274:geom_point(size = 1) +
1635552639280:facet_wrap(~Group) +
1635552639286:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635552639293:labs(x = "Year")
1635554543205:data1 |>
1635554543213:filter(Gender == "All" & Group != "United States") |>
1635554543221:ggplot(aes(x=factor(Year), y = Percent) +
1635554543229:geom_line(size = 0.5) +
1635554543236:geom_point(size = 1) +
1635554543243:facet_wrap(~Group) +
1635554543251:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635554543258:labs(x = "Year")
1635554563574:y]\
1635554573201:data1 |>
1635554573209:filter(Gender == "All" & Group != "United States") |>
1635554573216:ggplot(aes(x=factor(Year), y = Percent)) +
1635554573222:geom_line(size = 0.5) +
1635554573228:geom_point(size = 1) +
1635554573235:facet_wrap(~Group) +
1635554573242:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635554573249:labs(x = "Year")
1635555132052:data1 |>
1635555132060:filter(Group != "United States" | Group != "Male" | Group != "Female" ) |>
1635555132068:filter(Gender != "All")
1635555132135:ggplot(aes(x=factor(Year), y = Percent, color = "Gender")) +
1635555132142:geom_line(size = 0.5) +
1635555132150:geom_point(size = 1) +
1635555132157:facet_wrap(~Race_Ethnicity) +
1635555132165:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635555132171:labs(x = "Year")
1635555153140:data1 |>
1635555153147:filter(Group != "United States" | Group != "Male" | Group != "Female" ) |>
1635555153154:filter(Gender != "All") |>
1635555153161:ggplot(aes(x=factor(Year), y = Percent, color = "Gender")) +
1635555153169:geom_line(size = 0.5) +
1635555153176:geom_point(size = 1) +
1635555153183:facet_wrap(~Race_Ethnicity) +
1635555153189:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635555153196:labs(x = "Year")
1635555451485:data1fix <- data1|>
1635555451492:mutate(case_when(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina" ~ "Latinx"))
1635555458753:View(data1fix)
1635555513738:data1fix <- data1|>
1635555513745:mutate(Race_Ethnicity(case_when(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina" ~ "Latinx")))
1635555524447:mutate(Race_Ethnicity = (case_when(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina" ~ "Latinx")))
1635555595920:data1fix <- data1|>
1635555595927:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina" ~ "Latinx"))
1635555729246:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina" ~ "Latinx", TRUE ~ Race_Ethnicity))
1635555744296:data1fix <- data1|>
1635555744304:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina" ~ "Latinx", TRUE ~ Race_Ethnicity))
1635555768360:data1fix |>
1635555768367:filter(Group != "United States" | Group != "Male" | Group != "Female" ) |>
1635555768374:filter(Gender != "All" & Race_Ethnicity != "All_races") |>
1635555768381:ggplot(aes(x=factor(Year), y = Percent, color = "Gender")) +
1635555768388:geom_line(size = 0.5) +
1635555768394:geom_point(size = 1) +
1635555768400:facet_wrap(~Race_Ethnicity) +
1635555768407:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635555768413:labs(x = "Year")
1635555800232:data1fix <- data1|>
1635555800240:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina" ~ "Latinx", TRUE ~ Race_Ethnicity))
1635555800257:data1fix |>
1635555800264:filter(Group != "United States" | Group != "Male" | Group != "Female" ) |>
1635555800272:filter(Gender != "All" & Race_Ethnicity != "All_races") |>
1635555800280:ggplot(aes(x=factor(Year), y = Percent, color = Gender)) +
1635555800287:geom_line(size = 0.5) +
1635555800294:geom_point(size = 1) +
1635555800302:facet_wrap(~Race_Ethnicity) +
1635555800309:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1635555800317:labs(x = "Year")
1635755399557:library(OCSdata)
1635755479954:devtools::install_github("opencasestudies/OCSdata")
1635755515015:install.packages("pdftools")
1635755573899:install.packages("magick")
1635755578846:install.packages("magick")
1635755734979:library(OCSdata)
1635755735018:library(tidyverse)
1635755736845:library(pdftools)
1635755736917:library(tesseract)
1635755737149:library(magick)
1635755820295:load_raw_data("ocs-bp-youth-disconnection", outpath = ".")
1635759990749:library(OCSdata)
1635759990760:library(tidyverse)
1635759990770:library(pdftools)
1635759990781:library(tesseract)
1635759990791:library(magick)
1635759990824:major_racial_ethnic_groups <-
1635759990834:magick::image_read("data/raw/Major_ethnic_groups_screenshot.png")
1635759990895:magick::image_info(major_racial_ethnic_groups)
1635759990928:major_groups <- magick::image_ocr(major_racial_ethnic_groups)
1635759993535:# asian sub groups 2017 & 2018
1635759993546:asian_sub_2017 <- image_read("data/raw/asian_subgroups_2017.png")
1635759993587:asian_sub_2017_A <- image_read("data/raw/asian_sub_2017_A.png")
1635759993642:asian_sub_2017_B <- image_read("data/raw/asian_sub_2017_B.png")
1635759993669:asian_sub_2017_C <- image_read("data/raw/asian_sub_2017_C.png")
1635759993689:asian_sub_2017 <- image_ocr(asian_sub_2017)
1635759994867:asian_sub_2017_A <- image_ocr(asian_sub_2017_A)
1635759995644:asian_sub_2017_B <- image_ocr(asian_sub_2017_B)
1635759995818:asian_sub_2017_C <- image_ocr(asian_sub_2017_C)
1635759995965:asian_sub_2018_A <- image_read("data/raw/asian_sub_2018_A.png")
1635759996012:asian_sub_2018_A <- image_ocr(asian_sub_2018_A)
1635759996356:asian_sub_2018_B <- image_read("data/raw/asian_sub_2018_B.png")
1635759996389:asian_sub_2018_B <- image_ocr(asian_sub_2018_B)
1635759996833:# latinx sub groups 2017 & 2018
1635759996852:latinx_imageA <- image_read("data/raw/latinx_sub_2017_A.png")
1635759996872:latinx_imageB <- image_read("data/raw/latinx_sub_2017_B.png")
1635759996925:latinx_imageC <- image_read("data/raw/latinx_sub_2017_C.png")
1635759996949:latinx_sub_2017_A <- image_ocr(latinx_imageA)
1635759997124:latinx_sub_2017_B <- image_ocr(latinx_imageB)
1635759997922:latinx_sub_2017_C <- image_ocr(latinx_imageC)
1635759998235:latinx_sub_2018 <- image_read("data/raw/latinx_subgroups_2018.png")
1635759998259:latinx_sub_2018 <- image_ocr(latinx_sub_2018)
1635759998644:latinx_sub_2018
1635759998672:# save the data
1635759998682:save(
1635759998692:major_groups,
1635759998703:asian_sub_2017,
1635759998715:asian_sub_2017_A,
1635759998726:asian_sub_2017_B,
1635759998736:asian_sub_2017_C,
1635759998747:latinx_sub_2017_A,
1635759998758:latinx_sub_2017_B,
1635759998769:latinx_sub_2017_C,
1635759998779:asian_sub_2018_A,
1635759998789:asian_sub_2018_B,
1635759998800:latinx_sub_2018,
1635759998810:file = "data/raw/imported_data.rda"
1635759998820:)
1635759998851:make_rows <- function(text){
1635759998860:text |>
1635759998869:str_split("\n") |>
1635759998879:unlist() |>
1635759998889:as_tibble()
1635759998899:}
1635759998918:clean_table <- function(table){
1635759998927:table|>
1635759998937:separate(col = value,
1635759998947:into = c("Group", "Years"),
1635759998956:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])")|>
1635759999030:mutate(Group = str_to_title(Group))|>
1635759999039:separate(col = Years,
1635759999048:into = c("2008", "2010", "2012", "2014", "2016", "2017"),
1635759999058:sep = " ")|>
1635759999068:drop_na()|>
1635759999077:mutate(
1635759999087:across(.cols = -Group, ~ str_remove(string = ., pattern = "\\.")),  # remove decimal points
1635759999096:across(.cols = -Group, as.numeric),  # convert to numeric
1635759999105:across(.cols = -Group, ~ . * 0.1),   # get our decimal point back
1635759999114:Race_Ethnicity = recode(Group, "United States" = "All_races",
1635759999123:"Female" = "All_races",
1635759999132:"Male" = "All_races"),
1635759999142:Race_Ethnicity = str_remove(string = Race_Ethnicity,
1635759999152:pattern = "Female|Male"))
1635759999169:}
1635759999195:clean_table_2018 <- function(table){
1635759999205:table |>
1635759999215:separate(col = value,
1635759999225:into = c("Group", "Percent"),
1635759999234:sep =  "(?<=[[:alpha:]])\\s:\\s|\\s(?=[0-9])") |>
1635759999245:mutate(Group = str_remove(string = Group,
1635759999257:pattern = ":")) |>
1635759999266:drop_na() |>
1635759999276:mutate(Group = str_to_title(string = Group)) |>
1635759999285:mutate(Percent = str_remove(string = Percent,
1635759999294:pattern = "\\.")) |>
1635759999302:mutate(Percent = as.numeric(Percent)) |>
1635759999311:mutate(Percent = Percent * 0.1) |>
1635759999320:mutate(Race_Ethnicity = str_replace(string = Group,
1635759999329:pattern = "Men|Women",
1635759999339:replacement = "missing")) |>
1635759999348:mutate(Race_Ethnicity = na_if(Race_Ethnicity, "missing")) |>
1635759999358:fill(Race_Ethnicity, .direction = "down") |>
1635759999368:mutate(Gender = str_extract(string = Group,
1635759999377:pattern = "Men|Women")) |>
1635759999387:mutate(Gender = replace_na(Gender, replace = "All"))
1635759999397:}
1635759999427:major_groups
1635759999441:#major_groups <- make_rows(major_groups)
1635759999457:#### make_rows works,clean_table is causeing problems. need to take a look
1635759999466:major_groups <- clean_table(major_groups)
1635760226406:#### make_rows works,clean_table is causeing problems. need to take a look
1635760226414:major_groups <- major_groups |>
1635760226423:str_split(pattern = "\n")|>
1635760226431:unlist() |>
1635760226441:tibble:: as_tibble()
1635760229455:major_groups <- clean_table(major_groups)
1635760267304:major_groups <- make_rows(major_groups)
1635760284250:View(major_groups)
1635760513913:major_racial_ethnic_groups <-
1635760513924:magick::image_read("data/raw/Major_ethnic_groups_screenshot.png")
1635760514006:magick::image_info(major_racial_ethnic_groups)
1635760514149:major_groups <- magick::image_ocr(major_racial_ethnic_groups)
1635760516267:# asian sub groups 2017 & 2018
1635760516277:asian_sub_2017 <- image_read("data/raw/asian_subgroups_2017.png")
1635760516311:asian_sub_2017_A <- image_read("data/raw/asian_sub_2017_A.png")
1635760516374:asian_sub_2017_B <- image_read("data/raw/asian_sub_2017_B.png")
1635760516393:asian_sub_2017_C <- image_read("data/raw/asian_sub_2017_C.png")
1635760516413:asian_sub_2017 <- image_ocr(asian_sub_2017)
1635760517651:asian_sub_2017_A <- image_ocr(asian_sub_2017_A)
1635760518545:asian_sub_2017_B <- image_ocr(asian_sub_2017_B)
1635760518736:asian_sub_2017_C <- image_ocr(asian_sub_2017_C)
1635760518960:asian_sub_2018_A <- image_read("data/raw/asian_sub_2018_A.png")
1635760518998:asian_sub_2018_A <- image_ocr(asian_sub_2018_A)
1635760519418:asian_sub_2018_B <- image_read("data/raw/asian_sub_2018_B.png")
1635760519444:asian_sub_2018_B <- image_ocr(asian_sub_2018_B)
1635760519845:# latinx sub groups 2017 & 2018
1635760519861:latinx_imageA <- image_read("data/raw/latinx_sub_2017_A.png")
1635760519879:latinx_imageB <- image_read("data/raw/latinx_sub_2017_B.png")
1635760519927:latinx_imageC <- image_read("data/raw/latinx_sub_2017_C.png")
1635760519948:latinx_sub_2017_A <- image_ocr(latinx_imageA)
1635760520045:latinx_sub_2017_B <- image_ocr(latinx_imageB)
1635760520758:latinx_sub_2017_C <- image_ocr(latinx_imageC)
1635760521045:latinx_sub_2018 <- image_read("data/raw/latinx_subgroups_2018.png")
1635760521067:latinx_sub_2018 <- image_ocr(latinx_sub_2018)
1635760521448:latinx_sub_2018
1635760521471:# save the data
1635760521479:save(
1635760521486:major_groups,
1635760521494:asian_sub_2017,
1635760521502:asian_sub_2017_A,
1635760521510:asian_sub_2017_B,
1635760521518:asian_sub_2017_C,
1635760521526:latinx_sub_2017_A,
1635760521534:latinx_sub_2017_B,
1635760521542:latinx_sub_2017_C,
1635760521550:asian_sub_2018_A,
1635760521561:asian_sub_2018_B,
1635760521570:latinx_sub_2018,
1635760521579:file = "data/raw/imported_data.rda"
1635760521588:)
1635760536742:#### make_rows works,clean_table is causeing problems. need to take a look
1635760536752:major_groups <- major_groups |>
1635760536761:str_split(pattern = "\n")|>
1635760536769:unlist() |>
1635760536778:tibble:: as_tibble()
1635760538221:major_groups <- clean_table(major_groups)
1635760539527:major_groups_long <- major_groups|>
1635760539535:pivot_longer(cols = contains("20"),
1635760539543:names_to = "Year",
1635760539552:values_to = "Percent",
1635760539559:names_prefix = "Perc_") |>
1635760539567:mutate(Year = as.numeric(Year))
1635760554346:View(major_groups_long)
1635760942771:asian_sub_2018 <- asian_sub_2018 |>
1635760942780:mutate(across(.cols = c(Gender, Group),
1635760942788:~ str_replace(string =.,
1635760942797:pattern = "Men",
1635760942806:replacement = "Male")),
1635760942815:across(.cols = c(Gender, Group),
1635760942823:~ str_replace(string =.,
1635760942835:pattern = "Women",
1635760942843:replacement = "Female")))
1635760955256:asian_sub_2018 <- asian_sub_2018 |>
1635760955264:mutate(Year = 2018)
1635760961846:# major_groups
1635760961856:major_groups <- major_groups |>
1635760961867:str_split(pattern = "\n") |>
1635760961876:unlist() |>
1635760961894:tibble::as_tibble()
1635760961917:major_groups <- clean_table(major_groups)
1635760961964:major_groups_long <- major_groups |>
1635760961974:pivot_longer(
1635760961983:cols = contains("20"),
1635760961992:names_to = "Year",
1635760962001:values_to = "Percent",
1635760962010:names_prefix = "Perc_"
1635760962019:) |>
1635760962028:mutate(Year = as.numeric(Year))
1635760962057:# Asian sub groups -- 2017
1635760962066:asian_sub_2017 <- make_rows(asian_sub_2017)
1635760962083:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1635760962095:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1635760962107:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1635760962119:# bind
1635760962128:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1635760962139:asian_sub_2017_B,
1635760962147:asian_sub_2017_C)
1635760962160:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1635760962231:# Latino sub groups -- 2017
1635760962242:#combine
1635760962253:latinx_sub_2017 <- stringr::str_c(latinx_sub_2017_A,
1635760962263:latinx_sub_2017_B,
1635760962273:latinx_sub_2017_C)
1635760962285:# replace typo
1635760962296:latinx_sub_2017 <- latinx_sub_2017 |>
1635760962306:str_replace(pattern = "DR, Cuban Female 15.7\nPR",
1635760962316:replacement = "DR, Cuban Male 15.7\nPR")
1635760962327:# clean
1635760962337:latinx_sub_2017 <- make_rows(latinx_sub_2017)
1635760962359:latinx_sub_2017 <- clean_table(table = latinx_sub_2017)
1635760962418:# Asian sub groups 2018
1635760962428:asian_sub_2018 <- str_c(asian_sub_2018_A, asian_sub_2018_B)
1635760962441:asian_sub_2018 <- make_rows(asian_sub_2018)
1635760962457:asian_sub_2018 <- clean_table_2018(asian_sub_2018)
1635760962540:# combine subgroups
1635760962552:asian_sub_2018 <- asian_sub_2018 |>
1635760962565:add_row(Group = "Asian", Percent = 6.2,
1635760962576:Race_Ethnicity = "Asian", Gender = "All") |>
1635760962585:add_row(Group = "Asian", Percent = 6.4,
1635760962594:Race_Ethnicity = "Asian", Gender = "Men") |>
1635760962604:add_row(Group = "Asian", Percent = 6.1,
1635760962614:Race_Ethnicity = "Asian", Gender = "Women")
1635760962645:#correcting gender naming convention
1635760962654:asian_sub_2018 <- asian_sub_2018 |>
1635760962663:mutate(across(.cols = c(Gender, Group),
1635760962672:~ str_replace(string = .,
1635760962680:pattern = "Men",
1635760962689:replacement = "Male")),
1635760962697:across(.cols = c(Gender, Group),
1635760962706:~ str_replace(string = .,
1635760962715:pattern = "Women",
1635760962723:replacement = "Female")))
1635760962757:#defining year for asian 2017 & 2018
1635760962766:asian_sub_2017 <- asian_sub_2017 |>
1635760962776:mutate(Year = 2017)
1635760962804:asian_sub_2018 <- asian_sub_2018 |>
1635760962812:mutate(Year = 2018)
1635760962838:asian_sub_2018 <- asian_sub_2018 |>
1635760962847:mutate(across(.cols = c(Gender, Group),
1635760962856:~ str_replace(string =.,
1635760962869:pattern = "Men",
1635760962883:replacement = "Male")),
1635760962891:across(.cols = c(Gender, Group),
1635760962899:~ str_replace(string =.,
1635760962907:pattern = "Women",
1635760962915:replacement = "Female")))
1635761020767:asian_subgroups <- bind_rows(asian_sub_2017, asian_sub_2018)
1635761025808:asian_subgroups <- bind_rows(asian_sub_2017, asian_sub_2018)
1635761199120:asian_subgroups <- asian_subgroups |>
1635761199129:select(~Group) |>
1635761199139:pivot_wider(names_from = Year,
1635761199147:values_from = Percent) |>
1635761199157:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1635761199166:names_to = "Year",
1635761199175:values_to = "Percent")
1635761252251:asian_subgroups <- asian_subgroups |>
1635761252261:select(where(~Group)) |>
1635761252270:pivot_wider(names_from = Year,
1635761252279:values_from = Percent) |>
1635761252288:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1635761252296:names_to = "Year",
1635761252304:values_to = "Percent")
1635761280903:View(asian_subgroups)
1635761400643:major_racial_ethnic_groups <-
1635761400653:magick::image_read("data/raw/Major_ethnic_groups_screenshot.png")
1635761400736:magick::image_info(major_racial_ethnic_groups)
1635761400759:major_groups <- magick::image_ocr(major_racial_ethnic_groups)
1635761402668:# asian sub groups 2017 & 2018
1635761402677:asian_sub_2017 <- image_read("data/raw/asian_subgroups_2017.png")
1635761402720:asian_sub_2017_A <- image_read("data/raw/asian_sub_2017_A.png")
1635761402775:asian_sub_2017_B <- image_read("data/raw/asian_sub_2017_B.png")
1635761402788:asian_sub_2017_C <- image_read("data/raw/asian_sub_2017_C.png")
1635761402804:asian_sub_2017 <- image_ocr(asian_sub_2017)
1635761403864:asian_sub_2017_A <- image_ocr(asian_sub_2017_A)
1635761404660:asian_sub_2017_B <- image_ocr(asian_sub_2017_B)
1635761404838:asian_sub_2017_C <- image_ocr(asian_sub_2017_C)
1635761405042:asian_sub_2018_A <- image_read("data/raw/asian_sub_2018_A.png")
1635761405076:asian_sub_2018_A <- image_ocr(asian_sub_2018_A)
1635761405450:asian_sub_2018_B <- image_read("data/raw/asian_sub_2018_B.png")
1635761405480:asian_sub_2018_B <- image_ocr(asian_sub_2018_B)
1635761405928:# latinx sub groups 2017 & 2018
1635761405945:latinx_imageA <- image_read("data/raw/latinx_sub_2017_A.png")
1635761405964:latinx_imageB <- image_read("data/raw/latinx_sub_2017_B.png")
1635761406007:latinx_imageC <- image_read("data/raw/latinx_sub_2017_C.png")
1635761406028:latinx_sub_2017_A <- image_ocr(latinx_imageA)
1635761406148:latinx_sub_2017_B <- image_ocr(latinx_imageB)
1635761406928:latinx_sub_2017_C <- image_ocr(latinx_imageC)
1635761407177:latinx_sub_2018 <- image_read("data/raw/latinx_subgroups_2018.png")
1635761407216:latinx_sub_2018 <- image_ocr(latinx_sub_2018)
1635761407626:latinx_sub_2018
1635761407660:# save the data
1635761407669:save(
1635761407678:major_groups,
1635761407687:asian_sub_2017,
1635761407696:asian_sub_2017_A,
1635761407705:asian_sub_2017_B,
1635761407713:asian_sub_2017_C,
1635761407721:latinx_sub_2017_A,
1635761407729:latinx_sub_2017_B,
1635761407738:latinx_sub_2017_C,
1635761407746:asian_sub_2018_A,
1635761407754:asian_sub_2018_B,
1635761407762:latinx_sub_2018,
1635761407771:file = "data/raw/imported_data.rda"
1635761407779:)
1635761412513:make_rows <- function(text){
1635761412523:text |>
1635761412533:str_split("\n") |>
1635761412543:unlist() |>
1635761412564:as_tibble()
1635761412575:}
1635761412597:clean_table <- function(table){
1635761412607:table|>
1635761412616:separate(col = value,
1635761412626:into = c("Group", "Years"),
1635761412636:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])")|>
1635761412646:mutate(Group = str_to_title(Group))|>
1635761412655:separate(col = Years,
1635761412665:into = c("2008", "2010", "2012", "2014", "2016", "2017"),
1635761412675:sep = " ")|>
1635761412684:drop_na()|>
1635761412693:mutate(
1635761412704:across(.cols = -Group, ~ str_remove(string = ., pattern = "\\.")),  # remove decimal points
1635761412713:across(.cols = -Group, as.numeric),  # convert to numeric
1635761412723:across(.cols = -Group, ~ . * 0.1),   # get our decimal point back
1635761412732:Race_Ethnicity = recode(Group, "United States" = "All_races",
1635761412741:"Female" = "All_races",
1635761412750:"Male" = "All_races"),
1635761412760:Race_Ethnicity = str_remove(string = Race_Ethnicity,
1635761412770:pattern = "Female|Male"))
1635761412788:}
1635761412815:clean_table_2018 <- function(table){
1635761412824:table |>
1635761412833:separate(col = value,
1635761412842:into = c("Group", "Percent"),
1635761412851:sep =  "(?<=[[:alpha:]])\\s:\\s|\\s(?=[0-9])") |>
1635761412860:mutate(Group = str_remove(string = Group,
1635761412870:pattern = ":")) |>
1635761412880:drop_na() |>
1635761412890:mutate(Group = str_to_title(string = Group)) |>
1635761412900:mutate(Percent = str_remove(string = Percent,
1635761412909:pattern = "\\.")) |>
1635761412918:mutate(Percent = as.numeric(Percent)) |>
1635761412929:mutate(Percent = Percent * 0.1) |>
1635761412938:mutate(Race_Ethnicity = str_replace(string = Group,
1635761412947:pattern = "Men|Women",
1635761412958:replacement = "missing")) |>
1635761412968:mutate(Race_Ethnicity = na_if(Race_Ethnicity, "missing")) |>
1635761412978:fill(Race_Ethnicity, .direction = "down") |>
1635761412987:mutate(Gender = str_extract(string = Group,
1635761412996:pattern = "Men|Women")) |>
1635761413006:mutate(Gender = replace_na(Gender, replace = "All"))
1635761413015:}
1635761417343:# major_groups
1635761417355:major_groups <- major_groups |>
1635761417365:str_split(pattern = "\n") |>
1635761417375:unlist() |>
1635761417395:tibble::as_tibble()
1635761417414:major_groups <- clean_table(major_groups)
1635761417482:major_groups_long <- major_groups |>
1635761417493:pivot_longer(
1635761417503:cols = contains("20"),
1635761417513:names_to = "Year",
1635761417522:values_to = "Percent",
1635761417531:names_prefix = "Perc_"
1635761417541:) |>
1635761417549:mutate(Year = as.numeric(Year))
1635761417587:# Asian sub groups -- 2017
1635761417597:asian_sub_2017 <- make_rows(asian_sub_2017)
1635761417611:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1635761417631:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1635761417645:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1635761417660:# bind
1635761417669:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1635761417680:asian_sub_2017_B,
1635761417691:asian_sub_2017_C)
1635761417707:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1635761417794:# Latino sub groups -- 2017
1635761417804:#combine
1635761417815:latinx_sub_2017 <- stringr::str_c(latinx_sub_2017_A,
1635761417826:latinx_sub_2017_B,
1635761417836:latinx_sub_2017_C)
1635761417848:# replace typo
1635761417859:latinx_sub_2017 <- latinx_sub_2017 |>
1635761417868:str_replace(pattern = "DR, Cuban Female 15.7\nPR",
1635761417879:replacement = "DR, Cuban Male 15.7\nPR")
1635761417893:# clean
1635761417903:latinx_sub_2017 <- make_rows(latinx_sub_2017)
1635761417918:latinx_sub_2017 <- clean_table(table = latinx_sub_2017)
1635761417988:# Asian sub groups 2018
1635761417998:asian_sub_2018 <- str_c(asian_sub_2018_A, asian_sub_2018_B)
1635761418009:asian_sub_2018 <- make_rows(asian_sub_2018)
1635761418024:asian_sub_2018 <- clean_table_2018(asian_sub_2018)
1635761418107:# combine subgroups
1635761418117:asian_sub_2018 <- asian_sub_2018 |>
1635761418127:add_row(Group = "Asian", Percent = 6.2,
1635761418137:Race_Ethnicity = "Asian", Gender = "All") |>
1635761418147:add_row(Group = "Asian", Percent = 6.4,
1635761418157:Race_Ethnicity = "Asian", Gender = "Men") |>
1635761418166:add_row(Group = "Asian", Percent = 6.1,
1635761418176:Race_Ethnicity = "Asian", Gender = "Women")
1635761418211:#correcting gender naming convention
1635761418221:asian_sub_2018 <- asian_sub_2018 |>
1635761418232:mutate(across(.cols = c(Gender, Group),
1635761418242:~ str_replace(string = .,
1635761418252:pattern = "Men",
1635761418262:replacement = "Male")),
1635761418272:across(.cols = c(Gender, Group),
1635761418282:~ str_replace(string = .,
1635761418292:pattern = "Women",
1635761418301:replacement = "Female")))
1635761418343:#defining year for asian 2017 & 2018
1635761418353:asian_sub_2017 <- asian_sub_2017 |>
1635761418363:mutate(Year = 2017)
1635761418391:asian_sub_2018 <- asian_sub_2018 |>
1635761418401:mutate(Year = 2018)
1635761418433:#combining subgroups
1635761418444:asian_subgroups <- bind_rows(asian_sub_2017, asian_sub_2018)
1635761418470:asian_subgroups <- asian_subgroups |>
1635761418481:select(~Group) |>
1635761418490:pivot_wider(names_from = Year,
1635761418500:values_from = Percent) |>
1635761418509:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1635761418518:names_to = "Year",
1635761418528:values_to = "Percent")
1635761454822:View(asian_subgroups)
1635761643216:View(asian_sub_2017)
1635761688285:View(asian_sub_2017_A)
1635761691402:View(asian_sub_2017_B)
1635761693727:View(asian_sub_2018)
1635761750623:load("~/COGS 137/cs01_Trash_Pandas/data/raw/imported_data.rda")
1635761762753:View(latinx_sub_2017)
1635761769001:View(asian_sub_2018)
1635761773137:View(asian_subgroups)
1635761821669:# Asian sub groups -- 2017
1635761821677:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1635761823263:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1635761824639:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1635761839475:# bind
1635761839485:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1635761839494:asian_sub_2017_B,
1635761839503:asian_sub_2017_C)
1635761847814:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1635761991910:View(asian_sub_2017)
1635762036943:load("~/COGS 137/cs01_Trash_Pandas/data/raw/imported_data.rda")
1635762059735:View(asian_sub_2018)
1635762062740:View(asian_subgroups)
1635762202303:# Asian sub groups -- 2017
1635762202312:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1635762217308:View(asian_sub_2017_A)
1635762228492:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1635762230251:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1635762243095:# bind
1635762243104:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1635762243112:asian_sub_2017_B,
1635762243120:asian_sub_2017_C)
1635762262580:View(asian_sub_2017)
1635762276684:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1635762290610:View(asian_sub_2017)
1635763056711:# Asian sub groups -- 2017
1635763056720:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1635763059935:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1635763061296:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1635763063516:# bind
1635763063526:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1635763063534:asian_sub_2017_B,
1635763063542:asian_sub_2017_C)
1635763066543:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1635763073908:View(asian_sub_2017)
1635763090631:make_rows <- function(text){
1635763090641:text |>
1635763090650:str_split("\n") |>
1635763090660:unlist() |>
1635763090670:as_tibble()
1635763090680:}
1635763090700:clean_table_mj <- function(table){
1635763090709:table|>
1635763090719:separate(col = value,
1635763090728:into = c("Group", "Years"),
1635763090740:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])")|>
1635763090752:mutate(Group = str_to_title(Group))|>
1635763090763:separate(col = Years,
1635763090774:into = c("2008", "2010", "2012", "2014", "2016", "2017"),
1635763090785:sep = " ")|>
1635763090796:drop_na()|>
1635763090807:mutate(
1635763090818:across(.cols = -Group, ~ str_remove(string = ., pattern = "\\.")),  # remove decimal points
1635763090829:across(.cols = -Group, as.numeric),  # convert to numeric
1635763090840:across(.cols = -Group, ~ . * 0.1),   # get our decimal point back
1635763090851:Race_Ethnicity = recode(Group, "United States" = "All_races",
1635763090862:"Female" = "All_races",
1635763090873:"Male" = "All_races"),
1635763090884:Race_Ethnicity = str_remove(string = Race_Ethnicity,
1635763090895:pattern = "Female|Male"))
1635763090916:}
1635763090938:clean_table <- function(table) {
1635763090950:table |>
1635763090961:separate(
1635763090972:col = value,
1635763090984:into = c("Group", "Percentage"),
1635763090996:sep = "(?<=[[:alpha:]])\\s(?=[0-9])"
1635763091007:) |>
1635763091018:drop_na() |>
1635763091029:mutate(Group = str_to_title(Group)) |>
1635763091041:mutate(Percentage = str_remove(string = Percentage,
1635763091052:pattern = "\\.")) |>
1635763091063:separate(Percentage, c("Percent"), sep = " ") |>
1635763091074:mutate(percent = as.numeric(Percent)) |>
1635763091086:mutate(Percent = Percent * 0.1) |>
1635763091096:mutate(
1635763091106:Race_Ethnicity = recode(
1635763091115:Group,
1635763091125:"United States" = "All_races",
1635763091135:"Female" = "All_races",
1635763091144:"Male" = "All_races"
1635763091155:)
1635763091165:) |>
1635763091175:mutate(Race_Ethnicity = str_remove(string = Race_Ethnicity,
1635763091185:pattern = "Female|Male")) |>
1635763091195:mutate(Gender = str_extract(string = Group,
1635763091204:pattern = "Female|Male")) |>
1635763091214:mutate(Gender = replace_na(Gender, replace = "All"))
1635763091224:}
1635763091241:clean_table_2018 <- function(table){
1635763091251:table |>
1635763091260:separate(col = value,
1635763091269:into = c("Group", "Percent"),
1635763091279:sep =  "(?<=[[:alpha:]])\\s:\\s|\\s(?=[0-9])") |>
1635763091288:mutate(Group = str_remove(string = Group,
1635763091297:pattern = ":")) |>
1635763091305:drop_na() |>
1635763091315:mutate(Group = str_to_title(string = Group)) |>
1635763091324:mutate(Percent = str_remove(string = Percent,
1635763091333:pattern = "\\.")) |>
1635763091343:mutate(Percent = as.numeric(Percent)) |>
1635763091353:mutate(Percent = Percent * 0.1) |>
1635763091362:mutate(Race_Ethnicity = str_replace(string = Group,
1635763091372:pattern = "Men|Women",
1635763091381:replacement = "missing")) |>
1635763091390:mutate(Race_Ethnicity = na_if(Race_Ethnicity, "missing")) |>
1635763091399:fill(Race_Ethnicity, .direction = "down") |>
1635763091407:mutate(Gender = str_extract(string = Group,
1635763091416:pattern = "Men|Women")) |>
1635763091425:mutate(Gender = replace_na(Gender, replace = "All"))
1635763091434:}
1635763099094:# Asian sub groups -- 2017
1635763099104:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1635763100217:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1635763101443:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1635763103723:# bind
1635763103732:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1635763103740:asian_sub_2017_B,
1635763103748:asian_sub_2017_C)
1635763105403:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1635763479310:make_rows <- function(text){
1635763479321:text |>
1635763479331:str_split("\n") |>
1635763479342:unlist() |>
1635763479352:as_tibble()
1635763479374:}
1635763479394:clean_table_mj <- function(table){
1635763479405:table|>
1635763479414:separate(col = value,
1635763479425:into = c("Group", "Years"),
1635763479435:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])")|>
1635763479445:mutate(Group = str_to_title(Group))|>
1635763479456:separate(col = Years,
1635763479466:into = c("2008", "2010", "2012", "2014", "2016", "2017"),
1635763479477:sep = " ")|>
1635763479487:drop_na()|>
1635763479497:mutate(
1635763479508:across(.cols = -Group, ~ str_remove(string = ., pattern = "\\.")),  # remove decimal points
1635763479519:across(.cols = -Group, as.numeric),  # convert to numeric
1635763479529:across(.cols = -Group, ~ . * 0.1),   # get our decimal point back
1635763479540:Race_Ethnicity = recode(Group, "United States" = "All_races",
1635763479552:"Female" = "All_races",
1635763479562:"Male" = "All_races"),
1635763479573:Race_Ethnicity = str_remove(string = Race_Ethnicity,
1635763479583:pattern = "Female|Male"))
1635763479600:}
1635763479619:clean_table <- function(table) {
1635763479630:table |>
1635763479641:separate(
1635763479653:col = value,
1635763479663:into = c("Group", "Percentage"),
1635763479673:sep = "(?<=[[:alpha:]])\\s(?=[0-9])"
1635763479684:) |>
1635763479693:drop_na() |>
1635763479704:mutate(Group = str_to_title(Group)) |>
1635763479714:mutate(Percentage = str_remove(string = Percentage,
1635763479725:pattern = "\\.")) |>
1635763479735:separate(Percentage, c("Percent"), sep = " ") |>
1635763479745:mutate(percent = as.numeric(Percent)) |>
1635763479756:mutate(Percent = Percent * 0.1) |>
1635763479766:mutate(
1635763479776:Race_Ethnicity = recode(
1635763479787:Group,
1635763479796:"United States" = "All_races",
1635763479806:"Female" = "All_races",
1635763479817:"Male" = "All_races"
1635763479827:)
1635763479838:) |>
1635763479848:mutate(Race_Ethnicity = str_remove(string = Race_Ethnicity,
1635763479858:pattern = "Female|Male")) |>
1635763479868:mutate(Gender = str_extract(string = Group,
1635763479879:pattern = "Female|Male")) |>
1635763479889:mutate(Gender = replace_na(Gender, replace = "All"))
1635763479900:}
1635763479919:clean_table_2018 <- function(table){
1635763479928:table |>
1635763479938:separate(col = value,
1635763479948:into = c("Group", "Percent"),
1635763479958:sep =  "(?<=[[:alpha:]])\\s:\\s|\\s(?=[0-9])") |>
1635763479969:mutate(Group = str_remove(string = Group,
1635763479978:pattern = ":")) |>
1635763479989:drop_na() |>
1635763480000:mutate(Group = str_to_title(string = Group)) |>
1635763480010:mutate(Percent = str_remove(string = Percent,
1635763480020:pattern = "\\.")) |>
1635763480032:mutate(Percent = as.numeric(Percent)) |>
1635763480042:mutate(Percent = Percent * 0.1) |>
1635763480052:mutate(Race_Ethnicity = str_replace(string = Group,
1635763480061:pattern = "Men|Women",
1635763480072:replacement = "missing")) |>
1635763480082:mutate(Race_Ethnicity = na_if(Race_Ethnicity, "missing")) |>
1635763480091:fill(Race_Ethnicity, .direction = "down") |>
1635763480102:mutate(Gender = str_extract(string = Group,
1635763480111:pattern = "Men|Women")) |>
1635763480120:mutate(Gender = replace_na(Gender, replace = "All"))
1635763480130:}
1635763494118:# Asian sub groups -- 2017
1635763494126:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1635763495282:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1635763496366:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1635763498151:# bind
1635763498160:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1635763498169:asian_sub_2017_B,
1635763498178:asian_sub_2017_C)
1635763502343:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1635763760881:make_rows <- function(text){
1635763760891:text |>
1635763760909:str_split("\n") |>
1635763760918:unlist() |>
1635763760928:as_tibble()
1635763760938:}
1635763760956:clean_table_mj <- function(table){
1635763760966:table|>
1635763760975:separate(col = value,
1635763760985:into = c("Group", "Years"),
1635763760995:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])")|>
1635763761005:mutate(Group = str_to_title(Group))|>
1635763761015:separate(col = Years,
1635763761025:into = c("2008", "2010", "2012", "2014", "2016", "2017"),
1635763761034:sep = " ")|>
1635763761044:drop_na()|>
1635763761053:mutate(
1635763761062:across(.cols = -Group, ~ str_remove(string = ., pattern = "\\.")),  # remove decimal points
1635763761072:across(.cols = -Group, as.numeric),  # convert to numeric
1635763761082:across(.cols = -Group, ~ . * 0.1),   # get our decimal point back
1635763761091:Race_Ethnicity = recode(Group, "United States" = "All_races",
1635763761102:"Female" = "All_races",
1635763761112:"Male" = "All_races"),
1635763761122:Race_Ethnicity = str_remove(string = Race_Ethnicity,
1635763761132:pattern = "Female|Male"))
1635763761151:}
1635763761170:clean_table <- function(table){
1635763761180:table |>
1635763761190:separate(col = value,
1635763761200:into = c("Group", "Percentage"),
1635763761209:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])") |>
1635763761219:drop_na() |>
1635763761229:mutate(Group = str_to_title(Group)) |>
1635763761238:mutate(Percentage = str_remove(string = Percentage,
1635763761248:pattern = "\\.")) |>
1635763761258:separate(Percentage, c("Percent"), sep = " ") |>
1635763761267:mutate(Percent = as.numeric(Percent)) |>
1635763761276:mutate(Percent = Percent * 0.1) |>
1635763761285:mutate(Race_Ethnicity = recode(Group,
1635763761294:"United States" = "All_races",
1635763761304:"Female" = "All_races",
1635763761312:"Male" = "All_races")) |>
1635763761321:mutate(Race_Ethnicity = str_remove(string = Race_Ethnicity,
1635763761331:pattern = " Female| Male")) |>
1635763761341:mutate(Gender = str_extract(string = Group,
1635763761351:pattern ="Female|Male")) |>
1635763761361:mutate(Gender = replace_na(Gender, replace = "All"))
1635763761372:}
1635763761389:clean_table_2018 <- function(table){
1635763761404:table |>
1635763761414:separate(col = value,
1635763761422:into = c("Group", "Percent"),
1635763761431:sep =  "(?<=[[:alpha:]])\\s:\\s|\\s(?=[0-9])") |>
1635763761440:mutate(Group = str_remove(string = Group,
1635763761449:pattern = ":")) |>
1635763761459:drop_na() |>
1635763761469:mutate(Group = str_to_title(string = Group)) |>
1635763761479:mutate(Percent = str_remove(string = Percent,
1635763761489:pattern = "\\.")) |>
1635763761498:mutate(Percent = as.numeric(Percent)) |>
1635763761507:mutate(Percent = Percent * 0.1) |>
1635763761517:mutate(Race_Ethnicity = str_replace(string = Group,
1635763761525:pattern = "Men|Women",
1635763761534:replacement = "missing")) |>
1635763761543:mutate(Race_Ethnicity = na_if(Race_Ethnicity, "missing")) |>
1635763761552:fill(Race_Ethnicity, .direction = "down") |>
1635763761560:mutate(Gender = str_extract(string = Group,
1635763761568:pattern = "Men|Women")) |>
1635763761577:mutate(Gender = replace_na(Gender, replace = "All"))
1635763761585:}
1635763776071:# Asian sub groups -- 2017
1635763776079:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1635763777332:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1635763778747:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1635763780256:# bind
1635763780265:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1635763780274:asian_sub_2017_B,
1635763780283:asian_sub_2017_C)
1635763782839:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1635763906993:# Asian sub groups -- 2017
1635763907002:asian_sub_2017 <- make_rows(asian_sub_2017)
1635763908382:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1635763909962:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1635763911510:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1635763913681:# bind
1635763913689:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1635763913698:asian_sub_2017_B,
1635763913706:asian_sub_2017_C)
1635763916076:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1635764108805:# Asian sub groups -- 2017
1635764108815:asian_sub_2017 <- make_rows(asian_sub_2017)
1635764140235:asian_sub_2017
1635764179970:major_racial_ethnic_groups <-
1635764179980:magick::image_read("data/raw/Major_ethnic_groups_screenshot.png")
1635764180068:magick::image_info(major_racial_ethnic_groups)
1635764180094:major_groups <- magick::image_ocr(major_racial_ethnic_groups)
1635764181942:# asian sub groups 2017 & 2018
1635764181952:asian_sub_2017 <- image_read("data/raw/asian_subgroups_2017.png")
1635764181990:asian_sub_2017_A <- image_read("data/raw/asian_sub_2017_A.png")
1635764182038:asian_sub_2017_B <- image_read("data/raw/asian_sub_2017_B.png")
1635764182056:asian_sub_2017_C <- image_read("data/raw/asian_sub_2017_C.png")
1635764182075:asian_sub_2017 <- image_ocr(asian_sub_2017)
1635764183158:asian_sub_2017_A <- image_ocr(asian_sub_2017_A)
1635764183934:asian_sub_2017_B <- image_ocr(asian_sub_2017_B)
1635764184058:asian_sub_2017_C <- image_ocr(asian_sub_2017_C)
1635764184234:asian_sub_2018_A <- image_read("data/raw/asian_sub_2018_A.png")
1635764184265:asian_sub_2018_A <- image_ocr(asian_sub_2018_A)
1635764184632:asian_sub_2018_B <- image_read("data/raw/asian_sub_2018_B.png")
1635764184655:asian_sub_2018_B <- image_ocr(asian_sub_2018_B)
1635764185043:# latinx sub groups 2017 & 2018
1635764185059:latinx_imageA <- image_read("data/raw/latinx_sub_2017_A.png")
1635764185076:latinx_imageB <- image_read("data/raw/latinx_sub_2017_B.png")
1635764185124:latinx_imageC <- image_read("data/raw/latinx_sub_2017_C.png")
1635764185144:latinx_sub_2017_A <- image_ocr(latinx_imageA)
1635764185236:latinx_sub_2017_B <- image_ocr(latinx_imageB)
1635764185960:latinx_sub_2017_C <- image_ocr(latinx_imageC)
1635764186241:latinx_sub_2018 <- image_read("data/raw/latinx_subgroups_2018.png")
1635764186268:latinx_sub_2018 <- image_ocr(latinx_sub_2018)
1635764186558:latinx_sub_2018
1635764186585:# save the data
1635764186595:save(
1635764186604:major_groups,
1635764186613:asian_sub_2017,
1635764186623:asian_sub_2017_A,
1635764186632:asian_sub_2017_B,
1635764186641:asian_sub_2017_C,
1635764186651:latinx_sub_2017_A,
1635764186660:latinx_sub_2017_B,
1635764186671:latinx_sub_2017_C,
1635764186680:asian_sub_2018_A,
1635764186691:asian_sub_2018_B,
1635764186701:latinx_sub_2018,
1635764186711:file = "data/raw/imported_data.rda"
1635764186722:)
1635764192363:make_rows <- function(text){
1635764192375:text |>
1635764192386:str_split("\n") |>
1635764192396:unlist() |>
1635764192406:as_tibble()
1635764192426:}
1635764192445:clean_table_mj <- function(table){
1635764192455:table|>
1635764192465:separate(col = value,
1635764192475:into = c("Group", "Years"),
1635764192486:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])")|>
1635764192496:mutate(Group = str_to_title(Group))|>
1635764192507:separate(col = Years,
1635764192517:into = c("2008", "2010", "2012", "2014", "2016", "2017"),
1635764192528:sep = " ")|>
1635764192538:drop_na()|>
1635764192548:mutate(
1635764192558:across(.cols = -Group, ~ str_remove(string = ., pattern = "\\.")),  # remove decimal points
1635764192568:across(.cols = -Group, as.numeric),  # convert to numeric
1635764192579:across(.cols = -Group, ~ . * 0.1),   # get our decimal point back
1635764192588:Race_Ethnicity = recode(Group, "United States" = "All_races",
1635764192597:"Female" = "All_races",
1635764192606:"Male" = "All_races"),
1635764192616:Race_Ethnicity = str_remove(string = Race_Ethnicity,
1635764192625:pattern = "Female|Male"))
1635764192642:}
1635764192660:clean_table <- function(table){
1635764192670:table |>
1635764192679:separate(col = value,
1635764192689:into = c("Group", "Percentage"),
1635764192699:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])") |>
1635764192709:drop_na() |>
1635764192718:mutate(Group = str_to_title(Group)) |>
1635764192727:mutate(Percentage = str_remove(string = Percentage,
1635764192736:pattern = "\\.")) |>
1635764192745:separate(Percentage, c("Percent"), sep = " ") |>
1635764192755:mutate(Percent = as.numeric(Percent)) |>
1635764192764:mutate(Percent = Percent * 0.1) |>
1635764192774:mutate(Race_Ethnicity = recode(Group,
1635764192786:"United States" = "All_races",
1635764192795:"Female" = "All_races",
1635764192804:"Male" = "All_races")) |>
1635764192813:mutate(Race_Ethnicity = str_remove(string = Race_Ethnicity,
1635764192824:pattern = " Female| Male")) |>
1635764192836:mutate(Gender = str_extract(string = Group,
1635764192847:pattern ="Female|Male")) |>
1635764192858:mutate(Gender = replace_na(Gender, replace = "All"))
1635764192868:}
1635764192886:clean_table_2018 <- function(table){
1635764192896:table |>
1635764192905:separate(col = value,
1635764192915:into = c("Group", "Percent"),
1635764192925:sep =  "(?<=[[:alpha:]])\\s:\\s|\\s(?=[0-9])") |>
1635764192935:mutate(Group = str_remove(string = Group,
1635764192945:pattern = ":")) |>
1635764192955:drop_na() |>
1635764192964:mutate(Group = str_to_title(string = Group)) |>
1635764192974:mutate(Percent = str_remove(string = Percent,
1635764192984:pattern = "\\.")) |>
1635764192993:mutate(Percent = as.numeric(Percent)) |>
1635764193004:mutate(Percent = Percent * 0.1) |>
1635764193013:mutate(Race_Ethnicity = str_replace(string = Group,
1635764193021:pattern = "Men|Women",
1635764193030:replacement = "missing")) |>
1635764193039:mutate(Race_Ethnicity = na_if(Race_Ethnicity, "missing")) |>
1635764193048:fill(Race_Ethnicity, .direction = "down") |>
1635764193057:mutate(Gender = str_extract(string = Group,
1635764193066:pattern = "Men|Women")) |>
1635764193076:mutate(Gender = replace_na(Gender, replace = "All"))
1635764193085:}
1635764203060:# major_groups
1635764203068:major_groups <- make_rows(major_groups)
1635764204777:major_groups <- clean_table_mj(major_groups)
1635764207633:major_groups_long <- major_groups |>
1635764207641:pivot_longer(
1635764207649:cols = contains("20"),
1635764207657:names_to = "Year",
1635764207664:values_to = "Percent",
1635764207672:names_prefix = "Perc_"
1635764207679:) |>
1635764207686:mutate(Year = as.numeric(Year))
1635764213454:# Asian sub groups -- 2017
1635764213462:asian_sub_2017 <- make_rows(asian_sub_2017)
1635764216864:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1635764218713:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1635764220422:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1635764223087:# bind
1635764223094:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1635764223101:asian_sub_2017_B,
1635764223108:asian_sub_2017_C)
1635764226106:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1635764239122:# Asian sub groups 2018
1635764239130:asian_sub_2018 <- str_c(asian_sub_2018_A, asian_sub_2018_B)
1635764240753:asian_sub_2018 <- make_rows(asian_sub_2018)
1635764242528:asian_sub_2018 <- clean_table_2018(asian_sub_2018)
1635764254298:View(asian_sub_2017)
1635764264151:View(asian_sub_2018)
1635764274339:# combine subgroups
1635764274347:asian_sub_2018 <- asian_sub_2018 |>
1635764274355:add_row(Group = "Asian", Percent = 6.2,
1635764274363:Race_Ethnicity = "Asian", Gender = "All") |>
1635764274370:add_row(Group = "Asian", Percent = 6.4,
1635764274378:Race_Ethnicity = "Asian", Gender = "Men") |>
1635764274385:add_row(Group = "Asian", Percent = 6.1,
1635764274392:Race_Ethnicity = "Asian", Gender = "Women")
1635764282576:#correcting gender naming convention
1635764282584:asian_sub_2018 <- asian_sub_2018 |>
1635764282591:mutate(across(.cols = c(Gender, Group),
1635764282599:~ str_replace(string = .,
1635764282606:pattern = "Men",
1635764282614:replacement = "Male")),
1635764282622:across(.cols = c(Gender, Group),
1635764282631:~ str_replace(string = .,
1635764282639:pattern = "Women",
1635764282647:replacement = "Female")))
1635764286198:#defining year for asian 2017 & 2018
1635764286205:asian_sub_2017 <- asian_sub_2017 |>
1635764286212:mutate(Year = 2017)
1635764287398:asian_sub_2018 <- asian_sub_2018 |>
1635764287405:mutate(Year = 2018)
1635764290287:#combining subgroups
1635764290295:asian_subgroups <- bind_rows(asian_sub_2017, asian_sub_2018)
1635764305277:View(asian_subgroups)
1635764381322:asian_subgroups <- asian_subgroups |>
1635764381330:select(-Group) |>
1635764381338:pivot_wider(names_from = Year,
1635764381346:values_from = Percent) |>
1635764381354:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1635764381362:names_to = "Year",
1635764381371:values_to= "Percent")
1635764389353:View(asian_subgroups)
1635764547297:# Latino sub groups -- 2017
1635764547306:#combine
1635764547315:latinx_sub_2017 <- stringr::str_c(latinx_sub_2017_A,
1635764547325:latinx_sub_2017_B,
1635764547335:latinx_sub_2017_C)
1635764549123:# replace typo
1635764549132:latinx_sub_2017 <- latinx_sub_2017 |>
1635764549139:str_replace(pattern = "DR, Cuban Female 15.7\nPR",
1635764549147:replacement = "DR, Cuban Male 15.7\nPR")
1635764550438:# clean
1635764550447:latinx_sub_2017 <- make_rows(latinx_sub_2017)
1635764552280:latinx_sub_2017 <- clean_table(table = latinx_sub_2017)
1635764562331:View(latinx_sub_2017)
1635764741919:make_rows <- function(text){
1635764741929:text |>
1635764741939:str_split("\n") |>
1635764741958:unlist() |>
1635764741972:as_tibble()
1635764741980:}
1635764741995:clean_table_mj <- function(table){
1635764742003:table|>
1635764742011:separate(col = value,
1635764742020:into = c("Group", "Years"),
1635764742028:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])")|>
1635764742037:mutate(Group = str_to_title(Group))|>
1635764742046:separate(col = Years,
1635764742056:into = c("2008", "2010", "2012", "2014", "2016", "2017"),
1635764742065:sep = " ")|>
1635764742073:drop_na()|>
1635764742082:mutate(
1635764742092:across(.cols = -Group, ~ str_remove(string = ., pattern = "\\.")),  # remove decimal points
1635764742101:across(.cols = -Group, as.numeric),  # convert to numeric
1635764742111:across(.cols = -Group, ~ . * 0.1),   # get our decimal point back
1635764742120:Race_Ethnicity = recode(Group, "United States" = "All_races",
1635764742130:"Female" = "All_races",
1635764742139:"Male" = "All_races"),
1635764742148:Race_Ethnicity = str_remove(string = Race_Ethnicity,
1635764742157:pattern = "Female|Male"))
1635764742174:}
1635764742193:clean_table <- function(table){
1635764742202:table |>
1635764742212:separate(col = value,
1635764742221:into = c("Group", "Percentage"),
1635764742230:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])") |>
1635764742238:drop_na() |>
1635764742248:mutate(Group = str_to_title(Group)) |>
1635764742257:mutate(Percentage = str_remove(string = Percentage,
1635764742266:pattern = "\\.")) |>
1635764742277:separate(Percentage, c("Percent"), sep = " ") |>
1635764742286:mutate(Percent = as.numeric(Percent)) |>
1635764742295:mutate(Percent = Percent * 0.1) |>
1635764742304:mutate(Race_Ethnicity = recode(Group,
1635764742313:"United States" = "All_races",
1635764742323:"Female" = "All_races",
1635764742332:"Male" = "All_races")) |>
1635764742342:mutate(Race_Ethnicity = str_remove(string = Race_Ethnicity,
1635764742354:pattern = " Female| Male")) |>
1635764742364:mutate(Gender = str_extract(string = Group,
1635764742374:pattern ="Female|Male")) |>
1635764742384:mutate(Gender = replace_na(Gender, replace = "All"))
1635764742395:}
1635764742415:clean_table_2018 <- function(table){
1635764742425:table |>
1635764742435:separate(col = value,
1635764742445:into = c("Group", "Percent"),
1635764742454:sep =  "(?<=[[:alpha:]])\\s:\\s|\\s(?=[0-9])") |>
1635764742463:mutate(Group = str_remove(string = Group,
1635764742474:pattern = ":")) |>
1635764742484:drop_na() |>
1635764742494:mutate(Group = str_to_title(string = Group)) |>
1635764742505:mutate(Percent = str_remove(string = Percent,
1635764742514:pattern = "\\.")) |>
1635764742524:mutate(Percent = as.numeric(Percent)) |>
1635764742534:mutate(Percent = Percent * 0.1) |>
1635764742544:mutate(Race_Ethnicity = str_replace(string = Group,
1635764742555:pattern = "Men|Women",
1635764742565:replacement = "missing")) |>
1635764742574:mutate(Race_Ethnicity = na_if(Race_Ethnicity, "missing")) |>
1635764742584:fill(Race_Ethnicity, .direction = "down") |>
1635764742594:mutate(Gender = str_extract(string = Group,
1635764742604:pattern = "Men|Women")) |>
1635764742614:mutate(Gender = replace_na(Gender, replace = "All"))
1635764742624:}
1635764742643:fix_latinx_naming <- function(table) {
1635764742652:table |>
1635764742662:mutate(
1635764742672:Group = str_replace(
1635764742682:string = Group,
1635764742693:pattern = "Pr, Dr, Cuban",
1635764742703:replacement = "Puerto Rican, Dominican, Cuban"
1635764742712:),
1635764742721:Race_Ethnicity = str_replace(
1635764742730:string = Race_Ethnicity,
1635764742739:pattern = "Pr, Dr, Cuban",
1635764742748:replacement = "Puerto Rican, Dominican, Cuban"
1635764742757:)
1635764742766:)
1635764742774:}
1635764838573:latinx_sub_2017 <- fix_latinx_naming(latinx_sub_2017)
1635764845868:latinx_sub_2018 <- str_replace_all(string = latinx_sub_2018,
1635764845876:pattern = "\\s:\n{2}|\n{2}",
1635764845884:replacement = " ")
1635764847399:latinx_sub_2018 <- make_rows(latinx_sub_2018)
1635764848312:latinx_sub_2018 <- clean_table_2018(latinx_sub_2018)
1635764849079:latinx_sub_2018 <- fix_latinx_naming(latinx_sub_2018)
1635764850643:latinx_sub_2018 <- latinx_sub_2018 |>
1635764850652:add_row(
1635764850660:Group = "Latinx",
1635764850668:Percent = 12.8,
1635764850677:Race_Ethnicity = "Latinx",
1635764850685:Gender = "All"
1635764850694:) |>
1635764850702:add_row(
1635764850711:Group = "Latinx",
1635764850719:Percent = 12.3,
1635764850728:Race_Ethnicity = "Latinx",
1635764850736:Gender = "Men"
1635764850744:) |>
1635764850752:add_row(
1635764850760:Group = "Latinx",
1635764850769:Percent = 13.3,
1635764850779:Race_Ethnicity = "Latinx",
1635764850791:Gender = "Women"
1635764850801:)
1635764851846:latinx_sub_2018 <- latinx_sub_2018 |>
1635764851854:mutate(across(
1635764851861:.cols = c(Gender, Group),
1635764851869:~ str_replace(
1635764851876:string = .,
1635764851883:pattern = "Men",
1635764851892:replacement = "Male"
1635764851899:)
1635764851907:),
1635764851914:across(
1635764851921:.cols = c(Gender, Group),
1635764851928:~ str_replace(
1635764851936:string = .,
1635764851943:pattern = "Women",
1635764851950:replacement = "Female"
1635764851958:)
1635764851966:))
1635764870444:View(latinx_sub_2018)
1635765022178:latinx_subgroups <- bind_rows(latinx_sub_2017, latinx_sub_2018)
1635765025453:# combining
1635765025464:latinx_sub_2017 <- latinx_sub_2017 |>
1635765025473:mutate(Year = 2017)
1635765026695:latinx_sub_2018 <- latinx_sub_2018 |>
1635765026703:mutate(Year = 2018)
1635765044140:View(latinx_subgroups)
1635765101287:#missing categories
1635765101296:latinx_subgroups <- latinx_subgroups |>
1635765101304:select(-Group) |>
1635765101312:pivot_wider(names_from = Year, values_from = Percent) |>
1635765101320:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1635765101327:names_to ="Year" ,
1635765101334:values_to="Percent")
1635765132967:View(latinx_subgroups)
1635765184761:# combining
1635765184769:latinx_sub_2017 <- latinx_sub_2017 |>
1635765184778:mutate(Year = 2017)
1635765186396:latinx_sub_2018 <- latinx_sub_2018 |>
1635765186404:mutate(Year = 2018)
1635765188172:latinx_subgroups <- bind_rows(latinx_sub_2017, latinx_sub_2018)
1635765201970:View(latinx_subgroups)
1635765209462:#missing categories
1635765209469:latinx_subgroups <- latinx_subgroups |>
1635765209476:select(-Group) |>
1635765209483:pivot_wider(names_from = Year, values_from = Percent) |>
1635765209490:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1635765209497:names_to ="Year" ,
1635765209504:values_to="Percent")
1635767168402:temp <- latinx_subgroups |>
1635767168411:filter(Gender == "All") |>
1635767168420:ggplot(aes(x = fct_infreq(Race_Ethnicity), y = Percent, color = year ))
1635767262147:temp
1635767281650:temp <- latinx_subgroups |>
1635767281660:filter(Gender == "All") |>
1635767281682:ggplot(aes(x = fct_infreq(Race_Ethnicity), y = Percent, color = Year ))
1635767286260:temp
1635767318100:temp <- latinx_subgroups |>
1635767318112:filter(Gender == "All") |>
1635767318121:ggplot(aes(x = Race_Ethnicity, y = Percent, color = Year ))
1635767324296:temp
1635767397718:temp <- latinx_subgroups |>
1635767397726:filter(Gender == "All")
1635767402594:View(temp)
1635767487032:ggplot(aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635767487041:geom_col(aes(fill = Year))
1635767503350:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635767503359:geom_col(aes(fill = Year))
1635767532508:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635767532517:geom_col(aes(fill = Year), position = dodge)
1635767549176:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635767549184:geom_col(aes(fill = Year), position = "dodge")
1635767566168:ggplot(data = temp, aes(x = fct_infre(Race_Ethnicity), y = Percent, color = Year )) +
1635767566176:geom_col(aes(fill = Year), position = "dodge")
1635767578537:ggplot(data = temp, aes(x = fct_infreq(Race_Ethnicity), y = Percent, color = Year )) +
1635767578544:geom_col(aes(fill = Year), position = "dodge")
1635767632543:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635767632551:geom_col(aes(fill = Year), position = "dodge") +
1635767632559:+
1635767632566:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1635767643302:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635767643309:geom_col(aes(fill = Year), position = "dodge") +
1635767643317:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1635767678808:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635767678817:geom_col(aes(fill = Year), position = "dodge") +
1635767678826:theme(axis.text.x = element_text(angle = 90))
1635767778932:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635767778940:geom_col(aes(fill = Year), position = "dodge") +
1635767778948:theme(axis.text.x = element_text(angle = 45))
1635767788000:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635767788008:geom_col(aes(fill = Year), position = "dodge")
1635767890699:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635767890708:geom_col(aes(fill = Year), position = "dodge") +
1635767890715:theme(axis.title.x = element_blank(),
1635767890723:axis.text.x = element_text(angle = 90, hjust = 1))
1635767903153:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635767903160:geom_col(aes(fill = Year), position = "dodge") +
1635767903167:theme(axis.title.x = element_blank(),
1635767903174:axis.text.x = element_text(angle = 90, hjust = 1))
1635768013786:temp <- latinx_subgroups |>
1635768013798:filter(Gender == "All") |>
1635768013810:mutate(Race_Ethnicity = fct_reorder(Race_Ethnicity, Percent))
1635768021037:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635768021044:geom_col(aes(fill = Year), position = "dodge") +
1635768021050:theme(axis.title.x = element_blank(),
1635768021057:axis.text.x = element_text(angle = 90, hjust = 1))
1635768488337:View(clean_table_mj)
1635768691395:temp <- latinx_subgroups |>
1635768691403:filter(Gender == "All") |>
1635768691412:mutate(Race_Ethnicity = fct_reorder(Race_Ethnicity, Percent)) |>
1635768691420:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~ Race_Ethnicity))
1635768730948:temp <- latinx_subgroups |>
1635768730956:filter(Gender == "All") |>
1635768730964:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~ Race_Ethnicity)) |>
1635768730972:mutate(Race_Ethnicity = fct_reorder(Race_Ethnicity, Percent))
1635768746814:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635768746823:geom_col(aes(fill = Year), position = "dodge") +
1635768746831:theme(axis.title.x = element_blank(),
1635768746838:axis.text.x = element_text(angle = 90, hjust = 1))
1635768861038:temp <- latinx_subgroups |>
1635768861046:filter(Gender == "All") |>
1635768861054:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~ Race_Ethnicity)) |>
1635768861062:mutate(Race_Ethnicity = fct_reorder(Race_Ethnicity, Percent)) |>
1635768861070:mutate(Race_Ethnicity = fct_relevel(Race_Ethnicity, "Latinx"))
1635768865682:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year )) +
1635768865689:geom_col(aes(fill = Year), position = "dodge") +
1635768865696:theme(axis.title.x = element_blank(),
1635768865702:axis.text.x = element_text(angle = 90, hjust = 1))
1635769773215:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year)) +
1635769773222:geom_col(aes(fill = Year), position = "dodge") +
1635769773229:theme(axis.title.x = element_blank(),
1635769773235:axis.text.x = element_text(angle = 90, hjust = 1)) +
1635769773241:labs(title = "Youth Disconnection by Latinx Subgroup") +
1635769773247:scale_color_binned(color = "Set1")
1635769896749:ggplot(data = temp, aes(x = Race_Ethnicity, y = Percent, color = Year)) +
1635769896756:geom_col(aes(fill = Year), position = "dodge") +
1635769896763:theme(axis.title.x = element_blank(),
1635769896770:axis.text.x = element_text(angle = 90, hjust = 1)) +
1635769896777:labs(title = "Youth Disconnection by Latinx Subgroup") +
1635769896785:scale_fill_brewer(palette = "Set1")
1635770102359:View(asian_subgroups)
1635770181896:temp2 <- asian_subgroups |>
1635770181905:filter(Race_Ethnicity != "All_races" & Gender == "All")
1635770187996:View(temp2)
1635770235669:temp2 <- asian_subgroups |>
1635770235677:filter(Race_Ethnicity != "All_races" & Gender == "All") |>
1635770235685:mutate(Race_Ethnicity = fct_reorder(Race_Ethnicity, Percent)) |>
1635770235694:mutate(Race_Ethnicity = fct_relevel(Race_Ethnicity, "Asian"))
1635770343668:ggplot(data = temp2, aes(x = Race_Ethnicity, y = Percent, color = Year)) +
1635770343675:geom_col(aes(fill = Year), position = "dodge") +
1635770343684:theme(axis.title.x = element_blank(),
1635770343691:axis.text.x = element_text(angle = 90, hjust = 1)) +
1635770343699:labs(title = "Youth Disconnection by Asian Subgroup") +
1635770343706:scale_fill_brewer(palette = "Set1")
1635770533787:ggplot(data = temp2, aes(x = Race_Ethnicity, y = Percent, color = Year)) +
1635770533798:geom_col(aes(fill = Year), position = "dodge") +
1635770533808:theme(axis.title.x = element_blank(),
1635770533817:axis.text.x = element_text(angle = 90, hjust = 1)) +
1635770533826:labs(title = "Youth Disconnection by Asian Subgroup") +
1635770533835:scale_fill_brewer(palette = "Set1") +
1635770533844:scale_x_discrete("Blank" = " ")
1636346139688:# Latino sub groups -- 2017
1636346139700:#combine
1636346139712:latinx_sub_2017 <- stringr::str_c(latinx_sub_2017_A,
1636346139722:latinx_sub_2017_B,
1636346139733:latinx_sub_2017_C)
1636346151921:library(OCSdata)
1636346152530:library(tidyverse)
1636346154296:library(tidyverse)
1636346154307:library(pdftools)
1636346154381:library(tesseract)
1636346154593:library(magick)
1636346156337:library(OCSdata)
1636346156345:library(tidyverse)
1636346156352:library(pdftools)
1636346156361:library(tesseract)
1636346156370:library(magick)
1636346161974:#reading in data for major_groups
1636346161985:major_racial_ethnic_groups <-
1636346161996:magick::image_read("data/raw/Major_ethnic_groups_screenshot.png")
1636346162089:magick::image_info(major_racial_ethnic_groups)
1636346162128:major_groups <- magick::image_ocr(major_racial_ethnic_groups)
1636346164739:# asian sub groups 2017 & 2018
1636346164750:asian_sub_2017 <- image_read("data/raw/asian_subgroups_2017.png")
1636346164795:asian_sub_2017_A <- image_read("data/raw/asian_sub_2017_A.png")
1636346164868:asian_sub_2017_B <- image_read("data/raw/asian_sub_2017_B.png")
1636346164884:asian_sub_2017_C <- image_read("data/raw/asian_sub_2017_C.png")
1636346164901:asian_sub_2017 <- image_ocr(asian_sub_2017)
1636346166127:asian_sub_2017_A <- image_ocr(asian_sub_2017_A)
1636346167001:asian_sub_2017_B <- image_ocr(asian_sub_2017_B)
1636346167198:asian_sub_2017_C <- image_ocr(asian_sub_2017_C)
1636346167409:asian_sub_2018_A <- image_read("data/raw/asian_sub_2018_A.png")
1636346167453:asian_sub_2018_A <- image_ocr(asian_sub_2018_A)
1636346167888:asian_sub_2018_B <- image_read("data/raw/asian_sub_2018_B.png")
1636346167919:asian_sub_2018_B <- image_ocr(asian_sub_2018_B)
1636346168412:# latinx sub groups 2017 & 2018
1636346168431:latinx_imageA <- image_read("data/raw/latinx_sub_2017_A.png")
1636346168453:latinx_imageB <- image_read("data/raw/latinx_sub_2017_B.png")
1636346168513:latinx_imageC <- image_read("data/raw/latinx_sub_2017_C.png")
1636346168539:latinx_sub_2017_A <- image_ocr(latinx_imageA)
1636346168653:latinx_sub_2017_B <- image_ocr(latinx_imageB)
1636346169386:latinx_sub_2017_C <- image_ocr(latinx_imageC)
1636346169622:latinx_sub_2018 <- image_read("data/raw/latinx_subgroups_2018.png")
1636346169648:latinx_sub_2018 <- image_ocr(latinx_sub_2018)
1636346169987:latinx_sub_2018
1636346174578:# save the data
1636346174589:save(
1636346174599:major_groups,
1636346174609:asian_sub_2017,
1636346174619:asian_sub_2017_A,
1636346174643:asian_sub_2017_B,
1636346174653:asian_sub_2017_C,
1636346174664:latinx_sub_2017_A,
1636346174674:latinx_sub_2017_B,
1636346174683:latinx_sub_2017_C,
1636346174719:asian_sub_2018_A,
1636346174730:asian_sub_2018_B,
1636346174741:latinx_sub_2018,
1636346174752:file = "data/raw/imported_data.rda"
1636346174763:)
1636346178090:make_rows <- function(text){
1636346178101:text |>
1636346178111:str_split("\n") |>
1636346178136:unlist() |>
1636346178146:as_tibble()
1636346178156:}
1636346180584:clean_table_mjr <- function(table){
1636346180594:table|>
1636346180605:separate(col = value,
1636346180614:into = c("Group", "Years"),
1636346180629:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])")|>
1636346180662:mutate(Group = str_to_title(Group))|>
1636346180671:separate(col = Years,
1636346180681:into = c("2008", "2010", "2012", "2014", "2016", "2017"),
1636346180690:sep = " ")|>
1636346180700:drop_na()|>
1636346180735:mutate(
1636346180745:across(.cols = -Group, ~ str_remove(string = ., pattern = "\\.")),  # remove decimal points
1636346180756:across(.cols = -Group, as.numeric),  # convert to numeric
1636346180765:across(.cols = -Group, ~ . * 0.1),   # get our decimal point back
1636346180776:Race_Ethnicity = recode(Group, "United States" = "All_races",
1636346180786:"Female" = "All_races",
1636346180797:"Male" = "All_races"),
1636346180807:Race_Ethnicity = str_remove(string = Race_Ethnicity,
1636346180818:pattern = "Female|Male"))
1636346180836:}
1636346183150:clean_table <- function(table){
1636346183165:table |>
1636346183177:separate(col = value,
1636346183190:into = c("Group", "Percentage"),
1636346183218:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])") |>
1636346183229:drop_na() |>
1636346183239:mutate(Group = str_to_title(Group)) |>
1636346183248:mutate(Percentage = str_remove(string = Percentage,
1636346183257:pattern = "\\.")) |>
1636346183288:separate(Percentage, c("Percent"), sep = " ") |>
1636346183297:mutate(Percent = as.numeric(Percent)) |>
1636346183306:mutate(Percent = Percent * 0.1) |>
1636346183315:mutate(Race_Ethnicity = recode(Group,
1636346183325:"United States" = "All_races",
1636346183334:"Female" = "All_races",
1636346183344:"Male" = "All_races")) |>
1636346183356:mutate(Race_Ethnicity = str_remove(string = Race_Ethnicity,
1636346183366:pattern = " Female| Male")) |>
1636346183376:mutate(Gender = str_extract(string = Group,
1636346183385:pattern ="Female|Male")) |>
1636346183395:mutate(Gender = replace_na(Gender, replace = "All"))
1636346183404:}
1636346185670:clean_table_2018 <- function(table){
1636346185681:table |>
1636346185692:separate(col = value,
1636346185702:into = c("Group", "Percent"),
1636346185727:sep =  "(?<=[[:alpha:]])\\s:\\s|\\s(?=[0-9])") |>
1636346185738:mutate(Group = str_remove(string = Group,
1636346185748:pattern = ":")) |>
1636346185759:drop_na() |>
1636346185770:mutate(Group = str_to_title(string = Group)) |>
1636346185802:mutate(Percent = str_remove(string = Percent,
1636346185812:pattern = "\\.")) |>
1636346185824:mutate(Percent = as.numeric(Percent)) |>
1636346185836:mutate(Percent = Percent * 0.1) |>
1636346185846:mutate(Race_Ethnicity = str_replace(string = Group,
1636346185856:pattern = "Men|Women",
1636346185866:replacement = "missing")) |>
1636346185876:mutate(Race_Ethnicity = na_if(Race_Ethnicity, "missing")) |>
1636346185885:fill(Race_Ethnicity, .direction = "down") |>
1636346185895:mutate(Gender = str_extract(string = Group,
1636346185905:pattern = "Men|Women")) |>
1636346185915:mutate(Gender = replace_na(Gender, replace = "All"))
1636346185924:}
1636346188327:fix_latinx_naming <- function(table) {
1636346188338:table |>
1636346188349:mutate(
1636346188360:Group = str_replace(
1636346188370:string = Group,
1636346188396:pattern = "Pr, Dr, Cuban",
1636346188407:replacement = "Puerto Rican, Dominican, Cuban"
1636346188417:),
1636346188427:Race_Ethnicity = str_replace(
1636346188438:string = Race_Ethnicity,
1636346188467:pattern = "Pr, Dr, Cuban",
1636346188478:replacement = "Puerto Rican, Dominican, Cuban"
1636346188488:)
1636346188498:)
1636346188508:}
1636346191208:# major_groups
1636346191219:major_groups <- make_rows(major_groups)
1636346191246:major_groups <- clean_table_mjr(major_groups)
1636346191392:major_groups <- major_groups |>
1636346191402:mutate(Gender = str_extract(string = Group,
1636346191412:pattern = "Female|Male")) |>
1636346191422:mutate(Gender = replace_na(Gender, replace = "All"))
1636346191466:major_groups_long <- major_groups |>
1636346191475:pivot_longer(
1636346191486:cols = contains("20"),
1636346191495:names_to = "Year",
1636346191505:values_to = "Percent",
1636346191515:names_prefix = "Perc_"
1636346191525:) |>
1636346191534:mutate(Year = as.numeric(Year))
1636346197511:# Asian sub groups -- 2017
1636346197521:asian_sub_2017 <- make_rows(asian_sub_2017)
1636346197545:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1636346197558:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1636346197583:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1636346197595:# bind
1636346197603:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1636346197612:asian_sub_2017_B,
1636346197621:asian_sub_2017_C)
1636346197650:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1636346197718:# Asian sub groups 2018
1636346197727:asian_sub_2018 <- str_c(asian_sub_2018_A, asian_sub_2018_B)
1636346197747:asian_sub_2018 <- make_rows(asian_sub_2018)
1636346197762:asian_sub_2018 <- clean_table_2018(asian_sub_2018)
1636346197860:# combine subgroups
1636346197870:asian_sub_2018 <- asian_sub_2018 |>
1636346197881:add_row(Group = "Asian", Percent = 6.2,
1636346197890:Race_Ethnicity = "Asian", Gender = "All") |>
1636346197900:add_row(Group = "Asian", Percent = 6.4,
1636346197909:Race_Ethnicity = "Asian", Gender = "Men") |>
1636346197921:add_row(Group = "Asian", Percent = 6.1,
1636346197930:Race_Ethnicity = "Asian", Gender = "Women")
1636346197968:#correcting gender naming convention
1636346197977:asian_sub_2018 <- asian_sub_2018 |>
1636346197987:mutate(across(.cols = c(Gender, Group),
1636346197996:~ str_replace(string = .,
1636346198006:pattern = "Men",
1636346198015:replacement = "Male")),
1636346198025:across(.cols = c(Gender, Group),
1636346198034:~ str_replace(string = .,
1636346198043:pattern = "Women",
1636346198052:replacement = "Female")))
1636346198086:#defining year for asian 2017 & 2018
1636346198101:asian_sub_2017 <- asian_sub_2017 |>
1636346198110:mutate(Year = 2017)
1636346198130:asian_sub_2018 <- asian_sub_2018 |>
1636346198144:mutate(Year = 2018)
1636346198170:#combining subgroups
1636346198179:asian_subgroups <- bind_rows(asian_sub_2017, asian_sub_2018)
1636346198253:#putting in NAs
1636346198269:asian_subgroups <- asian_subgroups |>
1636346198279:select(-Group) |>
1636346198288:pivot_wider(names_from = Year,
1636346198297:values_from = Percent) |>
1636346198306:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1636346198315:names_to = "Year",
1636346198325:values_to= "Percent")
1636346202332:# Latino sub groups -- 2017
1636346202345:#combine
1636346202356:latinx_sub_2017 <- stringr::str_c(latinx_sub_2017_A,
1636346202367:latinx_sub_2017_B,
1636346202393:latinx_sub_2017_C)
1636346202405:# replace typo
1636346202414:latinx_sub_2017 <- latinx_sub_2017 |>
1636346202423:str_replace(pattern = "DR, Cuban Female 15.7\nPR",
1636346202432:replacement = "DR, Cuban Male 15.7\nPR")
1636346202445:# clean
1636346202455:latinx_sub_2017 <- make_rows(latinx_sub_2017)
1636346202469:latinx_sub_2017 <- clean_table(table = latinx_sub_2017)
1636346202546:latinx_sub_2017 <- fix_latinx_naming(latinx_sub_2017)
1636346202574:#latinx 2018
1636346202594:latinx_sub_2018 <- str_replace_all(string = latinx_sub_2018,
1636346202605:pattern = "\\s:\n{2}|\n{2}",
1636346202616:replacement = " ")
1636346202629:latinx_sub_2018 <- make_rows(latinx_sub_2018)
1636346202644:latinx_sub_2018 <- clean_table_2018(latinx_sub_2018)
1636346202753:latinx_sub_2018 <- fix_latinx_naming(latinx_sub_2018)
1636346202782:#adding in data from text
1636346202792:latinx_sub_2018 <- latinx_sub_2018 |>
1636346202803:add_row(
1636346202813:Group = "Latinx",
1636346202822:Percent = 12.8,
1636346202832:Race_Ethnicity = "Latinx",
1636346202842:Gender = "All"
1636346202853:) |>
1636346202863:add_row(
1636346202874:Group = "Latinx",
1636346202884:Percent = 12.3,
1636346202894:Race_Ethnicity = "Latinx",
1636346202906:Gender = "Men"
1636346202916:) |>
1636346202926:add_row(
1636346202937:Group = "Latinx",
1636346202948:Percent = 13.3,
1636346202958:Race_Ethnicity = "Latinx",
1636346202969:Gender = "Women"
1636346202979:)
1636346203013:latinx_sub_2018 <- latinx_sub_2018 |>
1636346203024:mutate(across(
1636346203035:.cols = c(Gender, Group),
1636346203046:~ str_replace(
1636346203057:string = .,
1636346203068:pattern = "Men",
1636346203078:replacement = "Male"
1636346203091:)
1636346203102:),
1636346203113:across(
1636346203123:.cols = c(Gender, Group),
1636346203133:~ str_replace(
1636346203143:string = .,
1636346203153:pattern = "Women",
1636346203164:replacement = "Female"
1636346203176:)
1636346203198:))
1636346203255:# combining
1636346203268:latinx_sub_2017 <- latinx_sub_2017 |>
1636346203278:mutate(Year = 2017)
1636346203304:latinx_sub_2018 <- latinx_sub_2018 |>
1636346203313:mutate(Year = 2018)
1636346203336:latinx_subgroups <- bind_rows(latinx_sub_2017, latinx_sub_2018)
1636346203363:#missing categories
1636346203373:latinx_subgroups <- latinx_subgroups |>
1636346203383:select(-Group) |>
1636346203392:pivot_wider(names_from = Year, values_from = Percent) |>
1636346203403:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1636346203413:names_to ="Year" ,
1636346203423:values_to="Percent")
1636346212722:# Save data
1636346212733:save(major_groups_long, asian_subgroups, latinx_subgroups, file = 'data/wrangled_data.rda')
1636346212778:readr::write_csv(major_groups_long, file = 'data/wrangled_major_groups_long_data.csv')
1636346212796:readr::write_csv(asian_subgroups, file = 'data/wrangled_asian_subgroups_data.csv')
1636346212811:readr::write_csv(latinx_subgroups, file = 'data/wrangled_latinx_subgroups_data.csv')
1636346225267:temp <- latinx_subgroups |>
1636346225279:filter(Gender == "All") |>
1636346225291:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~ Race_Ethnicity)) |>
1636346225303:mutate(Race_Ethnicity = fct_reorder(Race_Ethnicity, Percent)) |>
1636346225331:mutate(Race_Ethnicity = fct_relevel(Race_Ethnicity, "Latinx"))
1636346225397:ggplot(data = temp, aes(y = Race_Ethnicity, x = Percent, fill = Year)) +
1636346225409:geom_col(position = "dodge") +
1636346225419:theme(axis.title.x = element_blank(),
1636346225428:axis.text.x = element_text(angle = 90, hjust = 1)) +
1636346225438:labs(title = "Youth Disconnection by Latinx Subgroup") +
1636346225449:scale_fill_brewer(palette = "Set1")
1636346225883:temp2 <- asian_subgroups |>
1636346225893:filter(Race_Ethnicity != "All_races" & Gender == "All") |>
1636346225903:mutate(Race_Ethnicity = fct_reorder(Race_Ethnicity, Percent)) |>
1636346225913:mutate(Race_Ethnicity = fct_relevel(Race_Ethnicity, "Asian"))
1636346225973:ggplot(data = temp2, aes(y = Race_Ethnicity, x = Percent, fill = Year)) +
1636346225983:geom_col(position = "dodge") +
1636346225994:theme(axis.title.x = element_blank(),
1636346226006:axis.text.x = element_text(angle = 90, hjust = 1)) +
1636346226016:labs(title = "Youth Disconnection by Asian Subgroup") +
1636346226027:scale_fill_brewer(palette = "Set1")
1636346226388:major_groups_long |>
1636346226398:filter(Race_Ethnicity == 'All_races', Gender == 'All') |>
1636346226407:ggplot(aes(x = Year, y = Percent)) +
1636346226417:geom_point(size = 3) +
1636346226427:geom_smooth(method = 'lm', se = FALSE)
1636346227868:compared_to_overall <- select(major_groups_long,"Race_Ethnicity", "Gender", 'Year', "Percent" )
1636346227893:compared_to_overall <- rbind(compared_to_overall, latinx_subgroups, asian_subgroups)
1636346227928:ggplot(compared_to_overall, aes(Year, Percent, color = Race_Ethnicity))+
1636346227939:geom_line()
1636346228791:ggplot(major_groups_long, aes(Year,Percent, color = Race_Ethnicity)) +
1636346228801:#scale_color_viridis_d()+
1636346228812:geom_smooth(method = 'lm', se = FALSE)+
1636346228823:facet_wrap(~Gender)
1636352646693:geom_smooth(method = 'lm', se = FALSE)
1636352657127:major_groups_long |>
1636352657136:filter(Race_Ethnicity != 'All_races', Gender != 'All') |>
1636352657145:ggplot(aes(x = Year, y = Percent, fill = Gender)) +
1636352657154:facet_wrap(~Race_Ethnicity)
1636352895584:major_groups_long |>
1636352895593:filter(Race_Ethnicity != 'All_races', Gender != 'All') |>
1636352895602:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" | "Latina" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636352895610:ggplot(aes(x = Year, y = Percent, fill = Gender)) +
1636352895618:facet_wrap(~Race_Ethnicity)
1636352916837:major_groups_long |>
1636352916846:filter(Race_Ethnicity != 'All_races', Gender != 'All') |>
1636352916857:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636352916867:ggplot(aes(x = Year, y = Percent, fill = Gender)) +
1636352916875:facet_wrap(~Race_Ethnicity)
1636353012367:major_groups_long |>
1636353012376:filter(Race_Ethnicity != 'All_races', Gender != 'All') |>
1636353012384:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", "Latina" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636353012393:ggplot(aes(x = Year, y = Percent, fill = Gender)) +
1636353012402:facet_wrap(~Race_Ethnicity)
1636353063473:major_groups_long |>
1636353063483:filter(Race_Ethnicity != 'All_races', Gender != 'All') |>
1636353063492:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636353063501:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latina" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636353063509:ggplot(aes(x = Year, y = Percent, fill = Gender)) +
1636353063518:facet_wrap(~Race_Ethnicity)
1636353117354:temp3 <- major_groups_long |>
1636353117363:filter(Race_Ethnicity != 'All_races', Gender != 'All') |>
1636353117372:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636353117381:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latina" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636353123363:View(temp3)
1636353246203:temp3 <- major_groups_long |>
1636353246212:filter(Race_Ethnicity != 'All_races', Gender != 'All') |>
1636353246222:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636353274963:temp3 <- major_groups_long |>
1636353274972:filter(Race_Ethnicity != 'All_races', Gender != 'All') |>
1636353274981:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636353303031:temp3 <- major_groups_long |>
1636353303041:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636353351150:temp3 <- major_groups_long |>
1636353351171:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino Male" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636353405468:temp3 <- major_groups_long |>
1636353405476:mutate(Race_Ethnicity = case_when(Group == "Latino Male" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636353442205:temp3 <- major_groups_long |>
1636353442213:mutate(Race_Ethnicity = case_when(Group == "Latino Male" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636353442221:mutate(Race_Ethnicity = case_when(Group == "Latina Female" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636353522001:temp3 <- major_groups_long |>
1636353522010:mutate(Race_Ethnicity = case_when(Group == "Latino Male" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636353522020:mutate(Race_Ethnicity = case_when(Group == "Latina Female" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636353522029:filter(Race_Ethnicity != 'All_races' | Gender != 'All')
1636353599788:temp3 <- major_groups_long |>
1636353599797:mutate(Race_Ethnicity = case_when(Group == "Latino Male" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636353599806:mutate(Race_Ethnicity = case_when(Group == "Latina Female" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636353600713:temp3 <- temp3 |>
1636353600722:filter(Race_Ethnicity != 'All_races' | Gender != 'All')
1636353627553:temp3 <- temp3 |>
1636353627562:filter(Race_Ethnicity != 'All_races', Gender != 'All')
1636353644266:temp3 <- major_groups_long |>
1636353644275:mutate(Race_Ethnicity = case_when(Group == "Latino Male" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636353644286:mutate(Race_Ethnicity = case_when(Group == "Latina Female" ~ "Latinx", TRUE ~   Race_Ethnicity))|>
1636353644296:filter(Race_Ethnicity != 'All_races', Gender != 'All')
1636353681456:ggplot(data = temp3, aes(x = Year, y = Percent, fill = Gender)) +
1636353681467:facet_wrap(~Race_Ethnicity)
1636353721694:ggplot(data = temp3, aes(x = Year, y = Percent, fill = Gender)) +
1636353721704:geom_line(size = 0.5) +
1636353721714:geom_point(size = 3)+
1636353721722:facet_wrap(~Race_Ethnicity) +
1636353721731:geom_smooth(method = 'lm', se = FALSE)
1636353755930:ggplot(data = temp3, aes(x = Year, y = Percent)) +
1636353755938:geom_line(size = 0.5, fill = Gender) +
1636353755946:geom_point(size = 3, fill = Gender)+
1636353755955:facet_wrap(~Race_Ethnicity)
1636353774162:ggplot(data = temp3, aes(x = Year, y = Percent)) +
1636353774172:geom_line(size = 0.5) +
1636353774183:geom_point(size = 3)+
1636353774192:facet_wrap(~Race_Ethnicity)
1636353786009:ggplot(data = temp3, aes(x = Year, y = Percent, fill = Gender)) +
1636353786018:geom_line(size = 0.5) +
1636353786026:geom_point(size = 3)+
1636353786035:facet_wrap(~Race_Ethnicity)
1636353795904:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636353795913:geom_line(size = 0.5) +
1636353795921:geom_point(size = 3)+
1636353795930:facet_wrap(~Race_Ethnicity)
1636353933633:ggplot(data = temp3, aes(x = as.factor(Year), y = Percent, color = Gender, fill = Gender)) +
1636353933642:geom_line(size = 0.5) +
1636353933651:geom_point(size = 3)+
1636353933659:facet_wrap(~Race_Ethnicity)
1636354035883:ggplot(data = temp3, aes(x = as.factor(Year), y = Percent, color = Gender, fill = Gender)) +
1636354035891:geom_point(size = 3)+
1636354035899:geom_line(size = 0.5) +
1636354035907:facet_wrap(~Race_Ethnicity)
1636354216061:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636354216070:geom_point(size = 3)+
1636354216079:geom_line(size = 0.5) +
1636354216088:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636354216097:facet_wrap(~Race_Ethnicity)
1636354281947:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636354281956:geom_point(size = 3)+
1636354281966:geom_line(size = 0.5) +
1636354281975:facet_wrap(~Race_Ethnicity)+
1636354281984:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636354281993:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1636354758228:library(broom)
1636354838387:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636354838396:geom_point(size = 3)+
1636354838405:geom_line(size = 0.5) +
1636354838414:facet_wrap(~Race_Ethnicity)+
1636354838422:scale_fill_brewer(palette = "Set2")
1636354851616:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636354851625:geom_point(size = 3)+
1636354851633:geom_line(size = 0.5) +
1636354851641:facet_wrap(~Race_Ethnicity)+
1636354851649:scale_fill_brewer(palette = "Set2") +
1636354851656:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636354851664:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1636354899990:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636354900002:geom_point(size = 3)+
1636354900012:geom_line(size = 0.5) +
1636354900021:facet_wrap(~Race_Ethnicity)+
1636354900031:scale_colour_brewer(palette = "Set2") +
1636354900042:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636354900050:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1636354997232:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636354997241:geom_point(size = 3)+
1636354997250:geom_line(size = 0.5) +
1636354997258:facet_wrap(~Race_Ethnicity)+
1636354997281:scale_colour_brewer(palette = "Set2") +
1636354997289:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636354997298:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30)) +
1636354997306:scale_y_continuous(minor_breaks = seq(0, 10, 0.1)) +
1636354997316:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1636355030716:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636355030725:geom_point(size = 3)+
1636355030734:geom_line(size = 0.5) +
1636355030743:facet_wrap(~Race_Ethnicity)+
1636355030755:scale_colour_brewer(palette = "Set2") +
1636355030765:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636355030775:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30)) +
1636355030785:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1636355066331:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636355066340:geom_point(size = 3)+
1636355066348:geom_line(size = 0.5) +
1636355066357:facet_wrap(~Race_Ethnicity)+
1636355066365:scale_colour_brewer(palette = "Set2") +
1636355066373:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636355066381:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
1636355066389:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1636355082926:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636355082938:geom_point(size = 3)+
1636355082950:geom_line(size = 0.2) +
1636355082958:facet_wrap(~Race_Ethnicity)+
1636355082969:scale_colour_brewer(palette = "Set2") +
1636355082980:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636355082988:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
1636355083000:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1636355091832:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636355091842:geom_point(size = 1)+
1636355091851:geom_line(size = 0.5) +
1636355091861:facet_wrap(~Race_Ethnicity)+
1636355091870:scale_colour_brewer(palette = "Set2") +
1636355091879:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636355091888:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
1636355091897:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1636355098670:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636355098680:geom_point(size = 1.5)+
1636355098691:geom_line(size = 0.5) +
1636355098699:facet_wrap(~Race_Ethnicity)+
1636355098709:scale_colour_brewer(palette = "Set2") +
1636355098717:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636355098726:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
1636355098734:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1636355108025:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636355108034:geom_point(size = 2)+
1636355108044:geom_line(size = 0.5) +
1636355108052:facet_wrap(~Race_Ethnicity)+
1636355108061:scale_colour_brewer(palette = "Set2") +
1636355108070:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636355108078:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
1636355108087:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
1636355253608:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636355253619:geom_point(size = 2)+
1636355253628:geom_line(size = 0.5) +
1636355253637:facet_wrap(~Race_Ethnicity)+
1636355253648:scale_colour_brewer(palette = "Set2") +
1636355253657:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636355253667:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
1636355253678:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636355253687:labs(title = "Percent Disconnect of Major Racial And Ethnic Groups by Gender",
1636355253696:caption = "Data Source: Measure America",
1636355253705:x = "Year")
1636356036950:major_groups_long |>
1636356036961:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636356036970:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636356036979:geom_line(size = 0.5) +
1636356036988:geom_point(size = 3) +
1636356036997:scale_colour_brewer(palette = "Set2") +
1636356037006:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636356037016:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
1636356037025:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636356037034:labs(title = "Percent Disconnect of all Major Races and Ethnicities in the United States by Gender",
1636356037043:caption = "Data Source: Measure America",
1636356037052:x = "Year")
1636356181077:major_groups_long |>
1636356181086:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636356181095:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636356181104:geom_line(size = 0.5) +
1636356181113:geom_point(size = 3) +
1636356181122:scale_colour_brewer(palette = "Set2") +
1636356181131:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636356181140:scale_y_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)) +
1636356181149:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636356181157:labs(title = "Percent Disconnect of all Major Races and Ethnicities in the United States by Gender",
1636356181166:caption = "Data Source: Measure America",
1636356181175:x = "Year")
1636356298623:major_groups_long |>
1636356298634:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636356298643:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636356298652:geom_line(size = 0.5) +
1636356298661:geom_point(size = 3) +
1636356298670:scale_colour_brewer(palette = "Set2") +
1636356298682:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636356298697:scale_y_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)) +
1636356298711:scale_y_continuous(minor_breaks = seq(0, 1, 0.1))+
1636356298723:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636356298734:labs(title = "Percent Disconnect of all Major Races and Ethnicities in the United States by Gender",
1636356298743:caption = "Data Source: Measure America",
1636356298755:x = "Year")
1636356318714:major_groups_long |>
1636356318723:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636356318732:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636356318741:geom_line(size = 0.5) +
1636356318750:geom_point(size = 3) +
1636356318758:scale_colour_brewer(palette = "Set2") +
1636356318766:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636356318774:scale_y_continuous(breaks = c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)) +
1636356318783:scale_y_continuous(minor_breaks = seq(0, 0.1, 0.1))+
1636356318791:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636356318800:labs(title = "Percent Disconnect of all Major Races and Ethnicities in the United States by Gender",
1636356318810:caption = "Data Source: Measure America",
1636356318818:x = "Year")
1636356344803:major_groups_long |>
1636356344812:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636356344822:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636356344831:geom_line(size = 0.5) +
1636356344840:geom_point(size = 3) +
1636356344849:scale_colour_brewer(palette = "Set2") +
1636356344858:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636356344866:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636356344875:labs(title = "Percent Disconnect of all Major Races and Ethnicities in the United States by Gender",
1636356344883:caption = "Data Source: Measure America",
1636356344892:x = "Year")
1636356358158:temp3 <- major_groups_long |>
1636356358169:mutate(Race_Ethnicity = case_when(Group == "Latino Male" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636356358180:mutate(Race_Ethnicity = case_when(Group == "Latina Female" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636356358191:filter(Race_Ethnicity != 'All_races', Gender != 'All')
1636356358259:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636356358270:geom_point(size = 2)+
1636356358280:geom_line(size = 0.5) +
1636356358292:facet_wrap(~Race_Ethnicity)+
1636356358302:scale_colour_brewer(palette = "Set2") +
1636356358335:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636356358346:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
1636356358356:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636356358367:labs(title = "Percent Disconnect of Major Racial And Ethnic Groups by Gender",
1636356358377:caption = "Data Source: Measure America",
1636356358387:x = "Year")
1636356426698:major_groups_long |>
1636356426707:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636356426716:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636356426724:geom_line(size = 0.5) +
1636356426732:geom_point(size = 3) +
1636356426739:scale_colour_brewer(palette = "Set2") +
1636356426746:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636356426754:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636356426763:labs(title = "Percent Disconnect of all Major Races and Ethnicities in the United States by Gender",
1636356426771:caption = "Data Source: Measure America",
1636356426781:x = "Year") +
1636356426789:theme(plot.title = element_text( hjust = 0.5))
1636356440376:major_groups_long |>
1636356440386:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636356440395:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636356440405:geom_line(size = 0.5) +
1636356440413:geom_point(size = 3) +
1636356440424:scale_colour_brewer(palette = "Set2") +
1636356440434:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636356440445:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636356440454:labs(title = "Percent Disconnect of all Major Races and
1636356440463:Ethnicities in the United States by Gender",
1636356440472:caption = "Data Source: Measure America",
1636356440481:x = "Year") +
1636356440491:theme(plot.title = element_text( hjust = 0.5))
1636356450729:major_groups_long |>
1636356450738:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636356450749:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636356450758:geom_line(size = 0.5) +
1636356450767:geom_point(size = 3) +
1636356450776:scale_colour_brewer(palette = "Set2") +
1636356450784:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636356450792:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636356450800:labs(title = "Percent Disconnect of all Major Races and
1636356450808:Ethnicities in the United States by Gender",
1636356450816:caption = "Data Source: Measure America",
1636356450825:x = "Year") +
1636356450833:theme(plot.title = element_text( hjust = 0.5))
1636356559347:major_groups_long |>
1636356559356:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636356559364:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636356559373:geom_line(size = 0.5) +
1636356559382:geom_point(size = 3) +
1636356559391:scale_colour_brewer(palette = "Set2") +
1636356559400:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636356559408:scale_y_continuous(minor_breaks = seq(0, 10, 0.1))+
1636356559416:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636356559424:labs(title = "Percent Disconnect of all Major Races and
1636356559432:Ethnicities in the United States by Gender",
1636356559441:caption = "Data Source: Measure America",
1636356559449:x = "Year") +
1636356559457:theme(plot.title = element_text( hjust = 0.5))
1636356633113:major_groups_long |>
1636356633122:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636356633130:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636356633139:geom_line(size = 0.5) +
1636356633148:geom_point(size = 3) +
1636356633157:scale_colour_brewer(palette = "Set2") +
1636356633166:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636356633175:scale_y_continuous()+
1636356633184:scale_y_continuous(minor_breaks = seq(0, 10, 0.1))+
1636356633192:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636356633202:labs(title = "Percent Disconnect of all Major Races and
1636356633211:Ethnicities in the United States by Gender",
1636356633219:caption = "Data Source: Measure America",
1636356633227:x = "Year") +
1636356633235:theme(plot.title = element_text( hjust = 0.5))
1636356791198:major_groups_long |>
1636356791208:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636356791217:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636356791225:geom_line(size = 0.5) +
1636356791235:geom_point(size = 3) +
1636356791244:scale_colour_brewer(palette = "Set2") +
1636356791252:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636356791261:scale_y_continuous(breaks = c(0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 ,15, 20))+
1636356791269:scale_y_continuous(minor_breaks = seq(0, 10, 0.1))+
1636356791277:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636356791285:labs(title = "Percent Disconnect of all Major Races and
1636356791296:Ethnicities in the United States by Gender",
1636356791305:caption = "Data Source: Measure America",
1636356791314:x = "Year") +
1636356791323:theme(plot.title = element_text( hjust = 0.5))
1636357721774:temp3 <- major_groups_long |>
1636357721786:mutate(Race_Ethnicity = case_when(Group == "Latino Male" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636357721797:mutate(Race_Ethnicity = case_when(Group == "Latina Female" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636357721808:filter(Race_Ethnicity != 'All_races', Gender != 'All')
1636357721877:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636357721887:geom_point(size = 2)+
1636357721897:geom_line(size = 0.5) +
1636357721908:facet_wrap(~Race_Ethnicity)+
1636357721917:scale_colour_brewer(palette = "Set2") +
1636357721927:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636357721937:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
1636357721946:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636357721955:theme(panel.grid.major.x = element_blank(),
1636357721965:panel.grid.minor.x = element_blank())
1636357722491:labs(title = "Percent Disconnect of Major Racial And Ethnic Groups by Gender",
1636357722501:caption = "Data Source: Measure America",
1636357722510:x = "Year")
1636357756328:temp3 <- major_groups_long |>
1636357756340:mutate(Race_Ethnicity = case_when(Group == "Latino Male" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636357756351:mutate(Race_Ethnicity = case_when(Group == "Latina Female" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636357756362:filter(Race_Ethnicity != 'All_races', Gender != 'All')
1636357756428:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636357756441:geom_point(size = 2)+
1636357756452:geom_line(size = 0.5) +
1636357756462:facet_wrap(~Race_Ethnicity)+
1636357756474:scale_colour_brewer(palette = "Set2") +
1636357756485:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636357756499:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
1636357756509:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636357756520:theme(panel.grid.minor.x = element_blank())+
1636357756532:labs(title = "Percent Disconnect of Major Racial And Ethnic Groups by Gender",
1636357756542:caption = "Data Source: Measure America",
1636357756552:x = "Year")
1636357781593:major_groups_long |>
1636357781604:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636357781615:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636357781627:geom_line(size = 0.5) +
1636357781658:geom_point(size = 3) +
1636357781669:scale_colour_brewer(palette = "Set2") +
1636357781679:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636357781690:scale_y_continuous(breaks = c(0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 ,15, 20))+
1636357781700:scale_y_continuous(minor_breaks = seq(0, 10, 0.1))+
1636357781710:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636357781721:theme(panel.grid.minor.x = element_blank())+
1636357781732:labs(title = "Percent Disconnect of all Major Races and
1636357781743:Ethnicities in the United States by Gender",
1636357781755:caption = "Data Source: Measure America",
1636357781766:x = "Year") +
1636357781777:theme(plot.title = element_text( hjust = 0.5))
1636357881109:major_groups_long |>
1636357881119:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636357881128:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636357881137:geom_line(size = 0.5) +
1636357881146:geom_point(size = 3) +
1636357881155:scale_colour_brewer(palette = "Set2") +
1636357881164:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636357881173:scale_y_continuous(breaks=(seq(0, 10, 0.1)), limits = c(0, 20))
1636357892172:major_groups_long |>
1636357892180:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636357892189:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636357892198:geom_line(size = 0.5) +
1636357892207:geom_point(size = 3) +
1636357892215:scale_colour_brewer(palette = "Set2") +
1636357892224:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636357892233:scale_y_continuous(breaks=(seq(0, 10, 0.1)), limits = c(0, 20))+
1636357892242:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636357892251:theme(panel.grid.minor.x = element_blank())+
1636357892260:labs(title = "Percent Disconnect of all Major Races and
1636357892269:Ethnicities in the United States by Gender",
1636357892278:caption = "Data Source: Measure America",
1636357892287:x = "Year") +
1636357892296:theme(plot.title = element_text( hjust = 0.5))
1636357911774:major_groups_long |>
1636357911782:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636357911790:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636357911797:geom_line(size = 0.5) +
1636357911805:geom_point(size = 3) +
1636357911814:scale_colour_brewer(palette = "Set2") +
1636357911822:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636357911831:scale_y_continuous(breaks=(seq(0, 0.1, 10)), limits = c(0, 20))+
1636357911840:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636357911847:theme(panel.grid.minor.x = element_blank())+
1636357911855:labs(title = "Percent Disconnect of all Major Races and
1636357911863:Ethnicities in the United States by Gender",
1636357911870:caption = "Data Source: Measure America",
1636357911879:x = "Year") +
1636357911886:theme(plot.title = element_text( hjust = 0.5))
1636357929585:major_groups_long |>
1636357929593:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636357929601:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636357929613:geom_line(size = 0.5) +
1636357929622:geom_point(size = 3) +
1636357929631:scale_colour_brewer(palette = "Set2") +
1636357929640:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636357929648:scale_y_continuous(breaks=(seq(0, 1, 10)), limits = c(0, 20))+
1636357929656:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636357929664:theme(panel.grid.minor.x = element_blank())+
1636357929672:labs(title = "Percent Disconnect of all Major Races and
1636357929679:Ethnicities in the United States by Gender",
1636357929687:caption = "Data Source: Measure America",
1636357929695:x = "Year") +
1636357929703:theme(plot.title = element_text( hjust = 0.5))
1636357985655:major_groups_long |>
1636357985664:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636357985676:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636357985686:geom_line(size = 0.5) +
1636357985695:geom_point(size = 3) +
1636357985707:scale_colour_brewer(palette = "Set2") +
1636357985717:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636357985726:scale_y_continuous(breaks = seq(0, 20, by = 1))+
1636357985738:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636357985747:theme(panel.grid.minor.x = element_blank())+
1636357985757:labs(title = "Percent Disconnect of all Major Races and
1636357985767:Ethnicities in the United States by Gender",
1636357985777:caption = "Data Source: Measure America",
1636357985786:x = "Year") +
1636357985797:theme(plot.title = element_text( hjust = 0.5))
1636358003684:major_groups_long |>
1636358003693:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636358003702:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636358003710:geom_line(size = 0.5) +
1636358003718:geom_point(size = 3) +
1636358003726:scale_colour_brewer(palette = "Set2") +
1636358003734:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636358003741:scale_y_continuous(breaks = seq(0, 20, by = 0.1))+
1636358003749:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636358003756:theme(panel.grid.minor.x = element_blank())+
1636358003764:labs(title = "Percent Disconnect of all Major Races and
1636358003772:Ethnicities in the United States by Gender",
1636358003779:caption = "Data Source: Measure America",
1636358003787:x = "Year") +
1636358003794:theme(plot.title = element_text( hjust = 0.5))
1636358098612:major_groups_long |>
1636358098621:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636358098629:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636358098636:geom_line(size = 0.5) +
1636358098644:geom_point(size = 3) +
1636358098651:scale_colour_brewer(palette = "Set2") +
1636358098659:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636358098667:scale_y_continuous(labels=Percent) +
1636358098675:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636358098682:theme(panel.grid.minor.x = element_blank())+
1636358098690:labs(title = "Percent Disconnect of all Major Races and
1636358098697:Ethnicities in the United States by Gender",
1636358098704:caption = "Data Source: Measure America",
1636358098712:x = "Year") +
1636358098719:theme(plot.title = element_text( hjust = 0.5))
1636358237667:major_groups_long |>
1636358237676:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636358237684:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636358237692:geom_line(size = 0.5) +
1636358237700:geom_point(size = 3) +
1636358237709:scale_colour_brewer(palette = "Set2") +
1636358237717:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636358237726:scale_y_continuous(minor_breaks = seq(0, 10, 0.1))+
1636358237735:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636358237744:theme(panel.grid.minor.x = element_blank())+
1636358237753:labs(title = "Percent Disconnect of all Major Races and
1636358237762:Ethnicities in the United States by Gender",
1636358237770:caption = "Data Source: Measure America",
1636358237778:x = "Year") +
1636358237786:theme(plot.title = element_text( hjust = 0.5))
1636408237661:knitr::opts_chunk$set(warning = FALSE, message = FALSE)
1636408237811:library(OCSdata)
1636408238172:library(tidyverse)
1636408240812:library(pdftools)
1636408240962:library(tesseract)
1636408241267:library(magick)
1636408241328:library(broom)
1636408244791:#reading in data for major_groups
1636408244810:major_racial_ethnic_groups <-magick::image_read("data/raw/Major_ethnic_groups_screenshot.png")
1636408244916:magick::image_info(major_racial_ethnic_groups)
1636408245339:major_groups <- magick::image_ocr(major_racial_ethnic_groups)
1636408247727:# asian sub groups 2017 & 2018
1636408247752:asian_sub_2017 <- image_read("data/raw/asian_subgroups_2017.png")
1636408247928:asian_sub_2017_A <- image_read("data/raw/asian_sub_2017_A.png")
1636408248008:asian_sub_2017_B <- image_read("data/raw/asian_sub_2017_B.png")
1636408248066:asian_sub_2017_C <- image_read("data/raw/asian_sub_2017_C.png")
1636408248111:asian_sub_2017 <- image_ocr(asian_sub_2017)
1636408249248:asian_sub_2017_A <- image_ocr(asian_sub_2017_A)
1636408249962:asian_sub_2017_B <- image_ocr(asian_sub_2017_B)
1636408250197:asian_sub_2017_C <- image_ocr(asian_sub_2017_C)
1636408250388:asian_sub_2018_A <- image_read("data/raw/asian_sub_2018_A.png")
1636408250440:asian_sub_2018_A <- image_ocr(asian_sub_2018_A)
1636408250846:asian_sub_2018_B <- image_read("data/raw/asian_sub_2018_B.png")
1636408250919:asian_sub_2018_B <- image_ocr(asian_sub_2018_B)
1636408251383:# latinx sub groups 2017 & 2018
1636408251414:latinx_imageA <- image_read("data/raw/latinx_sub_2017_A.png")
1636408251451:latinx_imageB <- image_read("data/raw/latinx_sub_2017_B.png")
1636408251548:latinx_imageC <- image_read("data/raw/latinx_sub_2017_C.png")
1636408251638:latinx_sub_2017_A <- image_ocr(latinx_imageA)
1636408251859:latinx_sub_2017_B <- image_ocr(latinx_imageB)
1636408252761:latinx_sub_2017_C <- image_ocr(latinx_imageC)
1636408253222:latinx_sub_2018 <- image_read("data/raw/latinx_subgroups_2018.png")
1636408253297:latinx_sub_2018 <- image_ocr(latinx_sub_2018)
1636408253787:latinx_sub_2018
1636408259677:# save the data
1636408259781:save(
1636408259816:major_groups,
1636408259881:asian_sub_2017,
1636408259969:asian_sub_2017_A,
1636408260028:asian_sub_2017_B,
1636408260098:asian_sub_2017_C,
1636408260173:latinx_sub_2017_A,
1636408260244:latinx_sub_2017_B,
1636408260330:latinx_sub_2017_C,
1636408260426:asian_sub_2018_A,
1636408260517:asian_sub_2018_B,
1636408260625:latinx_sub_2018,
1636408260654:file = "data/raw/imported_data.rda"
1636408260683:)
1636408263920:make_rows <- function(text){
1636408263966:text |>
1636408264040:str_split("\n") |>
1636408264068:unlist() |>
1636408264091:as_tibble()
1636408264155:}
1636408267420:clean_table_mjr <- function(table){
1636408267492:table|>
1636408267634:separate(col = value,
1636408267693:into = c("Group", "Years"),
1636408267769:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])")|>
1636408267827:mutate(Group = str_to_title(Group))|>
1636408267865:separate(col = Years,
1636408267947:into = c("2008", "2010", "2012", "2014", "2016", "2017"),
1636408268009:sep = " ")|>
1636408268039:drop_na()|>
1636408268081:mutate(
1636408268131:across(.cols = -Group, ~ str_remove(string = ., pattern = "\\.")),  # remove decimal points
1636408268192:across(.cols = -Group, as.numeric),  # convert to numeric
1636408268219:across(.cols = -Group, ~ . * 0.1),   # get our decimal point back
1636408268289:Race_Ethnicity = recode(Group, "United States" = "All_races",
1636408268359:"Female" = "All_races",
1636408268435:"Male" = "All_races"),
1636408268524:Race_Ethnicity = str_remove(string = Race_Ethnicity,
1636408268575:pattern = "Female|Male"))
1636408268665:}
1636408271289:clean_table <- function(table){
1636408271503:table |>
1636408271530:separate(col = value,
1636408271626:into = c("Group", "Percentage"),
1636408271722:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])") |>
1636408271777:drop_na() |>
1636408271831:mutate(Group = str_to_title(Group)) |>
1636408271894:mutate(Percentage = str_remove(string = Percentage,
1636408271952:pattern = "\\.")) |>
1636408271976:separate(Percentage, c("Percent"), sep = " ") |>
1636408272005:mutate(Percent = as.numeric(Percent)) |>
1636408272081:mutate(Percent = Percent * 0.1) |>
1636408272126:mutate(Race_Ethnicity = recode(Group,
1636408272171:"United States" = "All_races",
1636408272190:"Female" = "All_races",
1636408272261:"Male" = "All_races")) |>
1636408272297:mutate(Race_Ethnicity = str_remove(string = Race_Ethnicity,
1636408272359:pattern = " Female| Male")) |>
1636408272412:mutate(Gender = str_extract(string = Group,
1636408272455:pattern ="Female|Male")) |>
1636408272488:mutate(Gender = replace_na(Gender, replace = "All"))
1636408272551:}
1636408275073:clean_table_2018 <- function(table){
1636408275175:table |>
1636408275222:separate(col = value,
1636408275317:into = c("Group", "Percent"),
1636408275348:sep =  "(?<=[[:alpha:]])\\s:\\s|\\s(?=[0-9])") |>
1636408275378:mutate(Group = str_remove(string = Group,
1636408275394:pattern = ":")) |>
1636408275414:drop_na() |>
1636408275440:mutate(Group = str_to_title(string = Group)) |>
1636408275473:mutate(Percent = str_remove(string = Percent,
1636408275534:pattern = "\\.")) |>
1636408275592:mutate(Percent = as.numeric(Percent)) |>
1636408275632:mutate(Percent = Percent * 0.1) |>
1636408275680:mutate(Race_Ethnicity = str_replace(string = Group,
1636408275779:pattern = "Men|Women",
1636408275878:replacement = "missing")) |>
1636408275942:mutate(Race_Ethnicity = na_if(Race_Ethnicity, "missing")) |>
1636408276026:fill(Race_Ethnicity, .direction = "down") |>
1636408276112:mutate(Gender = str_extract(string = Group,
1636408276156:pattern = "Men|Women")) |>
1636408276194:mutate(Gender = replace_na(Gender, replace = "All"))
1636408276226:}
1636408278731:fix_latinx_naming <- function(table) {
1636408278788:table |>
1636408278890:mutate(
1636408278949:Group = str_replace(
1636408278995:string = Group,
1636408279027:pattern = "Pr, Dr, Cuban",
1636408279057:replacement = "Puerto Rican, Dominican, Cuban"
1636408279093:),
1636408279116:Race_Ethnicity = str_replace(
1636408279136:string = Race_Ethnicity,
1636408279168:pattern = "Pr, Dr, Cuban",
1636408279201:replacement = "Puerto Rican, Dominican, Cuban"
1636408279227:)
1636408279262:)
1636408279289:}
1636408281771:# major_groups
1636408281914:major_groups <- make_rows(major_groups)
1636408282011:major_groups <- clean_table_mjr(major_groups)
1636408282213:major_groups <- major_groups |>
1636408282238:mutate(Gender = str_extract(string = Group,
1636408282262:pattern = "Female|Male")) |>
1636408282284:mutate(Gender = replace_na(Gender, replace = "All"))
1636408282365:major_groups_long <- major_groups |>
1636408282387:pivot_longer(
1636408282409:cols = contains("20"),
1636408282434:names_to = "Year",
1636408282455:values_to = "Percent",
1636408282474:names_prefix = "Perc_"
1636408282494:) |>
1636408282511:mutate(Year = as.numeric(Year))
1636408286481:# Asian sub groups -- 2017
1636408286619:asian_sub_2017 <- make_rows(asian_sub_2017)
1636408286728:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1636408286763:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1636408286825:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1636408286903:# bind
1636408286952:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1636408286990:asian_sub_2017_B,
1636408287027:asian_sub_2017_C)
1636408287098:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1636408287243:# Asian sub groups 2018
1636408287267:asian_sub_2018 <- str_c(asian_sub_2018_A, asian_sub_2018_B)
1636408287301:asian_sub_2018 <- make_rows(asian_sub_2018)
1636408287330:asian_sub_2018 <- clean_table_2018(asian_sub_2018)
1636408287482:# combine subgroups
1636408287509:asian_sub_2018 <- asian_sub_2018 |>
1636408287534:add_row(Group = "Asian", Percent = 6.2,
1636408287557:Race_Ethnicity = "Asian", Gender = "All") |>
1636408287580:add_row(Group = "Asian", Percent = 6.4,
1636408287611:Race_Ethnicity = "Asian", Gender = "Men") |>
1636408287657:add_row(Group = "Asian", Percent = 6.1,
1636408287697:Race_Ethnicity = "Asian", Gender = "Women")
1636408287882:#correcting gender naming convention
1636408287933:asian_sub_2018 <- asian_sub_2018 |>
1636408287958:mutate(across(.cols = c(Gender, Group),
1636408287982:~ str_replace(string = .,
1636408288004:pattern = "Men",
1636408288023:replacement = "Male")),
1636408288047:across(.cols = c(Gender, Group),
1636408288073:~ str_replace(string = .,
1636408288099:pattern = "Women",
1636408288127:replacement = "Female")))
1636408288209:#defining year for asian 2017 & 2018
1636408288239:asian_sub_2017 <- asian_sub_2017 |>
1636408288274:mutate(Year = 2017)
1636408288335:asian_sub_2018 <- asian_sub_2018 |>
1636408288368:mutate(Year = 2018)
1636408288483:#combining subgroups
1636408288542:asian_subgroups <- bind_rows(asian_sub_2017, asian_sub_2018)
1636408288692:#putting in NAs
1636408288804:asian_subgroups <- asian_subgroups |>
1636408288912:select(-Group) |>
1636408288957:pivot_wider(names_from = Year,
1636408289003:values_from = Percent) |>
1636408289070:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1636408289098:names_to = "Year",
1636408289133:values_to= "Percent")
1636408578464:# Asian sub groups -- 2017
1636408578513:asian_sub_2017 <- make_rows(asian_sub_2017)
1636408578570:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1636408578621:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1636408578690:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1636408578751:# bind
1636408578771:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1636408578799:asian_sub_2017_B,
1636408578809:asian_sub_2017_C)
1636408578848:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1636408579069:# Asian sub groups 2018
1636408579088:asian_sub_2018 <- str_c(asian_sub_2018_A, asian_sub_2018_B)
1636408579108:asian_sub_2018 <- make_rows(asian_sub_2018)
1636408579136:asian_sub_2018 <- clean_table_2018(asian_sub_2018)
1636408579269:# combine subgroups
1636408579293:asian_sub_2018 <- asian_sub_2018 |>
1636408579317:add_row(Group = "Asian", Percent = 6.2,
1636408579340:Race_Ethnicity = "Asian", Gender = "All") |>
1636408579357:add_row(Group = "Asian", Percent = 6.4,
1636408579370:Race_Ethnicity = "Asian", Gender = "Men") |>
1636408579386:add_row(Group = "Asian", Percent = 6.1,
1636408579401:Race_Ethnicity = "Asian", Gender = "Women")
1636408579472:#correcting gender naming convention
1636408579490:asian_sub_2018 <- asian_sub_2018 |>
1636408579503:mutate(across(.cols = c(Gender, Group),
1636408579515:~ str_replace(string = .,
1636408579531:pattern = "Men",
1636408579548:replacement = "Male")),
1636408579561:across(.cols = c(Gender, Group),
1636408579574:~ str_replace(string = .,
1636408579589:pattern = "Women",
1636408579606:replacement = "Female")))
1636408579671:#defining year for asian 2017 & 2018
1636408579694:asian_sub_2017 <- asian_sub_2017 |>
1636408579711:mutate(Year = 2017)
1636408579751:asian_sub_2018 <- asian_sub_2018 |>
1636408579771:mutate(Year = 2018)
1636408579818:#combining subgroups
1636408579834:asian_subgroups <- bind_rows(asian_sub_2017, asian_sub_2018)
1636408579870:#putting in NAs
1636408579905:asian_subgroups <- asian_subgroups |>
1636408579928:select(-Group) |>
1636408579947:pivot_wider(names_from = Year,
1636408579970:values_from = Percent) |>
1636408579992:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1636408580011:names_to = "Year",
1636408580029:values_to= "Percent")
1636408588410:# Latino sub groups -- 2017
1636408588450:#combine
1636408588484:latinx_sub_2017 <- stringr::str_c(latinx_sub_2017_A,
1636408588501:latinx_sub_2017_B,
1636408588514:latinx_sub_2017_C)
1636408588625:# replace typo
1636408588676:latinx_sub_2017 <- latinx_sub_2017 |>
1636408588721:str_replace(pattern = "DR, Cuban Female 15.7\nPR",
1636408588747:replacement = "DR, Cuban Male 15.7\nPR")
1636408588770:# clean
1636408588789:latinx_sub_2017 <- make_rows(latinx_sub_2017)
1636408588817:latinx_sub_2017 <- clean_table(table = latinx_sub_2017)
1636408588905:latinx_sub_2017 <- fix_latinx_naming(latinx_sub_2017)
1636408588941:#latinx 2018
1636408588968:latinx_sub_2018 <- str_replace_all(string = latinx_sub_2018,
1636408588986:pattern = "\\s:\n{2}|\n{2}",
1636408589002:replacement = " ")
1636408589020:latinx_sub_2018 <- make_rows(latinx_sub_2018)
1636408589040:latinx_sub_2018 <- clean_table_2018(latinx_sub_2018)
1636408589186:latinx_sub_2018 <- fix_latinx_naming(latinx_sub_2018)
1636408589232:#adding in data from text
1636408589249:latinx_sub_2018 <- latinx_sub_2018 |>
1636408589269:add_row(
1636408589285:Group = "Latinx",
1636408589302:Percent = 12.8,
1636408589341:Race_Ethnicity = "Latinx",
1636408589385:Gender = "All"
1636408589404:) |>
1636408589416:add_row(
1636408589440:Group = "Latinx",
1636408589458:Percent = 12.3,
1636408589474:Race_Ethnicity = "Latinx",
1636408589494:Gender = "Men"
1636408589509:) |>
1636408589521:add_row(
1636408589537:Group = "Latinx",
1636408589555:Percent = 13.3,
1636408589570:Race_Ethnicity = "Latinx",
1636408589587:Gender = "Women"
1636408589601:)
1636408589651:latinx_sub_2018 <- latinx_sub_2018 |>
1636408589668:mutate(across(
1636408589685:.cols = c(Gender, Group),
1636408589713:~ str_replace(
1636408589737:string = .,
1636408589754:pattern = "Men",
1636408589770:replacement = "Male"
1636408589788:)
1636408589805:),
1636408589829:across(
1636408589846:.cols = c(Gender, Group),
1636408589866:~ str_replace(
1636408589882:string = .,
1636408589901:pattern = "Women",
1636408589920:replacement = "Female"
1636408589943:)
1636408589961:))
1636408590016:# combining
1636408590034:latinx_sub_2017 <- latinx_sub_2017 |>
1636408590056:mutate(Year = 2017)
1636408590124:latinx_sub_2018 <- latinx_sub_2018 |>
1636408590148:mutate(Year = 2018)
1636408590178:latinx_subgroups <- bind_rows(latinx_sub_2017, latinx_sub_2018)
1636408590227:#missing categories
1636408590258:latinx_subgroups <- latinx_subgroups |>
1636408590280:select(-Group) |>
1636408590300:pivot_wider(names_from = Year, values_from = Percent) |>
1636408590327:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1636408590349:names_to ="Year" ,
1636408590370:values_to="Percent")
1636408595199:# Save data
1636408595246:save(major_groups_long, asian_subgroups, latinx_subgroups, file = 'data/wrangled_data.rda')
1636408595324:readr::write_csv(major_groups_long, file = 'data/wrangled_major_groups_long_data.csv')
1636408595355:readr::write_csv(asian_subgroups, file = 'data/wrangled_asian_subgroups_data.csv')
1636408595378:readr::write_csv(latinx_subgroups, file = 'data/wrangled_latinx_subgroups_data.csv')
1636408615159:temp3 <- major_groups_long |>
1636408615178:mutate(Race_Ethnicity = case_when(Group == "Latino Male" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636408615219:mutate(Race_Ethnicity = case_when(Group == "Latina Female" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636408615237:filter(Race_Ethnicity != 'All_races', Gender != 'All')
1636408615345:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636408615360:geom_point(size = 2)+
1636408615378:geom_line(size = 0.5) +
1636408615404:facet_wrap(~Race_Ethnicity)+
1636408615419:scale_colour_brewer(palette = "Set2") +
1636408615433:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636408615450:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
1636408615464:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636408615475:theme(panel.grid.minor.x = element_blank())+
1636408615490:labs(title = "Percent Disconnect of Major Racial And Ethnic Groups by Gender",
1636408615503:caption = "Data Source: Measure America",
1636408615516:x = "Year")
1636408646060:major_groups_long |>
1636408646115:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636408646132:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636408646154:geom_line(size = 0.5) +
1636408646191:geom_point(size = 3) +
1636408646206:scale_colour_brewer(palette = "Set2") +
1636408646221:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636408646236:scale_y_continuous(minor_breaks = seq(0, 10, 0.1))+
1636408646253:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636408646266:theme(panel.grid.minor.x = element_blank())+
1636408646290:labs(title = "Percent Disconnect of all Major Races and
1636408646308:Ethnicities in the United States by Gender",
1636408646324:caption = "Data Source: Measure America",
1636408646339:x = "Year") +
1636408646352:theme(plot.title = element_text( hjust = 0.5))
1636409939369:temp <- latinx_subgroups |>
1636409939417:filter(Gender == "All") |>
1636409939430:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~ Race_Ethnicity)) |>
1636409939443:mutate(Race_Ethnicity = fct_reorder(Race_Ethnicity, Percent)) |>
1636409939457:mutate(Race_Ethnicity = fct_relevel(Race_Ethnicity, "Latinx"))
1636409939560:ggplot(data = temp, aes(y = Race_Ethnicity, x = Percent, fill = Year)) +
1636409939569:geom_col(position = "dodge") +
1636409939578:theme(axis.title.x = element_blank(),
1636409939587:axis.text.x = element_text(angle = 90, hjust = 1)) +
1636409939598:labs(title = "Youth Disconnection by Latinx Subgroup") +
1636409939609:scale_fill_brewer(palette = "Set1")
1636409940012:temp2 <- asian_subgroups |>
1636409940021:filter(Race_Ethnicity != "All_races" & Gender == "All") |>
1636409940030:mutate(Race_Ethnicity = fct_reorder(Race_Ethnicity, Percent)) |>
1636409940041:mutate(Race_Ethnicity = fct_relevel(Race_Ethnicity, "Asian"))
1636409940084:ggplot(data = temp2, aes(y = Race_Ethnicity, x = Percent, fill = Year)) +
1636409940091:geom_col(position = "dodge") +
1636409940099:theme(axis.title.x = element_blank(),
1636409940107:axis.text.x = element_text(angle = 90, hjust = 1)) +
1636409940117:labs(title = "Youth Disconnection by Asian Subgroup") +
1636409940125:scale_fill_brewer(palette = "Set1")
1636409940745:major_groups_long |>
1636409940758:filter(Race_Ethnicity == 'All_races', Gender == 'All') |>
1636409940770:ggplot(aes(x = Year, y = Percent)) +
1636409940783:geom_point(size = 3) +
1636409940799:geom_smooth(method = 'lm', se = FALSE)
1636409943031:compared_to_overall <- select(major_groups_long,"Race_Ethnicity", "Gender", 'Year', "Percent" )
1636409943092:compared_to_overall <- rbind(compared_to_overall, latinx_subgroups, asian_subgroups)
1636409943152:compared_to_overall|>
1636409943167:filter(grepl("2017|2018",Year))|>
1636409943179:ggplot(aes(Year, Percent, group = Race_Ethnicity, color = Race_Ethnicity))+
1636409943191:geom_smooth (method = 'lm', se = FALSE)
1636409943741:ggplot(major_groups_long, aes(Year,Percent, color = Race_Ethnicity)) +
1636409943761:#scale_color_viridis_d()+
1636409943782:geom_smooth(method = 'lm', se = FALSE)+
1636409943796:facet_wrap(~Gender)
1636409998992:# Asian sub groups -- 2017
1636409999002:asian_sub_2017 <- make_rows(asian_sub_2017)
1636409999041:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1636409999056:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1636409999070:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1636409999090:# bind
1636409999101:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1636409999112:asian_sub_2017_B,
1636409999122:asian_sub_2017_C)
1636409999149:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1636409999278:# Asian sub groups 2018
1636409999289:asian_sub_2018 <- str_c(asian_sub_2018_A, asian_sub_2018_B)
1636409999301:asian_sub_2018 <- make_rows(asian_sub_2018)
1636409999317:asian_sub_2018 <- clean_table_2018(asian_sub_2018)
1636409999501:# combine subgroups
1636409999528:asian_sub_2018 <- asian_sub_2018 |>
1636409999549:add_row(Group = "Asian", Percent = 6.2,
1636409999563:Race_Ethnicity = "Asian", Gender = "All") |>
1636409999574:add_row(Group = "Asian", Percent = 6.4,
1636409999587:Race_Ethnicity = "Asian", Gender = "Men") |>
1636409999603:add_row(Group = "Asian", Percent = 6.1,
1636409999622:Race_Ethnicity = "Asian", Gender = "Women")
1636409999666:#correcting gender naming convention
1636409999683:asian_sub_2018 <- asian_sub_2018 |>
1636409999694:mutate(across(.cols = c(Gender, Group),
1636409999705:~ str_replace(string = .,
1636409999718:pattern = "Men",
1636409999736:replacement = "Male")),
1636409999748:across(.cols = c(Gender, Group),
1636409999758:~ str_replace(string = .,
1636409999770:pattern = "Women",
1636409999785:replacement = "Female")))
1636409999839:#defining year for asian 2017 & 2018
1636409999849:asian_sub_2017 <- asian_sub_2017 |>
1636409999859:mutate(Year = 2017)
1636409999890:asian_sub_2018 <- asian_sub_2018 |>
1636409999901:mutate(Year = 2018)
1636409999943:#combining subgroups
1636409999955:asian_subgroups <- bind_rows(asian_sub_2017, asian_sub_2018)
1636409999988:#putting in NAs
1636410000013:asian_subgroups <- asian_subgroups |>
1636410000029:select(-Group) |>
1636410000041:pivot_wider(names_from = Year,
1636410000053:values_from = Percent) |>
1636410000067:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1636410000079:names_to = "Year",
1636410000089:values_to= "Percent")
1636410040476:# save the data
1636410040486:save(
1636410040500:major_groups,
1636410040547:asian_sub_2017,
1636410040570:asian_sub_2017_A,
1636410040587:asian_sub_2017_B,
1636410040603:asian_sub_2017_C,
1636410040626:latinx_sub_2017_A,
1636410040662:latinx_sub_2017_B,
1636410040740:latinx_sub_2017_C,
1636410040758:asian_sub_2018_A,
1636410040789:asian_sub_2018_B,
1636410040804:latinx_sub_2018,
1636410040830:file = "data/raw/imported_data.rda"
1636410040868:)
1636410045332:#reading in data for major_groups
1636410045392:major_racial_ethnic_groups <-magick::image_read("data/raw/Major_ethnic_groups_screenshot.png")
1636410045541:magick::image_info(major_racial_ethnic_groups)
1636410045613:major_groups <- magick::image_ocr(major_racial_ethnic_groups)
1636410047654:# asian sub groups 2017 & 2018
1636410047722:asian_sub_2017 <- image_read("data/raw/asian_subgroups_2017.png")
1636410047858:asian_sub_2017_A <- image_read("data/raw/asian_sub_2017_A.png")
1636410048005:asian_sub_2017_B <- image_read("data/raw/asian_sub_2017_B.png")
1636410048043:asian_sub_2017_C <- image_read("data/raw/asian_sub_2017_C.png")
1636410048138:asian_sub_2017 <- image_ocr(asian_sub_2017)
1636410049156:asian_sub_2017_A <- image_ocr(asian_sub_2017_A)
1636410049932:asian_sub_2017_B <- image_ocr(asian_sub_2017_B)
1636410050059:asian_sub_2017_C <- image_ocr(asian_sub_2017_C)
1636410050459:asian_sub_2018_A <- image_read("data/raw/asian_sub_2018_A.png")
1636410050504:asian_sub_2018_A <- image_ocr(asian_sub_2018_A)
1636410050998:asian_sub_2018_B <- image_read("data/raw/asian_sub_2018_B.png")
1636410051039:asian_sub_2018_B <- image_ocr(asian_sub_2018_B)
1636410051558:# latinx sub groups 2017 & 2018
1636410051593:latinx_imageA <- image_read("data/raw/latinx_sub_2017_A.png")
1636410051623:latinx_imageB <- image_read("data/raw/latinx_sub_2017_B.png")
1636410051697:latinx_imageC <- image_read("data/raw/latinx_sub_2017_C.png")
1636410051741:latinx_sub_2017_A <- image_ocr(latinx_imageA)
1636410051948:latinx_sub_2017_B <- image_ocr(latinx_imageB)
1636410052822:latinx_sub_2017_C <- image_ocr(latinx_imageC)
1636410053180:latinx_sub_2018 <- image_read("data/raw/latinx_subgroups_2018.png")
1636410053226:latinx_sub_2018 <- image_ocr(latinx_sub_2018)
1636410053760:latinx_sub_2018
1636410056942:# save the data
1636410057057:save(
1636410057090:major_groups,
1636410057126:asian_sub_2017,
1636410057177:asian_sub_2017_A,
1636410057204:asian_sub_2017_B,
1636410057223:asian_sub_2017_C,
1636410057296:latinx_sub_2017_A,
1636410057333:latinx_sub_2017_B,
1636410057362:latinx_sub_2017_C,
1636410057453:asian_sub_2018_A,
1636410057549:asian_sub_2018_B,
1636410057642:latinx_sub_2018,
1636410057691:file = "data/raw/imported_data.rda"
1636410057757:)
1636410063926:make_rows <- function(text){
1636410063970:text |>
1636410063981:str_split("\n") |>
1636410063993:unlist() |>
1636410064003:as_tibble()
1636410064015:}
1636410072471:clean_table_mjr <- function(table){
1636410072532:table|>
1636410072547:separate(col = value,
1636410072565:into = c("Group", "Years"),
1636410072585:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])")|>
1636410072607:mutate(Group = str_to_title(Group))|>
1636410072641:separate(col = Years,
1636410072665:into = c("2008", "2010", "2012", "2014", "2016", "2017"),
1636410072683:sep = " ")|>
1636410072699:drop_na()|>
1636410072710:mutate(
1636410072729:across(.cols = -Group, ~ str_remove(string = ., pattern = "\\.")),  # remove decimal points
1636410072744:across(.cols = -Group, as.numeric),  # convert to numeric
1636410072761:across(.cols = -Group, ~ . * 0.1),   # get our decimal point back
1636410072776:Race_Ethnicity = recode(Group, "United States" = "All_races",
1636410072832:"Female" = "All_races",
1636410072945:"Male" = "All_races"),
1636410073004:Race_Ethnicity = str_remove(string = Race_Ethnicity,
1636410073019:pattern = "Female|Male"))
1636410073050:}
1636410075960:clean_table <- function(table){
1636410075994:table |>
1636410076087:separate(col = value,
1636410076293:into = c("Group", "Percentage"),
1636410076331:sep =  "(?<=[[:alpha:]])\\s(?=[0-9])") |>
1636410076452:drop_na() |>
1636410076495:mutate(Group = str_to_title(Group)) |>
1636410076518:mutate(Percentage = str_remove(string = Percentage,
1636410076536:pattern = "\\.")) |>
1636410076553:separate(Percentage, c("Percent"), sep = " ") |>
1636410076568:mutate(Percent = as.numeric(Percent)) |>
1636410076580:mutate(Percent = Percent * 0.1) |>
1636410076612:mutate(Race_Ethnicity = recode(Group,
1636410076631:"United States" = "All_races",
1636410076666:"Female" = "All_races",
1636410076770:"Male" = "All_races")) |>
1636410076807:mutate(Race_Ethnicity = str_remove(string = Race_Ethnicity,
1636410076823:pattern = " Female| Male")) |>
1636410076837:mutate(Gender = str_extract(string = Group,
1636410076851:pattern ="Female|Male")) |>
1636410076864:mutate(Gender = replace_na(Gender, replace = "All"))
1636410076921:}
1636410080228:clean_table_2018 <- function(table){
1636410080352:table |>
1636410080520:separate(col = value,
1636410080552:into = c("Group", "Percent"),
1636410080615:sep =  "(?<=[[:alpha:]])\\s:\\s|\\s(?=[0-9])") |>
1636410080632:mutate(Group = str_remove(string = Group,
1636410080652:pattern = ":")) |>
1636410080665:drop_na() |>
1636410080681:mutate(Group = str_to_title(string = Group)) |>
1636410080735:mutate(Percent = str_remove(string = Percent,
1636410080801:pattern = "\\.")) |>
1636410080846:mutate(Percent = as.numeric(Percent)) |>
1636410080888:mutate(Percent = Percent * 0.1) |>
1636410080930:mutate(Race_Ethnicity = str_replace(string = Group,
1636410080947:pattern = "Men|Women",
1636410080971:replacement = "missing")) |>
1636410081074:mutate(Race_Ethnicity = na_if(Race_Ethnicity, "missing")) |>
1636410081159:fill(Race_Ethnicity, .direction = "down") |>
1636410081183:mutate(Gender = str_extract(string = Group,
1636410081197:pattern = "Men|Women")) |>
1636410081230:mutate(Gender = replace_na(Gender, replace = "All"))
1636410081250:}
1636410089095:fix_latinx_naming <- function(table) {
1636410089109:table |>
1636410089128:mutate(
1636410089147:Group = str_replace(
1636410089162:string = Group,
1636410089199:pattern = "Pr, Dr, Cuban",
1636410089281:replacement = "Puerto Rican, Dominican, Cuban"
1636410089298:),
1636410089309:Race_Ethnicity = str_replace(
1636410089324:string = Race_Ethnicity,
1636410089349:pattern = "Pr, Dr, Cuban",
1636410089403:replacement = "Puerto Rican, Dominican, Cuban"
1636410089420:)
1636410089448:)
1636410089484:}
1636410094683:# major_groups
1636410094736:major_groups <- make_rows(major_groups)
1636410094793:major_groups <- clean_table_mjr(major_groups)
1636410094958:major_groups <- major_groups |>
1636410094987:mutate(Gender = str_extract(string = Group,
1636410095059:pattern = "Female|Male")) |>
1636410095142:mutate(Gender = replace_na(Gender, replace = "All"))
1636410095199:major_groups_long <- major_groups |>
1636410095212:pivot_longer(
1636410095240:cols = contains("20"),
1636410095278:names_to = "Year",
1636410095355:values_to = "Percent",
1636410095391:names_prefix = "Perc_"
1636410095408:) |>
1636410095420:mutate(Year = as.numeric(Year))
1636410098241:# Asian sub groups -- 2017
1636410098254:asian_sub_2017 <- make_rows(asian_sub_2017)
1636410098312:asian_sub_2017_A <- make_rows(asian_sub_2017_A)
1636410098331:asian_sub_2017_B <- make_rows(asian_sub_2017_B)
1636410098350:asian_sub_2017_C <- make_rows(asian_sub_2017_C)
1636410098368:# bind
1636410098385:asian_sub_2017 <- bind_rows(asian_sub_2017_A,
1636410098400:asian_sub_2017_B,
1636410098411:asian_sub_2017_C)
1636410098457:asian_sub_2017 <- clean_table(table = asian_sub_2017)
1636410098560:# Asian sub groups 2018
1636410098575:asian_sub_2018 <- str_c(asian_sub_2018_A, asian_sub_2018_B)
1636410098588:asian_sub_2018 <- make_rows(asian_sub_2018)
1636410098605:asian_sub_2018 <- clean_table_2018(asian_sub_2018)
1636410098722:# combine subgroups
1636410098749:asian_sub_2018 <- asian_sub_2018 |>
1636410098791:add_row(Group = "Asian", Percent = 6.2,
1636410098832:Race_Ethnicity = "Asian", Gender = "All") |>
1636410098867:add_row(Group = "Asian", Percent = 6.4,
1636410098887:Race_Ethnicity = "Asian", Gender = "Men") |>
1636410098981:add_row(Group = "Asian", Percent = 6.1,
1636410099085:Race_Ethnicity = "Asian", Gender = "Women")
1636410099150:#correcting gender naming convention
1636410099179:asian_sub_2018 <- asian_sub_2018 |>
1636410099215:mutate(across(.cols = c(Gender, Group),
1636410099248:~ str_replace(string = .,
1636410099265:pattern = "Men",
1636410099280:replacement = "Male")),
1636410099295:across(.cols = c(Gender, Group),
1636410099308:~ str_replace(string = .,
1636410099322:pattern = "Women",
1636410099336:replacement = "Female")))
1636410099406:#defining year for asian 2017 & 2018
1636410099417:asian_sub_2017 <- asian_sub_2017 |>
1636410099460:mutate(Year = 2017)
1636410099499:asian_sub_2018 <- asian_sub_2018 |>
1636410099524:mutate(Year = 2018)
1636410099568:#combining subgroups
1636410099590:asian_subgroups <- bind_rows(asian_sub_2017, asian_sub_2018)
1636410099725:#putting in NAs
1636410099857:asian_subgroups <- asian_subgroups |>
1636410099948:select(-Group) |>
1636410099975:pivot_wider(names_from = Year,
1636410099991:values_from = Percent) |>
1636410100005:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1636410100024:names_to = "Year",
1636410100047:values_to= "Percent")
1636410138080:#combining subgroups
1636410138127:asian_subgroups <- bind_rows(asian_sub_2017, asian_sub_2018)
1636410174230:asian_subgroups <- asian_subgroups |>
1636410174242:select(-Group) |>
1636410174251:pivot_wider(names_from = Year,
1636410174270:values_from = Percent) |>
1636410174278:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1636410174287:names_to = "Year",
1636410174305:values_to= "Percent")
1636410208055:# Latino sub groups -- 2017
1636410208117:#combine
1636410208161:latinx_sub_2017 <- stringr::str_c(latinx_sub_2017_A,
1636410208187:latinx_sub_2017_B,
1636410208219:latinx_sub_2017_C)
1636410208279:# replace typo
1636410208333:latinx_sub_2017 <- latinx_sub_2017 |>
1636410208385:str_replace(pattern = "DR, Cuban Female 15.7\nPR",
1636410208452:replacement = "DR, Cuban Male 15.7\nPR")
1636410208471:# clean
1636410208485:latinx_sub_2017 <- make_rows(latinx_sub_2017)
1636410208508:latinx_sub_2017 <- clean_table(table = latinx_sub_2017)
1636410208650:latinx_sub_2017 <- fix_latinx_naming(latinx_sub_2017)
1636410208698:#latinx 2018
1636410208722:latinx_sub_2018 <- str_replace_all(string = latinx_sub_2018,
1636410208734:pattern = "\\s:\n{2}|\n{2}",
1636410208747:replacement = " ")
1636410208763:latinx_sub_2018 <- make_rows(latinx_sub_2018)
1636410208786:latinx_sub_2018 <- clean_table_2018(latinx_sub_2018)
1636410208891:latinx_sub_2018 <- fix_latinx_naming(latinx_sub_2018)
1636410208943:#adding in data from text
1636410208955:latinx_sub_2018 <- latinx_sub_2018 |>
1636410208972:add_row(
1636410208981:Group = "Latinx",
1636410208995:Percent = 12.8,
1636410209006:Race_Ethnicity = "Latinx",
1636410209016:Gender = "All"
1636410209040:) |>
1636410209053:add_row(
1636410209063:Group = "Latinx",
1636410209081:Percent = 12.3,
1636410209092:Race_Ethnicity = "Latinx",
1636410209116:Gender = "Men"
1636410209159:) |>
1636410209185:add_row(
1636410209202:Group = "Latinx",
1636410209218:Percent = 13.3,
1636410209237:Race_Ethnicity = "Latinx",
1636410209251:Gender = "Women"
1636410209261:)
1636410209301:latinx_sub_2018 <- latinx_sub_2018 |>
1636410209309:mutate(across(
1636410209319:.cols = c(Gender, Group),
1636410209342:~ str_replace(
1636410209372:string = .,
1636410209442:pattern = "Men",
1636410209489:replacement = "Male"
1636410209605:)
1636410209637:),
1636410209650:across(
1636410209683:.cols = c(Gender, Group),
1636410209696:~ str_replace(
1636410209722:string = .,
1636410209749:pattern = "Women",
1636410209763:replacement = "Female"
1636410209776:)
1636410209789:))
1636410209899:# combining
1636410209915:latinx_sub_2017 <- latinx_sub_2017 |>
1636410209927:mutate(Year = 2017)
1636410209962:latinx_sub_2018 <- latinx_sub_2018 |>
1636410209974:mutate(Year = 2018)
1636410210004:latinx_subgroups <- bind_rows(latinx_sub_2017, latinx_sub_2018)
1636410210037:#missing categories
1636410210049:latinx_subgroups <- latinx_subgroups |>
1636410210062:select(-Group) |>
1636410210082:pivot_wider(names_from = Year, values_from = Percent) |>
1636410210098:pivot_longer(cols = -c(Race_Ethnicity, Gender),
1636410210110:names_to ="Year" ,
1636410210123:values_to="Percent")
1636410471823:all_asian <- asian_subgroups |>
1636410471832:filter(Race_Ethnicity == "Asian", Gender == "All")
1636410478423:View(all_asian)
1636410536244:ggplot(data = all_asian, aes(x = Year, y = Percent, color = Year, fill = Year)) +
1636410536278:geom_point(size = 2)+
1636410536306:geom_line(size = 0.5)
1636410856317:all_latinx <- latinx_subgroups |>
1636410856329:filter(Race_Ethnicity == "Latino", Year == "2017")
1636410863602:View(all_latinx)
1636411115372:all_latinx <- latinx_subgroups |>
1636411115380:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx")
1636411137980:all_latinx <- latinx_subgroups |>
1636411137989:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636411137997:filter(Gender == "All")
1636411210406:all_latinx <- latinx_subgroups |>
1636411210415:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636411210423:filter(Gender == "All", na.rm = TRUE)
1636411235042:na.omit(all_latinx)
1636411291774:all_latinx <- na.omit(all_latinx)
1636411343500:merge(all_asian, all_latinx)
1636411363763:merged <- merge(all_asian, all_latinx)
1636411370293:View(merged)
1636411386199:all_asian <- asian_subgroups |>
1636411386208:filter(Race_Ethnicity == "Asian", Gender == "All")
1636411387794:all_latinx <- latinx_subgroups |>
1636411387802:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636411387809:filter(Gender == "All")
1636411388727:all_latinx <- na.omit(all_latinx)
1636411389675:merged <- merge(all_asian, all_latinx)
1636411495671:all_asian <- asian_subgroups |>
1636411495681:filter(Race_Ethnicity == "Asian", Gender == "All")
1636411497287:all_latinx <- latinx_subgroups |>
1636411497296:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636411497304:filter(Gender == "All")
1636411498177:all_latinx <- na.omit(all_latinx)
1636411499370:merged <- rbind(all_asian, all_latinx)
1636411998735:all_latinx <- latinx_subgroups |>
1636411998744:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636411998752:filter(Gender == "All") |>
1636411998760:mutate(Race_Ethnicity = casewhen(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636412011028:all_asian <- asian_subgroups |>
1636412011036:filter(Race_Ethnicity == "Asian", Gender == "All")
1636412012780:all_latinx <- latinx_subgroups |>
1636412012788:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636412012795:filter(Gender == "All") |>
1636412012802:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636412017518:all_latinx <- na.omit(all_latinx)
1636412019233:merged <- rbind(all_asian, all_latinx)
1636412042732:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412042743:geom_point(size = 2)+
1636412042754:geom_line(size = 0.5)
1636412176574:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412176582:geom_point(size = 2) +
1636412176589:geom_line(size = 0.5) +
1636412176596:scale_colour_brewer(palette = "Set2")
1636412297691:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412297700:geom_point(size = 2) +
1636412297709:geom_line(size = 0.5) +
1636412297718:scale_colour_brewer(palette = "Set2")+
1636412297727:lines()
1636412312973:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412312983:geom_point(size = 2) +
1636412312990:geom_line(size = 0.5) +
1636412312997:scale_colour_brewer(palette = "Set2")+
1636412313004:lines(Year)
1636412350100:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412350109:geom_point(size = 2) +
1636412350117:geom_line(size = 0.5) +
1636412350125:scale_colour_brewer(palette = "Set2")+
1636412350134:lines(x, y)
1636412393238:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412393247:geom_point(size = 2) +
1636412393255:geom_line(size = 0.5) +
1636412393263:scale_colour_brewer(palette = "Set2")+
1636412393271:lines(x = Year)
1636412410922:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412410930:geom_point(size = 2) +
1636412410939:geom_line(size = 0.5) +
1636412410947:scale_colour_brewer(palette = "Set2")+
1636412410954:lines(merged$Year)
1636412472302:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412472311:geom_line(size = 0.5) +
1636412472319:scale_colour_brewer(palette = "Set2")
1636412548493:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412548502:geom_line(aes(group=1)) +
1636412548510:scale_colour_brewer(palette = "Set2")
1636412578251:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412578263:geom_point(size = 1)+
1636412578271:geom_line(aes(group=1)) +
1636412578280:scale_colour_brewer(palette = "Set2")
1636412599819:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412599828:geom_point(size = 1)+
1636412599835:scale_colour_brewer(palette = "Set2")
1636412606539:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412606551:geom_point(size = 2)+
1636412606562:scale_colour_brewer(palette = "Set2")
1636412689375:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412689385:geom_point(size = 2)+
1636412689393:geom_line(aes(group = 2))+
1636412689402:scale_colour_brewer(palette = "Set2")
1636412717548:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412717559:geom_point(size = 2)+
1636412717568:geom_line(aes(group = Race_Ethnicity))+
1636412717576:scale_colour_brewer(palette = "Set2")
1636412901853:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412901863:geom_point(size = 2)+
1636412901872:geom_line(aes(group = Race_Ethnicity))+
1636412901881:scale_colour_brewer(palette = "Set2") +
1636412901891:scale_y_continuous(breaks = c(0, 2, 4, 6, 8, 10, 12, 14))
1636412920075:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636412920083:geom_point(size = 2)+
1636412920091:geom_line(aes(group = Race_Ethnicity))+
1636412920098:scale_colour_brewer(palette = "Set2") +
1636412920106:scale_y_discrete(breaks = c(0, 2, 4, 6, 8, 10, 12, 14))
1636413011040:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636413011050:geom_point(size = 2)+
1636413011059:geom_line(aes(group = Race_Ethnicity))+
1636413011069:scale_colour_brewer(palette = "Set2") +
1636413011078:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 1, 10)))
1636413035109:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636413035117:geom_point(size = 2)+
1636413035125:geom_line(aes(group = Race_Ethnicity))+
1636413035132:scale_colour_brewer(palette = "Set2") +
1636413035139:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 10, 1)))
1636413046893:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636413046902:geom_point(size = 2)+
1636413046911:geom_line(aes(group = Race_Ethnicity))+
1636413046919:scale_colour_brewer(palette = "Set2") +
1636413046928:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))
1636413111978:major_groups_long |>
1636413111988:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636413111996:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636413112002:geom_line(size = 0.5) +
1636413112009:geom_point(size = 3) +
1636413112015:scale_colour_brewer(palette = "Set2") +
1636413112021:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636413112028:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636413112034:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636413112041:theme(panel.grid.minor.x = element_blank())+
1636413112047:labs(title = "Percent Disconnect of all Major Races and
1636413112053:Ethnicities in the United States by Gender",
1636413112061:caption = "Data Source: Measure America",
1636413112067:x = "Year") +
1636413112074:theme(plot.title = element_text( hjust = 0.5))
1636413126561:major_groups_long |>
1636413126570:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636413126580:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636413126589:geom_line(size = 0.5) +
1636413126598:geom_point(size = 3) +
1636413126606:scale_colour_brewer(palette = "Set2") +
1636413126614:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636413126622:scale_y_continuous(limits = c(0, 15), breaks=(seq(0, 15, 1)))+
1636413126631:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636413126639:theme(panel.grid.minor.x = element_blank())+
1636413126646:labs(title = "Percent Disconnect of all Major Races and
1636413126655:Ethnicities in the United States by Gender",
1636413126663:caption = "Data Source: Measure America",
1636413126672:x = "Year") +
1636413126680:theme(plot.title = element_text( hjust = 0.5))
1636413154473:major_groups_long |>
1636413154481:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636413154488:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636413154496:geom_line(size = 0.5) +
1636413154506:geom_point(size = 3) +
1636413154513:scale_colour_brewer(palette = "Set2") +
1636413154520:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636413154528:scale_y_continuous(minor_breaks = seq(0, 10, 0.1))+
1636413154536:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636413154543:theme(panel.grid.minor.x = element_blank())+
1636413154552:labs(title = "Percent Disconnect of all Major Races and
1636413154559:Ethnicities in the United States by Gender",
1636413154568:caption = "Data Source: Measure America",
1636413154576:x = "Year") +
1636413154584:theme(plot.title = element_text( hjust = 0.5))
1636413208247:major_groups_long |>
1636413208256:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636413208264:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636413208272:geom_line(size = 0.5) +
1636413208280:geom_point(size = 3) +
1636413208288:scale_colour_brewer(palette = "Set2") +
1636413208297:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636413208306:scale_y_continuous(limits = c(0, 20)minor_breaks = seq(0, 10, 0.1))+
1636413229017:major_groups_long |>
1636413229025:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636413229036:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636413229045:geom_line(size = 0.5) +
1636413229053:geom_point(size = 3) +
1636413229063:scale_colour_brewer(palette = "Set2") +
1636413229072:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636413229080:scale_y_continuous(limits = c(0, 20), minor_breaks = seq(0, 10, 0.1))+
1636413229088:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636413229098:theme(panel.grid.minor.x = element_blank())+
1636413229112:labs(title = "Percent Disconnect of all Major Races and
1636413229129:Ethnicities in the United States by Gender",
1636413229142:caption = "Data Source: Measure America",
1636413229150:x = "Year") +
1636413229159:theme(plot.title = element_text( hjust = 0.5))
1636413266539:major_groups_long |>
1636413266546:filter(Gender != "All", Race_Ethnicity == "All_races") |>
1636413266553:ggplot(aes(x = Year, y = Percent, color = Gender)) +
1636413266560:geom_line(size = 0.5) +
1636413266566:geom_point(size = 3) +
1636413266573:scale_colour_brewer(palette = "Set2") +
1636413266579:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636413266586:scale_y_continuous(limits = c(0, 20), minor_breaks = seq(0, 20, 1))+
1636413266592:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636413266600:theme(panel.grid.minor.x = element_blank())+
1636413266717:labs(title = "Percent Disconnect of all Major Races and
1636413266727:Ethnicities in the United States by Gender",
1636413266736:caption = "Data Source: Measure America",
1636413266743:x = "Year") +
1636413266750:theme(plot.title = element_text( hjust = 0.5))
1636413381415:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636413381423:geom_point(size = 2)+
1636413381430:geom_line(aes(group = Race_Ethnicity))+
1636413381436:scale_colour_brewer(palette = "Set2") +
1636413381444:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636413381451:labs(title = "Total Percent Disconnect
1636413381458:of Asian and Latinx Subgroups in 2017 and 2018",
1636413381467:caption = "Data Source: Measure America",
1636413381477:x = "Year")
1636413389916:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636413389924:geom_point(size = 2)+
1636413389930:geom_line(aes(group = Race_Ethnicity))+
1636413389936:scale_colour_brewer(palette = "Set2") +
1636413389943:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636413389950:labs(title = "       Total Percent Disconnect
1636413389956:of Asian and Latinx Subgroups in 2017 and 2018",
1636413389963:caption = "Data Source: Measure America",
1636413389970:x = "Year")
1636413401860:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636413401867:geom_point(size = 2)+
1636413401875:geom_line(aes(group = Race_Ethnicity))+
1636413401882:scale_colour_brewer(palette = "Set2") +
1636413401889:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636413401896:labs(title = "                   Total Percent Disconnect
1636413401903:of Asian and Latinx Subgroups in 2017 and 2018",
1636413401910:caption = "Data Source: Measure America",
1636413401917:x = "Year")
1636413408456:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636413408463:geom_point(size = 2)+
1636413408472:geom_line(aes(group = Race_Ethnicity))+
1636413408480:scale_colour_brewer(palette = "Set2") +
1636413408488:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636413408496:labs(title = "                             Total Percent Disconnect
1636413408503:of Asian and Latinx Subgroups in 2017 and 2018",
1636413408511:caption = "Data Source: Measure America",
1636413408518:x = "Year")
1636414089524:#making placeholder variables for data that needs to be graphed
1636414089533:all_asian <- asian_subgroups |>
1636414089543:filter(Race_Ethnicity == "Asian", Gender != "All")
1636414089561:#Latino and Latinx were different variables in the data so we replaced Latino with Latinx them to one to be able to get the 2017 and 2018 dates correctly.
1636414089582:all_latinx <- latinx_subgroups |>
1636414089591:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636414089599:filter(Gender == "All") |>
1636414089608:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636414089630:#omitting missing values
1636414089650:all_latinx <- na.omit(all_latinx)
1636414089667:#merging dataframes to make one
1636414089675:merged <- rbind(all_asian, all_latinx)
1636414089703:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636414089712:geom_point(size = 2)+
1636414089720:geom_line(aes(group = Race_Ethnicity))+
1636414089729:scale_colour_brewer(palette = "Set2") +
1636414089739:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636414089748:labs(title = "                             Total Percent Disconnect
1636414089757:of Asian and Latinx Subgroups in 2017 and 2018",
1636414089766:caption = "Data Source: Measure America",
1636414089774:x = "Year")
1636414089964:all_asian <- asian_subgroups |>
1636414089972:filter(Race_Ethnicity == "Asian", Gender != "All")
1636414124413:all_latinx <- latinx_subgroups |>
1636414124421:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636414124430:filter(Gender != "All") |>
1636414124439:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636414135777:View(all_latinx)
1636414317405:all_latinx <- latinx_subgroups |>
1636414317412:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636414317420:filter(Gender != "All") |>
1636414317428:mutate(Race_Ethnicity = case_when(Race_Ethnicity == ("Latino" | "Latina") ~ "Latinx", TRUE ~   Race_Ethnicity))
1636414454674:all_latinx <- latinx_subgroups |>
1636414454682:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina" | Race_Ethnicity == "Latinx") |>
1636414454691:filter(Gender != "All") |>
1636414454701:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", "Latina" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636415008623:all_latinx <- latinx_subgroups |>
1636415008634:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636415008646:filter(Gender != "All") |>
1636415008655:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx",
1636415008664:"Latina" ~ "Latinx",
1636415008674:TRUE ~  Race_Ethnicity))
1636415097096:all_latinx <- latinx_subgroups |>
1636415097105:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636415097116:filter(Gender != "All") |>
1636415097128:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx",
1636415097142:Race_Ethnicity == "Latina" ~ "Latinx",
1636415097151:TRUE ~  Race_Ethnicity))
1636415168761:all_latinx <- na.omit(all_latinx)
1636415421868:ggplot(data = all_latinx, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636415421943:geom_point(size = 2)+
1636415421951:geom_line(aes(group = Race_Ethnicity))+
1636415421959:scale_colour_brewer(palette = "Set2") +
1636415421967:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636415421974:labs(title = "                             Total Percent Disconnect
1636415421981:of Asian and Latinx Subgroups in 2017 and 2018",
1636415421989:caption = "Data Source: Measure America",
1636415421997:x = "Year")
1636415443178:ggplot(data = all_latinx, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636415443186:geom_point(size = 2)+
1636415443194:geom_line(aes(group = Gender))+
1636415443202:scale_colour_brewer(palette = "Set2") +
1636415443209:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636415443217:labs(title = "                             Total Percent Disconnect
1636415443225:of Asian and Latinx Subgroups in 2017 and 2018",
1636415443232:caption = "Data Source: Measure America",
1636415443239:x = "Year")
1636415472828:ggplot(data = all_latinx, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636415472837:geom_point(size = 2)+
1636415472844:geom_line(aes(group = Gender))+
1636415472852:scale_colour_brewer(palette = "Set2") +
1636415472860:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636415472868:labs(title = "                             Percent Disconnect
1636415472876:by Gender of Latinx Subgroups in 2017 and 2018",
1636415472883:caption = "Data Source: Measure America",
1636415472891:x = "Year")
1636415479780:#making placeholder variables for data that needs to be graphed
1636415479791:all_asian <- asian_subgroups |>
1636415479801:filter(Race_Ethnicity == "Asian", Gender != "All")
1636415479856:#Latino and Latinx were different variables in the data so we replaced Latino with Latinx them to one to be able to get the 2017 and 2018 dates correctly.
1636415479868:all_latinx <- latinx_subgroups |>
1636415479883:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636415479895:filter(Gender == "All") |>
1636415479905:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636415479986:#omitting missing values
1636415480000:all_latinx <- na.omit(all_latinx)
1636415480026:#merging dataframes to make one
1636415480036:merged <- rbind(all_asian, all_latinx)
1636415480067:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636415480077:geom_point(size = 2)+
1636415480086:geom_line(aes(group = Race_Ethnicity))+
1636415480095:scale_colour_brewer(palette = "Set2") +
1636415480103:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636415480112:labs(title = "                             Total Percent Disconnect
1636415480121:of Asian and Latinx Subgroups in 2017 and 2018",
1636415480130:caption = "Data Source: Measure America",
1636415480139:x = "Year")
1636415480423:all_asian <- asian_subgroups |>
1636415480436:filter(Race_Ethnicity == "Asian", Gender != "All")
1636415480465:all_latinx <- latinx_subgroups |>
1636415480476:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636415480486:filter(Gender != "All") |>
1636415480497:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx",
1636415480507:Race_Ethnicity == "Latina" ~ "Latinx",
1636415480517:TRUE ~  Race_Ethnicity))
1636415480561:all_latinx <- na.omit(all_latinx)
1636415480591:ggplot(data = all_latinx, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636415480601:geom_point(size = 2)+
1636415480611:geom_line(aes(group = Gender))+
1636415480620:scale_colour_brewer(palette = "Set2") +
1636415480629:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636415480639:labs(title = "                             Percent Disconnect
1636415480649:by Gender of Latinx Subgroups in 2017 and 2018",
1636415480658:caption = "Data Source: Measure America",
1636415480667:x = "Year")
1636415722797:all_asian <- asian_subgroups |>
1636415722808:filter(Race_Ethnicity == "Asian", Gender != "All")
1636415737986:Viea(all_asia)
1636415746103:View(all_asian)
1636415768376:#making placeholder variables for data that needs to be graphed
1636415768386:all_asian <- asian_subgroups |>
1636415768398:filter(Race_Ethnicity == "Asian", Gender == "All")
1636415774719:#Latino and Latinx were different variables in the data so we replaced Latino with Latinx them to one to be able to get the 2017 and 2018 dates correctly.
1636415774728:all_latinx <- latinx_subgroups |>
1636415774736:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636415774743:filter(Gender == "All") |>
1636415774750:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636415778553:#omitting missing values
1636415778563:all_latinx <- na.omit(all_latinx)
1636415779727:#merging dataframes to make one
1636415779736:merged <- rbind(all_asian, all_latinx)
1636415781498:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636415781507:geom_point(size = 2)+
1636415781517:geom_line(aes(group = Race_Ethnicity))+
1636415781526:scale_colour_brewer(palette = "Set2") +
1636415781533:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636415781541:labs(title = "                             Total Percent Disconnect
1636415781548:of Asian and Latinx Subgroups in 2017 and 2018",
1636415781555:caption = "Data Source: Measure America",
1636415781562:x = "Year")
1636415807907:#plotting overall latinx and asian percentages
1636415807917:all_asian <- asian_subgroups |>
1636415807926:filter(Race_Ethnicity == "Asian", Gender != "All")
1636415825257:merged <- rbind(all_asian, all_latinx)
1636415833944:View(merged)
1636415875128:#plotting overall latinx and asian percentages
1636415875136:all_asian <- asian_subgroups |>
1636415875144:filter(Race_Ethnicity == "Asian", Gender == "All")
1636415876337:all_latinx <- latinx_subgroups |>
1636415876349:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636415876358:filter(Gender != "All") |>
1636415876365:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx",
1636415876373:Race_Ethnicity == "Latina" ~ "Latinx",
1636415876379:TRUE ~  Race_Ethnicity))
1636415879167:all_latinx <- na.omit(all_latinx)
1636415880008:merged <- rbind(all_asian, all_latinx)
1636415889730:#plotting overall latinx and asian percentages
1636415889741:all_asian <- asian_subgroups |>
1636415889749:filter(Race_Ethnicity == "Asian", Gender == "All")
1636415893745:all_latinx <- latinx_subgroups |>
1636415893753:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636415893760:filter(Gender != "All") |>
1636415893767:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx",
1636415893775:Race_Ethnicity == "Latina" ~ "Latinx",
1636415893782:TRUE ~  Race_Ethnicity))
1636415895471:all_latinx <- na.omit(all_latinx)
1636415896858:merged <- rbind(all_asian, all_latinx)
1636415914884:View(merged)
1636415956065:#plotting overall latinx and asian percentages
1636415956073:all_asian <- asian_subgroups |>
1636415956082:filter(Race_Ethnicity == "Asian", Gender != "All")
1636415960323:all_latinx <- latinx_subgroups |>
1636415960337:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636415960346:filter(Gender != "All") |>
1636415960354:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx",
1636415960364:Race_Ethnicity == "Latina" ~ "Latinx",
1636415960374:TRUE ~  Race_Ethnicity))
1636415962191:all_latinx <- na.omit(all_latinx)
1636415963538:merged <- rbind(all_asian, all_latinx)
1636416006593:ggplot(data = all_latinx, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636416006603:geom_point(size = 2)+
1636416006612:geom_line(aes(group = Gender))+
1636416006621:facet_wrap(~Race_Ethnicity)+
1636416006631:scale_colour_brewer(palette = "Set2") +
1636416006642:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636416006650:labs(title = "                             Percent Disconnect
1636416006662:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636416006673:caption = "Data Source: Measure America",
1636416006683:x = "Year")
1636416017447:ggplot(data = merged, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636416017456:geom_point(size = 2)+
1636416017464:geom_line(aes(group = Gender))+
1636416017472:facet_wrap(~Race_Ethnicity)+
1636416017480:scale_colour_brewer(palette = "Set2") +
1636416017489:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636416017497:labs(title = "                             Percent Disconnect
1636416017506:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636416017515:caption = "Data Source: Measure America",
1636416017524:x = "Year")
1636416059325:ggplot(data = merged, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636416059335:geom_point(size = 2)+
1636416059344:geom_line(aes(group = Gender))+
1636416059354:facet_wrap(~Race_Ethnicity)+
1636416059363:scale_colour_brewer(palette = "Set2") +
1636416059372:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636416059380:labs(title = "                                   Percent Disconnect
1636416059389:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636416059397:caption = "Data Source: Measure America",
1636416059406:x = "Year")
1636416068772:ggplot(data = merged, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636416068782:geom_point(size = 2)+
1636416068790:geom_line(aes(group = Gender))+
1636416068797:facet_wrap(~Race_Ethnicity)+
1636416068806:scale_colour_brewer(palette = "Set2") +
1636416068819:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636416068827:labs(title = "                                        Percent Disconnect
1636416068835:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636416068843:caption = "Data Source: Measure America",
1636416068852:x = "Year")
1636416146515:#making placeholder variables for data that needs to be graphed
1636416146525:all_asian <- asian_subgroups |>
1636416146536:filter(Race_Ethnicity == "Asian", Gender == "All")
1636416146562:#Latino and Latinx were different variables in the data so we replaced Latino with Latinx them to one to be able to get the 2017 and 2018 dates correctly.
1636416146600:all_latinx <- latinx_subgroups |>
1636416146611:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636416146622:filter(Gender == "All") |>
1636416146632:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636416146672:#omitting missing values
1636416146682:all_latinx <- na.omit(all_latinx)
1636416146705:#merging dataframes to make one
1636416146717:merged <- rbind(all_asian, all_latinx)
1636416146753:ggplot(data = merged,
1636416146764:aes(
1636416146773:x = Year,
1636416146782:y = Percent,
1636416146792:color = Race_Ethnicity,
1636416146803:fill = Race_Ethnicity
1636416146812:)) +
1636416146822:geom_point(size = 2) +
1636416146831:geom_line(aes(group = Race_Ethnicity)) +
1636416146841:scale_colour_brewer(palette = "Set2") +
1636416146851:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636416146860:labs(
1636416146870:title = "                             Total Percent Disconnect
1636416146878:of Asian and Latinx Subgroups in 2017 and 2018",
1636416146888:caption = "Data Source: Measure America",
1636416146898:x = "Year"
1636416146907:)
1636416147160:#plotting overall latinx and asian percentages
1636416147172:all_asian <- asian_subgroups |>
1636416147181:filter(Race_Ethnicity == "Asian", Gender != "All")
1636416147212:all_latinx <- latinx_subgroups |>
1636416147219:filter(Race_Ethnicity == "Latino" |
1636416147229:Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636416147238:filter(Gender != "All") |>
1636416147246:mutate(
1636416147253:Race_Ethnicity = case_when(
1636416147262:Race_Ethnicity == "Latino" ~ "Latinx",
1636416147270:Race_Ethnicity == "Latina" ~ "Latinx",
1636416147278:TRUE ~  Race_Ethnicity
1636416147286:)
1636416147295:)
1636416147333:all_latinx <- na.omit(all_latinx)
1636416147362:merged <- rbind(all_asian, all_latinx)
1636416147393:ggplot(data = merged, aes(
1636416147403:x = Year,
1636416147412:y = Percent,
1636416147421:color = Gender,
1636416147430:fill = Gender
1636416147438:)) +
1636416147446:geom_point(size = 2) +
1636416147454:geom_line(aes(group = Gender)) +
1636416147462:facet_wrap( ~ Race_Ethnicity) +
1636416147471:scale_colour_brewer(palette = "Set2") +
1636416147480:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636416147490:labs(
1636416147501:title = "                                        Percent Disconnect
1636416147510:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636416147518:caption = "Data Source: Measure America",
1636416147526:x = "Year"
1636416147536:)
1636416208617:#making placeholder variables for data that needs to be graphed
1636416208627:all_asian <- asian_subgroups |>
1636416208657:filter(Race_Ethnicity == "Asian", Gender == "All")
1636416208681:#Latino and Latinx were different variables in the data so we replaced Latino with Latinx them to one to be able to get the 2017 and 2018 dates correctly.
1636416208691:all_latinx <- latinx_subgroups |>
1636416208700:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636416208711:filter(Gender == "All") |>
1636416208722:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636416208760:#omitting missing values
1636416208771:all_latinx <- na.omit(all_latinx)
1636416208789:#merging dataframes to make one
1636416208800:merged <- rbind(all_asian, all_latinx)
1636416208831:ggplot(data = merged,
1636416208841:aes(
1636416208850:x = Year,
1636416208859:y = Percent,
1636416208868:color = Race_Ethnicity,
1636416208878:fill = Race_Ethnicity
1636416208887:)) +
1636416208898:geom_point(size = 2) +
1636416208908:geom_line(aes(group = Race_Ethnicity)) +
1636416208918:scale_colour_brewer(palette = "Set1") +
1636416208928:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636416208944:labs(
1636416208958:title = "                             Total Percent Disconnect
1636416208971:of Asian and Latinx Subgroups in 2017 and 2018",
1636416208983:caption = "Data Source: Measure America",
1636416208995:x = "Year"
1636416209009:)
1636416209360:#plotting overall latinx and asian percentages
1636416209376:all_asian <- asian_subgroups |>
1636416209387:filter(Race_Ethnicity == "Asian", Gender != "All")
1636416209421:all_latinx <- latinx_subgroups |>
1636416209431:filter(Race_Ethnicity == "Latino" |
1636416209442:Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636416209453:filter(Gender != "All") |>
1636416209468:mutate(
1636416209481:Race_Ethnicity = case_when(
1636416209491:Race_Ethnicity == "Latino" ~ "Latinx",
1636416209503:Race_Ethnicity == "Latina" ~ "Latinx",
1636416209518:TRUE ~  Race_Ethnicity
1636416209533:)
1636416209550:)
1636416209585:all_latinx <- na.omit(all_latinx)
1636416209618:merged <- rbind(all_asian, all_latinx)
1636416209652:ggplot(data = merged, aes(
1636416209666:x = Year,
1636416209678:y = Percent,
1636416209690:color = Gender,
1636416209700:fill = Gender
1636416209709:)) +
1636416209719:geom_point(size = 2) +
1636416209738:geom_line(aes(group = Gender)) +
1636416209748:facet_wrap( ~ Race_Ethnicity) +
1636416209760:scale_colour_brewer(palette = "Set1") +
1636416209771:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636416209784:labs(
1636416209795:title = "                                        Percent Disconnect
1636416209805:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636416209819:caption = "Data Source: Measure America",
1636416209831:x = "Year"
1636416209840:)
1636416268417:#making placeholder variables for data that needs to be graphed
1636416268427:all_asian <- asian_subgroups |>
1636416268436:filter(Race_Ethnicity == "Asian", Gender == "All")
1636416268487:#Latino and Latinx were different variables in the data so we replaced Latino with Latinx them to one to be able to get the 2017 and 2018 dates correctly.
1636416268496:all_latinx <- latinx_subgroups |>
1636416268506:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636416268514:filter(Gender == "All") |>
1636416268523:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636416268554:#omitting missing values
1636416268564:all_latinx <- na.omit(all_latinx)
1636416268586:#merging dataframes to make one
1636416268597:merged <- rbind(all_asian, all_latinx)
1636416268624:ggplot(data = merged,
1636416268633:aes(
1636416268643:x = Year,
1636416268651:y = Percent,
1636416268660:color = Race_Ethnicity,
1636416268669:fill = Race_Ethnicity
1636416268678:)) +
1636416268688:geom_point(size = 2) +
1636416268698:geom_line(aes(group = Race_Ethnicity)) +
1636416268706:scale_colour_brewer(palette = "Set1") +
1636416268715:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636416268725:labs(
1636416268735:title = "                             Total Percent Disconnect
1636416268744:of Asian and Latinx Subgroups in 2017 and 2018",
1636416268754:caption = "Data Source: Measure America",
1636416268763:x = "Year"
1636416268771:)
1636416269075:#plotting overall latinx and asian percentages
1636416269088:all_asian <- asian_subgroups |>
1636416269099:filter(Race_Ethnicity == "Asian", Gender != "All")
1636416269125:all_latinx <- latinx_subgroups |>
1636416269136:filter(Race_Ethnicity == "Latino" |
1636416269146:Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636416269155:filter(Gender != "All") |>
1636416269164:mutate(
1636416269174:Race_Ethnicity = case_when(
1636416269184:Race_Ethnicity == "Latino" ~ "Latinx",
1636416269193:Race_Ethnicity == "Latina" ~ "Latinx",
1636416269203:TRUE ~  Race_Ethnicity
1636416269212:)
1636416269220:)
1636416269247:all_latinx <- na.omit(all_latinx)
1636416269281:merged <- rbind(all_asian, all_latinx)
1636416269308:ggplot(data = merged, aes(
1636416269318:x = Year,
1636416269329:y = Percent,
1636416269339:color = Gender,
1636416269349:fill = Gender
1636416269358:)) +
1636416269367:geom_point(size = 2) +
1636416269377:geom_line(aes(group = Gender)) +
1636416269387:facet_wrap( ~ Race_Ethnicity) +
1636416269397:scale_colour_brewer(palette = "Set2") +
1636416269406:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636416269415:labs(
1636416269424:title = "                                        Percent Disconnect
1636416269434:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636416269443:caption = "Data Source: Measure America",
1636416269454:x = "Year"
1636416269463:)
1636417110234:all_asian <- asian_subgroups |>
1636417110244:filter(Race_Ethnicity != "Asian" | "All_races",  Gender == "All")
1636417131106:all_asian <- asian_subgroups |>
1636417131115:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_ethnicity != "All_races")
1636417148477:all_asian <- asian_subgroups |>
1636417148485:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races")
1636417314806:all_asian <- asian_subgroups |>
1636417314816:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636417314825:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636417335057:all_asian <- asian_subgroups |>
1636417335066:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races")
1636417405138:all_asian <- asian_subgroups |>
1636417405146:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636417405154:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636417497889:all_asian <- asian_subgroups |>
1636417497900:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636417497911:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636417497974:ggplot(data = all_asian, aes(
1636417497985:x = Year,
1636417497996:y = Percent,
1636417498006:color = Race_Ethnicity,
1636417498017:fill = Race_Ethnicity
1636417498027:)) +
1636417498038:geom_point(size = 2) +
1636417498047:geom_line(aes(group = Race_Ethnicity)) +
1636417498057:scale_colour_brewer(palette = "Set2") +
1636417498067:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636417498077:labs(
1636417498086:title = "                                        Percent Disconnect
1636417498097:of Asian Subgroups in 2017 and 2018",
1636417498106:caption = "Data Source: Measure America",
1636417498115:x = "Year"
1636417498124:)
1636417512644:all_asian <- asian_subgroups |>
1636417512655:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636417512695:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636417512736:ggplot(data = all_asian, aes(
1636417512747:x = Year,
1636417512757:y = Percent,
1636417512767:color = Race_Ethnicity,
1636417512776:fill = Race_Ethnicity
1636417512785:)) +
1636417512796:geom_point(size = 2) +
1636417512807:geom_line(aes(group = Race_Ethnicity)) +
1636417512817:scale_colour_brewer(palette = "Set2") +
1636417512829:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636417512838:labs(
1636417512847:title = "                                        Percent Disconnect
1636417512857:of Asian Subgroups in 2017 and 2018",
1636417512869:caption = "Data Source: Measure America",
1636417512880:x = "Year"
1636417512889:)
1636417663546:all_asian <- asian_subgroups |>
1636417663556:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636417663565:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636417663630:ggplot(data = all_asian, aes(
1636417663641:x = Year,
1636417663650:y = Percent,
1636417663658:color = Race_Ethnicity,
1636417663667:fill = Race_Ethnicity
1636417663677:)) +
1636417663686:geom_point(size = 2) +
1636417663697:geom_line(aes(group = Race_Ethnicity)) +
1636417663707:scale_colour_brewer(palette = "Set2") +
1636417663718:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636417663728:labs(
1636417663737:title = "             Percent Disconnect
1636417663746:of Asian Subgroups in 2017 and 2018",
1636417663756:caption = "Data Source: Measure America",
1636417663766:x = "Year"
1636417663774:) +
1636417663785:theme(legend.title = "Race/Ethnicity")
1636417913628:all_asian <- asian_subgroups |>
1636417913638:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636417913647:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636417913717:ggplot(data = all_asian, aes(
1636417913726:x = Year,
1636417913735:y = Percent,
1636417913744:color = Race_Ethnicity,
1636417913754:fill = Race_Ethnicity
1636417913763:)) +
1636417913773:geom_point(size = 2) +
1636417913789:geom_line(aes(group = Race_Ethnicity)) +
1636417913801:scale_colour_brewer(palette = "Spectral") +
1636417913818:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636417913836:labs(
1636417913847:title = "             Percent Disconnect
1636417913857:of Asian Subgroups in 2017 and 2018",
1636417913867:caption = "Data Source: Measure America",
1636417913878:x = "Year"
1636417913890:)
1636417939351:all_asian <- asian_subgroups |>
1636417939363:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636417939374:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636417939443:ggplot(data = all_asian, aes(
1636417939453:x = Year,
1636417939462:y = Percent,
1636417939474:color = Race_Ethnicity,
1636417939484:fill = Race_Ethnicity
1636417939494:)) +
1636417939504:geom_point(size = 2) +
1636417939514:geom_line(aes(group = Race_Ethnicity)) +
1636417939523:scale_fill_brewer(palette = "Spectral") +
1636417939533:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636417939543:labs(
1636417939554:title = "             Percent Disconnect
1636417939564:of Asian Subgroups in 2017 and 2018",
1636417939573:caption = "Data Source: Measure America",
1636417939583:x = "Year"
1636417939594:)
1636418063375:all_asian <- asian_subgroups |>
1636418063385:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636418063394:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636418063471:ggplot(data = all_asian, aes(
1636418063481:x = Year,
1636418063491:y = Percent,
1636418063501:color = Race_Ethnicity,
1636418063511:fill = Race_Ethnicity
1636418063521:)) +
1636418063531:geom_point(size = 2) +
1636418063541:geom_line(aes(group = Race_Ethnicity)) +
1636418063552:scale_colour_brewer(palette = "Spectral") +
1636418063563:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636418063574:labs(
1636418063585:title = "             Percent Disconnect
1636418063598:of Asian Subgroups in 2017 and 2018",
1636418063610:caption = "Data Source: Measure America",
1636418063620:x = "Year"
1636418063631:)
1636418090864:all_asian <- asian_subgroups |>
1636418090873:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636418090882:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636418090939:ggplot(data = all_asian, aes(
1636418090948:x = Year,
1636418090956:y = Percent,
1636418090965:color = Race_Ethnicity,
1636418090974:fill = Race_Ethnicity
1636418090982:)) +
1636418090991:geom_point(size = 2) +
1636418091000:geom_line(aes(group = Race_Ethnicity)) +
1636418091009:scale_colour_brewer(palette = "Spectral") +
1636418091017:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 0.2))) +
1636418091025:labs(
1636418091033:title = "             Percent Disconnect
1636418091042:of Asian Subgroups in 2017 and 2018",
1636418091050:caption = "Data Source: Measure America",
1636418091059:x = "Year"
1636418091067:)
1636418098727:all_asian <- asian_subgroups |>
1636418098736:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636418098746:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636418098806:ggplot(data = all_asian, aes(
1636418098816:x = Year,
1636418098827:y = Percent,
1636418098836:color = Race_Ethnicity,
1636418098845:fill = Race_Ethnicity
1636418098855:)) +
1636418098864:geom_point(size = 2) +
1636418098873:geom_line(aes(group = Race_Ethnicity)) +
1636418098883:scale_colour_brewer(palette = "Spectral") +
1636418098893:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636418098903:labs(
1636418098912:title = "             Percent Disconnect
1636418098921:of Asian Subgroups in 2017 and 2018",
1636418098930:caption = "Data Source: Measure America",
1636418098939:x = "Year"
1636418098946:)
1636418295143:all_latinx <- latin_subgroups |>
1636418295153:filter(Race_Ethnicity != "Latino",  Gender == "All", Race_Ethnicity != "All_races", Race_Ethnicity != "Latina")
1636418304262:all_latinx <- latinx_subgroups |>
1636418304270:filter(Race_Ethnicity != "Latino",  Gender == "All", Race_Ethnicity != "All_races", Race_Ethnicity != "Latina")
1636418423618:all_latinx <- latinx_subgroups |>
1636418423630:filter(Race_Ethnicity != "Latino",  Gender == "All", Race_Ethnicity != "All_races", Race_Ethnicity != "Latina") |>
1636418423641:filter(Race_Ethnicity != "Latinx", Race_Ethnicity != "Other Latino")
1636420610714:ggplot(data = all_latinx, aes(
1636420610724:x = Year,
1636420610733:y = Percent,
1636420610743:color = Race_Ethnicity,
1636420610751:fill = Race_Ethnicity
1636420610758:)) +
1636420610766:geom_point(size = 2) +
1636420610774:geom_line(aes(group = Race_Ethnicity)) +
1636420610782:scale_colour_brewer(palette = "Spectral") +
1636420610790:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636420610798:labs(
1636420610807:title = "                   Percent Disconnect
1636420610816:of Latinx Subgroups in 2017 and 2018",
1636420610823:caption = "Data Source: Measure America",
1636420610831:x = "Year"
1636420610841:)
1636421221041:ggplot(data = all_latinx, aes(
1636421221050:x = Year,
1636421221059:y = Percent,
1636421221067:color = Race_Ethnicity,
1636421221075:fill = Race_Ethnicity
1636421221084:)) +
1636421221093:geom_point(size = 2) +
1636421221103:geom_line(aes(group = Race_Ethnicity)) +
1636421221112:scale_colour_brewer(palette = "Spectral") +
1636421221122:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636421221131:labs(
1636421221139:title = "                   Percent Disconnect
1636421221147:of Latinx Subgroups in 2017 and 2018",
1636421221156:caption = "Data Source: Measure America",
1636421221165:x = "Year"
1636421221174:)
1636421339056:ggplot(data = all_latinx, aes(
1636421339064:x = Year,
1636421339072:y = Percent,
1636421339080:color = Race_Ethnicity,
1636421339088:fill = Race_Ethnicity
1636421339096:)) +
1636421339104:geom_point(size = 2)
1636421360499:ggplot(data = all_latinx, aes(
1636421360508:x = Year,
1636421360516:y = Percent,
1636421360523:color = Race_Ethnicity,
1636421360531:fill = Race_Ethnicity
1636421360539:)) +
1636421360547:geom_point(size = 2) +
1636421360557:geom_line(aes(group = Race_Ethnicity))
1636421428640:ggplot(data = all_latinx, aes(
1636421428648:x = Year,
1636421428655:y = Percent,
1636421428663:color = Race_Ethnicity,
1636421428672:fill = Race_Ethnicity
1636421428680:)) +
1636421428688:geom_point(size = 2) +
1636421428697:geom_line(aes(group = Race_Ethnicity)) +
1636421428706:scale_colour_brewer(palette = "Spectral") +
1636421428715:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1)))
1636421461825:ggplot(data = all_latinx, aes(
1636421461833:x = Year,
1636421461842:y = Percent,
1636421461851:color = Race_Ethnicity,
1636421461859:fill = Race_Ethnicity
1636421461869:)) +
1636421461879:geom_point(size = 2) +
1636421461888:geom_line(aes(group = Race_Ethnicity)) +
1636421461897:scale_colour_brewer(palette = "Spectral") +
1636421461906:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636421461915:labs(
1636421461923:title = "                   Percent Disconnect
1636421461932:of atinx Subgroups in 2017 and 2018",
1636421461940:caption = "Data Source: Measure America",
1636421461949:x = "Year"
1636421461957:)
1636421478114:all_asian <- asian_subgroups |>
1636421478125:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636421478136:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636421478210:ggplot(data = all_asian, aes(
1636421478222:x = Year,
1636421478231:y = Percent,
1636421478243:color = Race_Ethnicity,
1636421478252:fill = Race_Ethnicity
1636421478262:)) +
1636421478273:geom_point(size = 2) +
1636421478285:geom_line(aes(group = Race_Ethnicity)) +
1636421478294:scale_colour_brewer(palette = "Spectral") +
1636421478302:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636421478311:labs(
1636421478320:title = "                   Percent Disconnect
1636421478330:of Asian Subgroups in 2017 and 2018",
1636421478339:caption = "Data Source: Measure America",
1636421478348:x = "Year"
1636421478358:)
1636421478734:all_latinx <- latinx_subgroups |>
1636421478745:filter(Race_Ethnicity != "Latino",  Gender == "All", Race_Ethnicity != "All_races", Race_Ethnicity != "Latina") |>
1636421478763:filter(Race_Ethnicity != "Latinx", Race_Ethnicity != "Other Latino")
1636421478805:ggplot(data = all_latinx, aes(
1636421478814:x = Year,
1636421478821:y = Percent,
1636421478828:color = Race_Ethnicity,
1636421478836:fill = Race_Ethnicity
1636421478844:)) +
1636421478851:geom_point(size = 2) +
1636421478860:geom_line(aes(group = Race_Ethnicity)) +
1636421478869:scale_colour_brewer(palette = "Spectral") +
1636421478877:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636421478886:labs(
1636421478895:title = "                   Percent Disconnect
1636421478905:of Latinx Subgroups in 2017 and 2018",
1636421478914:caption = "Data Source: Measure America",
1636421478925:x = "Year"
1636421478934:)
1636421859731:all_asian <- asian_subgroups |>
1636421859741:filter(Race_Ethnicity == "Asian", Gender != "All")
1636421859799:all_latinx <- latinx_subgroups |>
1636421859809:filter(Race_Ethnicity == "Latino" |
1636421859819:Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636421859828:filter(Gender != "All") |>
1636421859838:mutate(
1636421859876:Race_Ethnicity = case_when(
1636421859887:Race_Ethnicity == "Latino" ~ "Latinx",
1636421859896:Race_Ethnicity == "Latina" ~ "Latinx",
1636421859906:TRUE ~  Race_Ethnicity
1636421859916:)
1636421859926:)
1636421859966:all_latinx <- na.omit(all_latinx)
1636421859997:merged <- rbind(all_asian, all_latinx)
1636421860024:ggplot(data = merged, aes(
1636421860033:x = Year,
1636421860043:y = Percent,
1636421860053:color = Gender,
1636421860063:fill = Gender
1636421860072:)) +
1636421860082:geom_point(size = 2) +
1636421860091:geom_line(aes(group = Gender)) +
1636421860100:facet_wrap( ~ Race_Ethnicity) +
1636421860110:scale_colour_brewer(palette = "Set2") +
1636421860120:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636421860130:labs(
1636421860139:title = "                                        Percent Disconnect
1636421860149:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636421860159:caption = "Data Source: Measure America",
1636421860172:x = "Year"
1636421860182:)
1636422025997:#making placeholder variables for data that needs to be graphed
1636422026007:all_asian <- asian_subgroups |>
1636422026017:filter(Race_Ethnicity == "Asian", Gender == "All")
1636422026073:#Latino and Latinx were different variables in the data so we replaced Latino with Latinx them to one to be able to get the 2017 and 2018 dates correctly.
1636422026084:all_latinx <- latinx_subgroups |>
1636422026094:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636422026105:filter(Gender == "All") |>
1636422026116:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636422026156:#omitting missing values
1636422026167:all_latinx <- na.omit(all_latinx)
1636422026192:#merging dataframes to make one
1636422026205:merged <- rbind(all_asian, all_latinx)
1636422026244:ggplot(data = merged,
1636422026255:aes(
1636422026267:x = Year,
1636422026278:y = Percent,
1636422026289:color = Race_Ethnicity,
1636422026298:fill = Race_Ethnicity
1636422026308:)) +
1636422026317:geom_point(size = 2) +
1636422026326:geom_line(aes(group = Race_Ethnicity)) +
1636422026336:scale_colour_brewer(palette = "Set1") +
1636422026345:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636422026355:labs(
1636422026364:title = "                             Total Percent Disconnect
1636422026373:of Asian and Latinx Subgroups in 2017 and 2018",
1636422026383:caption = "Data Source: Measure America",
1636422026392:x = "Year"
1636422026400:)
1636422026731:all_asian <- asian_subgroups |>
1636422026741:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636422026751:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636422026802:ggplot(data = all_asian, aes(
1636422026812:x = Year,
1636422026821:y = Percent,
1636422026831:color = Race_Ethnicity,
1636422026840:fill = Race_Ethnicity
1636422026851:)) +
1636422026860:geom_point(size = 2) +
1636422026870:geom_line(aes(group = Race_Ethnicity)) +
1636422026879:scale_colour_brewer(palette = "Spectral") +
1636422026888:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636422026898:labs(
1636422026909:title = "                   Percent Disconnect
1636422026919:of Asian Subgroups in 2017 and 2018",
1636422026929:caption = "Data Source: Measure America",
1636422026938:x = "Year"
1636422026948:)
1636422027561:all_latinx <- latinx_subgroups |>
1636422027571:filter(Race_Ethnicity != "Latino",  Gender == "All", Race_Ethnicity != "All_races", Race_Ethnicity != "Latina") |>
1636422027581:filter(Race_Ethnicity != "Latinx", Race_Ethnicity != "Other Latino")
1636422027630:ggplot(data = all_latinx, aes(
1636422027640:x = Year,
1636422027649:y = Percent,
1636422027660:color = Race_Ethnicity,
1636422027669:fill = Race_Ethnicity
1636422027678:)) +
1636422027687:geom_point(size = 2) +
1636422027697:geom_line(aes(group = Race_Ethnicity)) +
1636422027707:scale_colour_brewer(palette = "Spectral") +
1636422027715:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636422027724:labs(
1636422027733:title = "                   Percent Disconnect
1636422027742:of Latinx Subgroups in 2017 and 2018",
1636422027750:caption = "Data Source: Measure America",
1636422027759:x = "Year"
1636422027769:)
1636422142066:all_asian <- asian_subgroups |>
1636422142074:filter(Race_Ethnicity == "Asian", Gender != "All")
1636422143142:all_latinx <- latinx_subgroups |>
1636422143150:filter(Race_Ethnicity == "Latino" |
1636422143158:Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636422143165:filter(Gender != "All") |>
1636422143173:mutate(
1636422143180:Race_Ethnicity = case_when(
1636422143187:Race_Ethnicity == "Latino" ~ "Latinx",
1636422143194:Race_Ethnicity == "Latina" ~ "Latinx",
1636422143201:TRUE ~  Race_Ethnicity
1636422143210:)
1636422143217:)
1636422146523:merged <- rbind(all_asian, all_latinx)
1636422237506:all_asian <- asian_subgroups |>
1636422237517:filter(Race_Ethnicity != "Asian", Gender != "All", Race_Ethnicity != "All_races" )
1636422302423:all_asian <- asian_subgroups |>
1636422302431:filter(Race_Ethnicity != "Asian", Gender != "All", Race_Ethnicity != "All_races" ) |>
1636422302439:filter(Race_Ethnicity != "Hmong")
1636422366940:all_latinx <- latinx_subgroups |>
1636422366949:filter(Race_Ethnicity != "Latino" |
1636422366957:Race_Ethnicity != "Latinx" | Race_Ethnicity != "Latina") |>
1636422366965:filter(Gender != "All")
1636422401404:all_latinx <- latinx_subgroups |>
1636422401411:filter(Race_Ethnicity != "Latino",Race_Ethnicity != "Latinx", Race_Ethnicity != "Latina") |>
1636422401422:filter(Gender != "All")
1636422630384:all_latinx <- latinx_subgroups |>
1636422630392:filter(Race_Ethnicity != "Latino",Race_Ethnicity != "Latinx", Race_Ethnicity != "Latina") |>
1636422630402:filter(Gender != "All") |>
1636422630410:filter(Race_Ethnicity != "South American",Race_Ethnicity != "Other Latino", Race_Ethnicity != "Other Latina" )
1636422722862:ggplot(data = all_latinx, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636422722872:geom_point(size = 2)+
1636422722883:geom_line(size = 0.5) +
1636422722894:facet_wrap(~Race_Ethnicity)+
1636422722905:scale_colour_brewer(palette = "Set2")
1636422952310:all_asian <- asian_subgroups |>
1636422952320:filter(Race_Ethnicity == "Asian", Gender != "All")
1636422952380:all_latinx <- latinx_subgroups |>
1636422952391:filter(Race_Ethnicity == "Latino" |
1636422952401:Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636422952411:filter(Gender != "All") |>
1636422952420:mutate(
1636422952431:Race_Ethnicity = case_when(
1636422952440:Race_Ethnicity == "Latino" ~ "Latinx",
1636422952449:Race_Ethnicity == "Latina" ~ "Latinx",
1636422952459:TRUE ~  Race_Ethnicity
1636422952469:)
1636422952478:)
1636422952517:all_latinx <- na.omit(all_latinx)
1636422952549:merged <- rbind(all_asian, all_latinx)
1636422952576:ggplot(data = merged, aes(
1636422952585:x = Year,
1636422952595:y = Percent,
1636422952605:color = Gender,
1636422952615:fill = Gender
1636422952625:)) +
1636422952635:geom_point(size = 2) +
1636422952645:geom_line(aes(group = Gender)) +
1636422952655:facet_wrap( ~ Race_Ethnicity) +
1636422952664:scale_colour_brewer(palette = "Set2") +
1636422952675:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636422952686:labs(
1636422952697:title = "                                        Percent Disconnect
1636422952708:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636422952718:caption = "Data Source: Measure America",
1636422952731:x = "Year"
1636422952741:)
1636423000736:all_asian <- asian_subgroups |>
1636423000747:filter(Race_Ethnicity == "Asian", Gender != "All")
1636423000801:all_latinx <- latinx_subgroups |>
1636423000810:filter(Race_Ethnicity == "Latino" |
1636423000819:Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636423000830:filter(Gender != "All") |>
1636423000840:mutate(
1636423000855:Race_Ethnicity = case_when(
1636423000864:Race_Ethnicity == "Latino" ~ "Latinx",
1636423000873:Race_Ethnicity == "Latina" ~ "Latinx",
1636423000883:TRUE ~  Race_Ethnicity
1636423000893:)
1636423000902:)
1636423000932:all_latinx <- na.omit(all_latinx)
1636423000961:merged <- rbind(all_asian, all_latinx)
1636423000987:ggplot(data = merged, aes(
1636423001002:x = Year,
1636423001012:y = Percent,
1636423001020:color = Gender,
1636423001030:fill = Gender
1636423001039:)) +
1636423001049:geom_point(size = 2) +
1636423001058:geom_line(aes(group = Gender)) +
1636423001069:facet_wrap( ~ Race_Ethnicity) +
1636423001079:scale_colour_brewer(palette = "Set2") +
1636423001089:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636423001099:labs(
1636423001109:title = "                                        Percent Disconnect
1636423001118:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636423001128:caption = "Data Source: Measure America",
1636423001137:x = "Year"
1636423001147:)
1636423001608:all_asian <- asian_subgroups |>
1636423001618:filter(Race_Ethnicity != "Asian", Gender != "All", Race_Ethnicity != "All_races" ) |>
1636423001627:filter(Race_Ethnicity != "Hmong")
1636423001670:all_latinx <- latinx_subgroups |>
1636423001681:filter(Race_Ethnicity != "Latino",Race_Ethnicity != "Latinx", Race_Ethnicity != "Latina") |>
1636423001691:filter(Gender != "All") |>
1636423001701:filter(Race_Ethnicity != "South American",Race_Ethnicity != "Other Latino", Race_Ethnicity != "Other Latina" )
1636423001752:all_latinx <- na.omit(all_latinx)
1636423001783:merged <- rbind(all_asian, all_latinx)
1636423001821:ggplot(data = merged, aes(
1636423001832:x = Year,
1636423001842:y = Percent,
1636423001853:color = Gender,
1636423001864:fill = Gender
1636423001874:)) +
1636423001884:geom_point(size = 2) +
1636423001894:geom_line(aes(group = Gender)) +
1636423001904:facet_wrap( ~ Race_Ethnicity) +
1636423001914:scale_colour_brewer(palette = "Set2") +
1636423001925:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636423001934:labs(
1636423001943:title = "                                        Percent Disconnect
1636423001953:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636423001963:caption = "Data Source: Measure America",
1636423001973:x = "Year"
1636423001983:)
1636423002837:ggplot(data = all_latinx, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636423002849:geom_point(size = 2)+
1636423002862:geom_line(aes(group = Race_Ethnicity)) +
1636423002874:facet_wrap(~Race_Ethnicity)+
1636423002887:scale_colour_brewer(palette = "Set2")
1636423159974:ggplot(data = merged, aes(
1636423159983:x = Year,
1636423159993:y = Percent,
1636423160001:color = Gender,
1636423160009:fill = Gender
1636423160016:)) +
1636423160024:geom_point(size = 2) +
1636423160033:geom_line(aes(group = Gender)) +
1636423160040:facet_wrap( ~ Race_Ethnicity) +
1636423160048:scale_colour_brewer(palette = "Set2") +
1636423160056:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 5))) +
1636423160064:labs(
1636423160072:title = "                                        Percent Disconnect
1636423160080:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636423160088:caption = "Data Source: Measure America",
1636423160096:x = "Year"
1636423160103:)
1636423449707:merged$Race_Ethnicity <- factor(merged$Race_Ethnicity, levels = c("Central American", "Mexican", "Puerto Rican, Dominican, Cuban", "Chinese", "Vietnamese", "Indian", "Korean", "Filipino"))
1636423455949:ggplot(data = merged, aes(
1636423455958:x = Year,
1636423455966:y = Percent,
1636423455974:color = Gender,
1636423455981:fill = Gender
1636423455989:)) +
1636423455998:geom_point(size = 2) +
1636423456006:geom_line(aes(group = Gender)) +
1636423456016:facet_wrap( ~ Race_Ethnicity) +
1636423456026:scale_colour_brewer(palette = "Set2") +
1636423456038:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 5))) +
1636423456048:labs(
1636423456056:title = "                                        Percent Disconnect
1636423456064:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636423456072:caption = "Data Source: Measure America",
1636423456080:x = "Year"
1636423456089:)
1636423508784:all_asian <- asian_subgroups |>
1636423508794:filter(Race_Ethnicity == "Asian", Gender != "All")
1636423508828:all_latinx <- latinx_subgroups |>
1636423508838:filter(Race_Ethnicity == "Latino" |
1636423508847:Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636423508858:filter(Gender != "All") |>
1636423508867:mutate(
1636423508876:Race_Ethnicity = case_when(
1636423508885:Race_Ethnicity == "Latino" ~ "Latinx",
1636423508895:Race_Ethnicity == "Latina" ~ "Latinx",
1636423508905:TRUE ~  Race_Ethnicity
1636423508914:)
1636423508924:)
1636423508968:all_latinx <- na.omit(all_latinx)
1636423509000:merged <- rbind(all_asian, all_latinx)
1636423509029:ggplot(data = merged, aes(
1636423509039:x = Year,
1636423509049:y = Percent,
1636423509058:color = Gender,
1636423509068:fill = Gender
1636423509077:)) +
1636423509086:geom_point(size = 2) +
1636423509096:geom_line(aes(group = Gender)) +
1636423509105:facet_wrap( ~ Race_Ethnicity) +
1636423509114:scale_colour_brewer(palette = "Set2") +
1636423509123:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636423509132:labs(
1636423509142:title = "                                        Percent Disconnect
1636423509152:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636423509162:caption = "Data Source: Measure America",
1636423509172:x = "Year"
1636423509181:)
1636423509547:all_asian <- asian_subgroups |>
1636423509557:filter(Race_Ethnicity != "Asian", Gender != "All", Race_Ethnicity != "All_races" ) |>
1636423509566:filter(Race_Ethnicity != "Hmong")
1636423509611:all_latinx <- latinx_subgroups |>
1636423509621:filter(Race_Ethnicity != "Latino",Race_Ethnicity != "Latinx", Race_Ethnicity != "Latina") |>
1636423509630:filter(Gender != "All") |>
1636423509639:filter(Race_Ethnicity != "South American",Race_Ethnicity != "Other Latino", Race_Ethnicity != "Other Latina" )
1636423509677:all_latinx <- na.omit(all_latinx)
1636423509708:merged <- rbind(all_asian, all_latinx)
1636423509742:merged$Race_Ethnicity <- factor(merged$Race_Ethnicity, levels = c("Central American", "Mexican", "Puerto Rican, Dominican, Cuban", "Chinese", "Vietnamese", "Indian", "Korean", "Filipino"))
1636423509774:ggplot(data = merged, aes(
1636423509785:x = Year,
1636423509795:y = Percent,
1636423509805:color = Gender,
1636423509815:fill = Gender
1636423509825:)) +
1636423509834:geom_point(size = 2) +
1636423509844:geom_line(aes(group = Gender)) +
1636423509856:facet_wrap( ~ Race_Ethnicity) +
1636423509865:scale_colour_brewer(palette = "Set2") +
1636423509874:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 5))) +
1636423509884:labs(
1636423509892:title = "                                        Percent Disconnect
1636423509901:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636423509911:caption = "Data Source: Measure America",
1636423509920:x = "Year"
1636423509929:)
1636424119534:major_groups_long |>
1636424119546:filter(Race_Ethnicity == 'All_races', Gender == 'All') |>
1636424119557:ggplot(aes(x = Year, y = Percent)) +
1636424119598:geom_point(size = 3) +
1636424119609:geom_smooth(method = 'lm', se = FALSE)
1636424119870:compared_to_overall <- select(major_groups_long,"Race_Ethnicity", "Gender", 'Year', "Percent" )
1636424119908:compared_to_overall <- rbind(compared_to_overall, latinx_subgroups, asian_subgroups)
1636424119949:compared_to_overall|>
1636424119960:filter(grepl("2017|2018",Year))|>
1636424119972:ggplot(aes(Year, Percent, group = Race_Ethnicity, color = Race_Ethnicity))+
1636424119983:geom_smooth (method = 'lm', se = FALSE)
1636424120584:ggplot(major_groups_long, aes(Year,Percent, color = Race_Ethnicity)) +
1636424120594:#scale_color_viridis_d()+
1636424120605:geom_smooth(method = 'lm', se = FALSE)+
1636424120614:facet_wrap(~Gender)
1636425178918:major_groups_long |>
1636425178927:filter(Gender == "All",
1636425178936:Group != "United States") |>
1636425178945:ggplot(aes(x = Year, y = Percent, color = Race_Ethnicity)) +
1636425178953:geom_line( size = 0.5) +
1636425178961:geom_point( size = 3)
1636425202116:major_groups_long |>
1636425202125:filter(Gender == "All",
1636425202132:Group != "United States") |>
1636425202142:ggplot(aes(x = Year, y = Percent, color = Race_Ethnicity)) +
1636425202150:geom_line( size = 0.5) +
1636425202157:geom_point( size = 3) +
1636425202164:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))
1636425225761:major_groups_long |>
1636425225771:filter(Gender == "All",
1636425225779:Group != "United States") |>
1636425225787:ggplot(aes(x = Year, y = Percent, color = Race_Ethnicity)) +
1636425225794:geom_line( size = 0.5) +
1636425225802:geom_point( size = 3) +
1636425225810:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017)) +
1636425225818:scale_y_continuous(limits = c(0, 30), minor_breaks = seq(0, 30, 5))
1636425308809:major_groups_long |>
1636425308820:filter(Gender == "All",
1636425308832:Group != "United States") |>
1636425308842:ggplot(aes(x = Year, y = Percent, color = Race_Ethnicity)) +
1636425308854:geom_line( size = 0.5) +
1636425308866:geom_point( size = 3) +
1636425308876:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017)) +
1636425308888:scale_y_continuous(limits = c(0, 30), minor_breaks = seq(0, 30, 5))+
1636425308897:labs(title = "Percent Disconnect of all Major Races and
1636425308907:Ethnicities in the United States",
1636425308917:caption = "Data Source: Measure America",
1636425308927:x = "Year")
1636425956215:#plotting overall latinx percentages
1636425956224:all_latinx <- latinx_subgroups |>
1636425956234:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636425956242:filter(Gender != "All") |>
1636425956250:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx",
1636425956259:Race_Ethnicity == "Latina" ~ "Latinx",
1636425956269:TRUE ~  Race_Ethnicity))
1636426492286:major_groups_long |>
1636426492296:filter(Gender == "All", Race_Ethnicity == "White") |>
1636426492304:pull(Percent) |>
1636426492310:MannKendall(.) |>
1636426492318:summary()
1636426496805:major_groups_long |>
1636426496814:filter(Gender == "All", Race_Ethnicity == "White") |>
1636426496824:pull(Percent) |>
1636426496834:MannKendall() |>
1636426496843:summary()
1636426527471:install("Kendall")
1636426533836:install.packages("Kendall")
1636426546483:library(Kendall)
1636426552067:major_groups_long |>
1636426552076:filter(Gender == "All", Race_Ethnicity == "White") |>
1636426552084:pull(Percent) |>
1636426552092:MannKendall(.) |>
1636426552100:summary()
1636426558528:major_groups_long |>
1636426558538:filter(Gender == "All", Race_Ethnicity == "White") |>
1636426558547:pull(Percent) |>
1636426558555:MannKendall() |>
1636426558563:summary()
1636427150019:major_groups_long |>
1636427150033:filter(Gender == "All",
1636427150043:Race_Ethnicity != "All Races") |>
1636427150055:ggplot(aes(x = Year, y = Percent)) +
1636427150065:geom_smooth(method = "lm", color = "red") +
1636427150075:geom_point() +
1636427150084:facet_wrap(~Race_Ethnicity)
1636427184743:major_groups_long |>
1636427184752:filter(Gender == "All",
1636427184760:Race_Ethnicity != "All_races") |>
1636427184768:ggplot(aes(x = Year, y = Percent)) +
1636427184776:geom_smooth(method = "lm", color = "red") +
1636427184785:geom_point(size =1) +
1636427184797:facet_wrap(~Race_Ethnicity)
1636427233230:all_asian <- asian_subgroups |>
1636427233241:filter(Race_Ethnicity == "Asian", Gender != "All")
1636427233299:all_latinx <- latinx_subgroups |>
1636427233309:filter(Race_Ethnicity == "Latino" |
1636427233317:Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636427233327:filter(Gender != "All") |>
1636427233336:mutate(
1636427233344:Race_Ethnicity = case_when(
1636427233353:Race_Ethnicity == "Latino" ~ "Latinx",
1636427233361:Race_Ethnicity == "Latina" ~ "Latinx",
1636427233370:TRUE ~  Race_Ethnicity
1636427233410:)
1636427233419:)
1636427233456:all_latinx <- na.omit(all_latinx)
1636427233482:merged <- rbind(all_asian, all_latinx)
1636427233505:ggplot(data = merged, aes(
1636427233513:x = Year,
1636427233521:y = Percent,
1636427233529:color = Gender,
1636427233537:fill = Gender
1636427233545:)) +
1636427233553:geom_point(size = 2) +
1636427233562:geom_line(aes(group = Gender)) +
1636427233569:facet_wrap( ~ Race_Ethnicity) +
1636427233578:scale_colour_brewer(palette = "Set2") +
1636427233586:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636427233595:labs(
1636427233604:title = "                                        Percent Disconnect
1636427233614:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636427233623:caption = "Data Source: Measure America",
1636427233631:x = "Year"
1636427233642:)
1636427234041:all_asian <- asian_subgroups |>
1636427234052:filter(Race_Ethnicity != "Asian", Gender != "All", Race_Ethnicity != "All_races" ) |>
1636427234065:filter(Race_Ethnicity != "Hmong")
1636427234103:all_latinx <- latinx_subgroups |>
1636427234115:filter(Race_Ethnicity != "Latino",Race_Ethnicity != "Latinx", Race_Ethnicity != "Latina") |>
1636427234125:filter(Gender != "All") |>
1636427234136:filter(Race_Ethnicity != "South American",Race_Ethnicity != "Other Latino", Race_Ethnicity != "Other Latina" )
1636427234185:all_latinx <- na.omit(all_latinx)
1636427234214:merged <- rbind(all_asian, all_latinx)
1636427234243:merged$Race_Ethnicity <- factor(merged$Race_Ethnicity, levels = c("Central American", "Mexican", "Puerto Rican, Dominican, Cuban", "Chinese", "Vietnamese", "Indian", "Korean", "Filipino"))
1636427234274:ggplot(data = merged, aes(
1636427234285:x = Year,
1636427234296:y = Percent,
1636427234306:color = Gender,
1636427234316:fill = Gender
1636427234328:)) +
1636427234337:geom_point(size = 2) +
1636427234346:geom_line(aes(group = Gender)) +
1636427234354:facet_wrap( ~ Race_Ethnicity) +
1636427234363:scale_colour_brewer(palette = "Set2") +
1636427234372:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 5))) +
1636427234380:labs(
1636427234389:title = "                                        Percent Disconnect
1636427234398:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636427234408:caption = "Data Source: Measure America",
1636427234417:x = "Year"
1636427234427:)
1636427270894:major_groups_long |>
1636427270904:filter(Gender == "All",
1636427270913:Race_Ethnicity != "All_races") |>
1636427270922:ggplot(aes(x = Year, y = Percent)) +
1636427270931:geom_smooth(method = "lm", color = "red") +
1636427270940:geom_point(size =1) +
1636427270949:facet_wrap(~Race_Ethnicity) +
1636427270958:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))
1636427299633:major_groups_long |>
1636427299642:filter(Gender == "All",
1636427299650:Race_Ethnicity != "All_races") |>
1636427299658:ggplot(aes(x = Year, y = Percent)) +
1636427299666:geom_smooth(method = "lm", color = "red") +
1636427299674:geom_point(size =1) +
1636427299683:facet_wrap(~Race_Ethnicity, ncol = 2) +
1636427299691:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))
1636427317777:major_groups_long |>
1636427317788:filter(Gender == "All",
1636427317797:Race_Ethnicity != "All_races") |>
1636427317806:ggplot(aes(x = Year, y = Percent)) +
1636427317814:geom_smooth(method = "lm", color = "red") +
1636427317823:geom_point(size =1) +
1636427317834:facet_wrap(~Race_Ethnicity, ncol = 3) +
1636427317843:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))
1636427337962:major_groups_long |>
1636427337971:filter(Gender == "All",
1636427337980:Race_Ethnicity != "All_races") |>
1636427337988:ggplot(aes(x = Year, y = Percent)) +
1636427337997:geom_smooth(method = "lm", color = "red") +
1636427338004:geom_point(size =1) +
1636427338013:facet_wrap(~Race_Ethnicity, ncol = 3) +
1636427338024:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))
1636427446728:major_groups_long |>
1636427446736:filter(Gender == "All",
1636427446743:Race_Ethnicity != "All_races") |>
1636427446750:ggplot(aes(x = Year, y = Percent)) +
1636427446758:geom_smooth(method = "lm", color = "red") +
1636427446765:geom_point(size =1) +
1636427446773:facet_wrap(~Race_Ethnicity, ncol = 3) +
1636427446780:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))
1636427457310:major_groups_long |>
1636427457318:filter(Gender == "All",
1636427457326:Race_Ethnicity != "All_races") |>
1636427457334:ggplot(aes(x = Year, y = Percent)) +
1636427457341:geom_smooth(method = "lm", color = "red") +
1636427457349:geom_point(size =1) +
1636427457359:facet_wrap(~Race_Ethnicity, ncol = 3) +
1636427457367:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636427457374:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 5))) +
1636427457382:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636427457391:labs(
1636427457400:title = "Disconection Rates by Major Groups",
1636427457408:subtitle = "2008 - 2017",
1636427457415:caption = "Data Source: Measure America",
1636427457423:x = "Year"
1636427457430:)
1636427481452:major_groups_long |>
1636427481461:filter(Gender == "All",
1636427481469:Race_Ethnicity != "All_races") |>
1636427481477:ggplot(aes(x = Year, y = Percent)) +
1636427481485:geom_smooth(method = "lm", color = "red") +
1636427481493:geom_point(size =1) +
1636427481501:facet_wrap(~Race_Ethnicity, ncol = 3) +
1636427481509:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636427481516:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636427481525:labs(
1636427481533:title = "Disconection Rates by Major Groups",
1636427481541:subtitle = "2008 - 2017",
1636427481549:caption = "Data Source: Measure America",
1636427481558:x = "Year"
1636427481566:)
1636427519408:major_groups_long |>
1636427519417:filter(Gender == "All",
1636427519426:Race_Ethnicity != "All_races") |>
1636427519434:ggplot(aes(x = Year, y = Percent)) +
1636427519442:geom_smooth(method = "lm", color = "blue", size = 1 ) +
1636427519451:geom_point(size =1) +
1636427519459:facet_wrap(~Race_Ethnicity, ncol = 3) +
1636427519467:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636427519475:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636427519484:labs(
1636427519492:title = "Disconection Rates by Major Groups",
1636427519500:subtitle = "2008 - 2017",
1636427519508:caption = "Data Source: Measure America",
1636427519516:x = "Year"
1636427519524:)
1636427529439:major_groups_long |>
1636427529447:filter(Gender == "All",
1636427529454:Race_Ethnicity != "All_races") |>
1636427529462:ggplot(aes(x = Year, y = Percent)) +
1636427529470:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636427529479:geom_point(size =1) +
1636427529486:facet_wrap(~Race_Ethnicity, ncol = 3) +
1636427529493:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636427529500:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636427529507:labs(
1636427529514:title = "Disconection Rates by Major Groups",
1636427529522:subtitle = "2008 - 2017",
1636427529530:caption = "Data Source: Measure America",
1636427529537:x = "Year"
1636427529545:)
1636427705147:major_groups_long |>
1636427705156:filter(Gender != "All",
1636427705165:Race_Ethnicity == "All_races") |>
1636427705172:ggplot(aes(x = Year, y = Percent)) +
1636427705180:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636427705188:geom_point(size =1) +
1636427705196:facet_wrap(~Gender) +
1636427705204:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636427705213:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636427705221:labs(
1636427705228:title = "Youth Disconection Rates by Major Groups",
1636427705236:subtitle = "2008 - 2017",
1636427705244:caption = "Data Source: Measure America",
1636427705251:x = "Year"
1636427705258:)
1636427745639:major_groups_long |>
1636427745648:filter(Gender != "All",
1636427745656:Race_Ethnicity == "All_races") |>
1636427745664:ggplot(aes(x = Year, y = Percent)) +
1636427745671:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636427745679:geom_point(size =1) +
1636427745688:facet_wrap(~Gender) +
1636427745696:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636427745704:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636427745713:labs(
1636427745721:title = "Youth Disconection Rates of All Races by Gender",
1636427745729:subtitle = "2008 - 2017",
1636427745736:caption = "Data Source: Measure America",
1636427745744:x = "Year"
1636427745755:)
1636427767500:major_groups_long |>
1636427767510:filter(Gender == "All",
1636427767520:Race_Ethnicity != "All_races") |>
1636427767572:ggplot(aes(x = Year, y = Percent)) +
1636427767583:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636427767593:geom_point(size =1) +
1636427767604:facet_wrap(~Race_Ethnicity, ncol = 3) +
1636427767614:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636427767625:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636427767635:labs(
1636427767646:title = "Youth Disconection Rates by Major Groups",
1636427767656:subtitle = "2008 - 2017",
1636427767666:caption = "Data Source: Measure America",
1636427767676:x = "Year"
1636427767686:)
1636427768343:major_groups_long |>
1636427768353:filter(Gender != "All",
1636427768362:Race_Ethnicity == "All_races") |>
1636427768372:ggplot(aes(x = Year, y = Percent)) +
1636427768381:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636427768390:geom_point(size =1) +
1636427768400:facet_wrap(~Gender) +
1636427768409:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636427768419:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636427768428:labs(
1636427768437:title = "Youth Disconection Rates of All Races by Gender",
1636427768447:subtitle = "2008 - 2017",
1636427768458:caption = "Data Source: Measure America",
1636427768468:x = "Year"
1636427768477:)
1636427833984:major_groups_long |>
1636427833993:filter(Gender != "All",
1636427834002:Race_Ethnicity == "White") |>
1636427834010:ggplot(aes(x = Year, y = Percent)) +
1636427834018:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636427834027:geom_point(size =1) +
1636427834036:facet_wrap(~Gender) +
1636427834045:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636427834057:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636427834066:labs(
1636427834074:title = "Youth Disconection Rates of All Races by Gender",
1636427834082:subtitle = "2008 - 2017",
1636427834090:caption = "Data Source: Measure America",
1636427834099:x = "Year"
1636427834108:)
1636427888289:major_groups_long |>
1636427888298:filter(Race_Ethnicity == "White",
1636427888306:Gender != "All") |>
1636427888314:ggplot(aes(x = Year, y = Percent)) +
1636427888322:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636427888329:geom_point(size =1) +
1636427888337:facet_wrap(~Gender) +
1636427888345:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636427888353:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636427888362:labs(
1636427888370:title = "Youth Disconection Rates of All Races by Gender",
1636427888378:subtitle = "2008 - 2017",
1636427888386:caption = "Data Source: Measure America",
1636427888395:x = "Year"
1636427888403:)
1636427942024:major_groups_long |>
1636427942031:filter(Race_Ethnicity == "White",
1636427942039:Gender != "All") |>
1636427942048:ggplot(aes(x = Year, y = Percent)) +
1636427942055:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636427942062:geom_point(size =1) +
1636427942068:facet_wrap(Gender) +
1636427942075:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636427942083:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636427942091:labs(
1636427942098:title = "Youth Disconection Rates of All Races by Gender",
1636427942105:subtitle = "2008 - 2017",
1636427942111:caption = "Data Source: Measure America",
1636427942118:x = "Year"
1636427942126:)
1636427948911:major_groups_long |>
1636427948920:filter(Race_Ethnicity == "White",
1636427948929:Gender != "All") |>
1636427948938:ggplot(aes(x = Year, y = Percent)) +
1636427948946:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636427948954:geom_point(size =1) +
1636427948962:facet_wrap(~Gender) +
1636427948970:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636427948978:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636427948986:labs(
1636427948994:title = "Youth Disconection Rates of All Races by Gender",
1636427949002:subtitle = "2008 - 2017",
1636427949011:caption = "Data Source: Measure America",
1636427949020:x = "Year"
1636427949028:)
1636427966596:temp <- major_groups_long |>
1636427966605:filter(Race_Ethnicity == "White",
1636427966615:Gender != "All")
1636427971386:View(temp)
1636428008670:temp <- major_groups_long |>
1636428008679:filter(Race_Ethnicity == "White")
1636428032797:temp <- major_groups_long |>
1636428032809:filter(Race_Ethnicity == "White", Group != "White")
1636428066566:temp <- major_groups_long |>
1636428066576:filter(Group == "White Male", Group == "White Female")
1636428095634:temp <- major_groups_long |>
1636428095643:filter(Group == "White Male" | Group == "White Female")
1636428114702:major_groups_long |>
1636428114711:filter(Group == "White Male" | Group == "White Female") |>
1636428114719:ggplot(aes(x = Year, y = Percent)) +
1636428114726:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428114733:geom_point(size =1) +
1636428114742:facet_wrap(~Gender) +
1636428114749:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428114757:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428114764:labs(
1636428114770:title = "Youth Disconection Rates of All Races by Gender",
1636428114778:subtitle = "2008 - 2017",
1636428114785:caption = "Data Source: Measure America",
1636428114792:x = "Year"
1636428114800:)
1636428146957:major_groups_long |>
1636428146966:filter(Group == "White Male" | Group == "White Female") |>
1636428146974:ggplot(aes(x = Year, y = Percent)) +
1636428146982:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428146991:geom_point(size =1) +
1636428146998:facet_wrap(~Gender) +
1636428147006:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428147014:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428147022:labs(
1636428147029:title = "Youth Disconection Rates of White Individuals by Gender",
1636428147037:subtitle = "2008 - 2017",
1636428147045:caption = "Data Source: Measure America",
1636428147053:x = "Year"
1636428147061:)
1636428212645:major_groups_long |>
1636428212654:filter(Group == "Asian Male" | Group == "Asian Female") |>
1636428212662:ggplot(aes(x = Year, y = Percent)) +
1636428212670:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428212678:geom_point(size =1) +
1636428212686:facet_wrap(~Gender) +
1636428212694:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428212702:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428212710:labs(
1636428212719:title = "Youth Disconection Rates of White Individuals by Gender",
1636428212727:subtitle = "2008 - 2017",
1636428212735:caption = "Data Source: Measure America",
1636428212743:x = "Year"
1636428212751:)
1636428298007:major_groups_long |>
1636428298021:filter(Gender == "All",
1636428298075:Race_Ethnicity != "All_races") |>
1636428298086:ggplot(aes(x = Year, y = Percent)) +
1636428298096:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428298106:geom_point(size =1) +
1636428298116:facet_wrap(~Race_Ethnicity, ncol = 3) +
1636428298127:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428298137:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428298147:labs(
1636428298157:title = "Youth Disconection Rates by Major Groups",
1636428298167:subtitle = "2008 - 2017",
1636428298178:caption = "Data Source: Measure America",
1636428298188:x = "Year"
1636428298199:)
1636428298740:major_groups_long |>
1636428298749:filter(Gender != "All",
1636428298757:Race_Ethnicity == "All_races") |>
1636428298766:ggplot(aes(x = Year, y = Percent)) +
1636428298774:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428298784:geom_point(size =1) +
1636428298793:facet_wrap(~Gender) +
1636428298802:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428298810:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428298819:labs(
1636428298829:title = "Youth Disconection Rates of All Races by Gender",
1636428298841:subtitle = "2008 - 2017",
1636428298850:caption = "Data Source: Measure America",
1636428298860:x = "Year"
1636428298870:)
1636428299302:major_groups_long |>
1636428299311:filter(Group == "White Male" | Group == "White Female") |>
1636428299319:ggplot(aes(x = Year, y = Percent)) +
1636428299327:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428299335:geom_point(size =1) +
1636428299343:facet_wrap(~Gender) +
1636428299351:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428299359:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428299368:labs(
1636428299377:title = "Youth Disconection Rates of White Individuals by Gender",
1636428299392:subtitle = "2008 - 2017",
1636428299402:caption = "Data Source: Measure America",
1636428299410:x = "Year"
1636428299418:)
1636428299790:major_groups_long |>
1636428299798:filter(Group == "Asian Male" | Group == "Asian Female") |>
1636428299807:ggplot(aes(x = Year, y = Percent)) +
1636428299816:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428299823:geom_point(size =1) +
1636428299831:facet_wrap(~Gender) +
1636428299839:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428299847:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428299856:labs(
1636428299864:title = "Youth Disconection Rates of Asian Individuals by Gender",
1636428299872:subtitle = "2008 - 2017",
1636428299880:caption = "Data Source: Measure America",
1636428299887:x = "Year"
1636428299894:)
1636428300297:major_groups_long |>
1636428300313:filter(Group == "Latino Male" | Group == "Latina Female") |>
1636428300321:ggplot(aes(x = Year, y = Percent)) +
1636428300334:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428300346:geom_point(size =1) +
1636428300359:facet_wrap(~Gender) +
1636428300371:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428300383:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428300393:labs(
1636428300403:title = "Youth Disconection Rates of Latinx Individuals by Gender",
1636428300413:subtitle = "2008 - 2017",
1636428300423:caption = "Data Source: Measure America",
1636428300433:x = "Year"
1636428300443:)
1636428300887:major_groups_long |>
1636428300897:filter(Group == "Black Male" | Group == "Black Female") |>
1636428300908:ggplot(aes(x = Year, y = Percent)) +
1636428300918:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428300928:geom_point(size =1) +
1636428300939:facet_wrap(~Gender) +
1636428300949:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428300960:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428300970:labs(
1636428300980:title = "Youth Disconection Rates of Black Individuals by Gender",
1636428300990:subtitle = "2008 - 2017",
1636428301000:caption = "Data Source: Measure America",
1636428301012:x = "Year"
1636428301023:)
1636428301475:major_groups_long |>
1636428301486:filter(Group == "Native American Male" | Group == "Native American Female") |>
1636428301496:ggplot(aes(x = Year, y = Percent)) +
1636428301506:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428301516:geom_point(size =1) +
1636428301527:facet_wrap(~Gender) +
1636428301537:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428301549:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428301559:labs(
1636428301568:title = "Youth Disconection Rates of Native Americans by Gender",
1636428301578:subtitle = "2008 - 2017",
1636428301589:caption = "Data Source: Measure America",
1636428301600:x = "Year"
1636428301611:)
1636428349823:major_groups_long |>
1636428349833:filter(Gender == "All",
1636428349842:Race_Ethnicity != "All_races") |>
1636428349851:ggplot(aes(x = Year, y = Percent)) +
1636428349861:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428349873:geom_point(size =1) +
1636428349883:facet_wrap(~Race_Ethnicity, ncol = 3) +
1636428349893:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428349913:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428349931:labs(
1636428349942:title = "Youth Disconection Rates by Major Groups",
1636428349953:subtitle = "2008 - 2017",
1636428349963:caption = "Data Source: Measure America",
1636428349973:x = "Year"
1636428349983:)
1636428350541:major_groups_long |>
1636428350552:filter(Gender != "All",
1636428350562:Race_Ethnicity == "All_races") |>
1636428350572:ggplot(aes(x = Year, y = Percent)) +
1636428350583:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428350596:geom_point(size =1) +
1636428350609:facet_wrap(~Gender) +
1636428350620:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428350632:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428350651:labs(
1636428350664:title = "Youth Disconection Rates of All Major Groups by Gender",
1636428350676:subtitle = "2008 - 2017",
1636428350688:caption = "Data Source: Measure America",
1636428350700:x = "Year"
1636428350713:)
1636428351127:major_groups_long |>
1636428351136:filter(Group == "White Male" | Group == "White Female") |>
1636428351145:ggplot(aes(x = Year, y = Percent)) +
1636428351154:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428351164:geom_point(size =1) +
1636428351174:facet_wrap(~Gender) +
1636428351183:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428351193:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428351203:labs(
1636428351214:title = "Youth Disconection Rates of White Individuals by Gender",
1636428351223:subtitle = "2008 - 2017",
1636428351233:caption = "Data Source: Measure America",
1636428351243:x = "Year"
1636428351253:)
1636428351664:major_groups_long |>
1636428351674:filter(Group == "Asian Male" | Group == "Asian Female") |>
1636428351688:ggplot(aes(x = Year, y = Percent)) +
1636428351699:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428351707:geom_point(size =1) +
1636428351718:facet_wrap(~Gender) +
1636428351731:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428351740:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428351749:labs(
1636428351758:title = "Youth Disconection Rates of Asian Individuals by Gender",
1636428351767:subtitle = "2008 - 2017",
1636428351777:caption = "Data Source: Measure America",
1636428351786:x = "Year"
1636428351795:)
1636428352211:major_groups_long |>
1636428352222:filter(Group == "Latino Male" | Group == "Latina Female") |>
1636428352238:ggplot(aes(x = Year, y = Percent)) +
1636428352252:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428352268:geom_point(size =1) +
1636428352280:facet_wrap(~Gender) +
1636428352292:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428352301:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428352314:labs(
1636428352326:title = "Youth Disconection Rates of Latinx Individuals by Gender",
1636428352340:subtitle = "2008 - 2017",
1636428352351:caption = "Data Source: Measure America",
1636428352360:x = "Year"
1636428352369:)
1636428352764:major_groups_long |>
1636428352777:filter(Group == "Black Male" | Group == "Black Female") |>
1636428352787:ggplot(aes(x = Year, y = Percent)) +
1636428352799:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428352812:geom_point(size =1) +
1636428352825:facet_wrap(~Gender) +
1636428352838:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428352851:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428352863:labs(
1636428352873:title = "Youth Disconection Rates of Black Individuals by Gender",
1636428352885:subtitle = "2008 - 2017",
1636428352896:caption = "Data Source: Measure America",
1636428352907:x = "Year"
1636428352919:)
1636428353382:major_groups_long |>
1636428353394:filter(Group == "Native American Male" | Group == "Native American Female") |>
1636428353406:ggplot(aes(x = Year, y = Percent)) +
1636428353416:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636428353429:geom_point(size =1) +
1636428353441:facet_wrap(~Gender) +
1636428353452:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636428353466:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636428353477:labs(
1636428353489:title = "Youth Disconection Rates of Native Americans by Gender",
1636428353500:subtitle = "2008 - 2017",
1636428353512:caption = "Data Source: Measure America",
1636428353522:x = "Year"
1636428353533:)
1636428760147:major_groups_long |>
1636428760157:filter(Gender == "All", Race_Ethnicity == "Latino" | "Latina") |>
1636428760166:pull(Percent) |>
1636428760175:MannKendall() |>
1636428760183:summary()
1636428780635:major_groups_long |>
1636428780644:filter(Gender == "All", Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina") |>
1636428780654:pull(Percent) |>
1636428780665:MannKendall() |>
1636428780673:summary()
1636428817406:major_groups_long |>
1636428817454:filter(Gender == "All", Race_Ethnicity == "White") |>
1636428817465:pull(Percent) |>
1636428817476:MannKendall() |>
1636428817487:summary()
1636428817522:major_groups_long |>
1636428817534:filter(Gender == "All", Race_Ethnicity == "Asian") |>
1636428817545:pull(Percent) |>
1636428817555:MannKendall() |>
1636428817567:summary()
1636428817601:major_groups_long |>
1636428817612:filter(Gender == "All", Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina") |>
1636428817623:pull(Percent) |>
1636428817635:MannKendall() |>
1636428817645:summary()
1636428817676:major_groups_long |>
1636428817686:filter(Gender == "All", Race_Ethnicity == "Black") |>
1636428817696:pull(Percent) |>
1636428817707:MannKendall() |>
1636428817717:summary()
1636428817754:major_groups_long |>
1636428817765:filter(Gender == "All", Race_Ethnicity == "Native American") |>
1636428817776:pull(Percent) |>
1636428817786:MannKendall() |>
1636428817796:summary()
1636429136561:major_groups_long |>
1636429136573:filter(Gender == "All", Race_Ethnicity == "White") |>
1636429136585:pull(Percent) |>
1636429136639:MannKendall() |>
1636429136651:tidy()
1636429136689:major_groups_long |>
1636429136698:filter(Gender == "All", Race_Ethnicity == "Asian") |>
1636429136709:pull(Percent) |>
1636429136719:MannKendall() |>
1636429136729:tidy()
1636429136765:major_groups_long |>
1636429136776:filter(Gender == "All", Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina") |>
1636429136787:pull(Percent) |>
1636429136799:MannKendall() |>
1636429136811:tidy()
1636429136860:major_groups_long |>
1636429136870:filter(Gender == "All", Race_Ethnicity == "Black") |>
1636429136881:pull(Percent) |>
1636429136892:MannKendall() |>
1636429136902:tidy()
1636429136935:major_groups_long |>
1636429136945:filter(Gender == "All", Race_Ethnicity == "Native American") |>
1636429136955:pull(Percent) |>
1636429136965:MannKendall() |>
1636429136974:tidy()
1636429337241:major_groups_long |>
1636429337252:filter(Gender == "All", Race_Ethnicity == "Black") |>
1636429337262:pull(Percent) |>
1636429337271:MannKendall() |>
1636429337278:tidy()
1636429348384:major_groups_long |>
1636429348393:filter(Gender == "All", Race_Ethnicity == "Native American") |>
1636429348404:pull(Percent) |>
1636429348414:MannKendall() |>
1636429348425:tidy()
1636429364518:major_groups_long |>
1636429364528:filter(Gender == "All", Race_Ethnicity == "White") |>
1636429364539:pull(Percent) |>
1636429364589:MannKendall() |>
1636429364601:tidy()
1636429364635:print("Mann Kendall Score of -8 indicates a chance of monotonicity but a p value of 0.18 means the results are not statistically significant")
1636429364651:major_groups_long |>
1636429364662:filter(Gender == "All", Race_Ethnicity == "Asian") |>
1636429364672:pull(Percent) |>
1636429364682:MannKendall() |>
1636429364693:tidy()
1636429364729:print("Mann Kendall Score of -6 indicates a chance of monotonicity but a p value of 0.33 means the results are not statistically significant")
1636429364745:major_groups_long |>
1636429364754:filter(Gender == "All", Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina") |>
1636429364770:pull(Percent) |>
1636429364779:MannKendall() |>
1636429364789:tidy()
1636429364823:print("Mann Kendall Score of -11 indicates a chance of monotonicity but a p value of 0.06 means the results are not statistically significant but this result is closest to a significant p value")
1636429364837:major_groups_long |>
1636429364846:filter(Gender == "All", Race_Ethnicity == "Black") |>
1636429364854:pull(Percent) |>
1636429364864:MannKendall() |>
1636429364873:tidy()
1636429364909:print("Mann Kendall Score of -7 indicates a chance of monotonicity but a p value of 0.25  means the results are not statistically significant")
1636429364925:major_groups_long |>
1636429364934:filter(Gender == "All", Race_Ethnicity == "Native American") |>
1636429364943:pull(Percent) |>
1636429364953:MannKendall() |>
1636429364963:tidy()
1636429365001:print("Mann Kendall Score of -7 indicates a chance of monotonicity but a p value of 0.25  means the results are not statistically significant")
1636429665171:major_groups_long |>
1636429665183:filter(Gender == "All",
1636429665193:Race_Ethnicity != "All_races") |>
1636429665236:ggplot(aes(x = Year, y = Percent)) +
1636429665247:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636429665258:geom_point(size =1) +
1636429665268:facet_wrap(~Race_Ethnicity, ncol = 3) +
1636429665278:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636429665288:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636429665297:labs(
1636429665308:title = "Youth Disconection Rates by Major Groups",
1636429665319:subtitle = "2008 - 2017",
1636429665329:caption = "Data Source: Measure America",
1636429665340:x = "Year"
1636429665350:)
1636429665957:major_groups_long |>
1636429665967:filter(Gender != "All",
1636429665977:Race_Ethnicity == "All_races") |>
1636429665988:ggplot(aes(x = Year, y = Percent)) +
1636429665999:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636429666009:geom_point(size =1) +
1636429666019:facet_wrap(~Gender) +
1636429666030:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636429666043:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636429666053:labs(
1636429666063:title = "Youth Disconection Rates of All Major Groups by Gender",
1636429666074:subtitle = "2008 - 2017",
1636429666088:caption = "Data Source: Measure America",
1636429666099:x = "Year"
1636429666110:)
1636429666704:major_groups_long |>
1636429666714:filter(Group == "White Male" | Group == "White Female") |>
1636429666722:ggplot(aes(x = Year, y = Percent)) +
1636429666731:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636429666739:geom_point(size =1) +
1636429666747:facet_wrap(~Gender) +
1636429666756:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636429666764:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636429666772:labs(
1636429666779:title = "Youth Disconection Rates of White Individuals by Gender",
1636429666787:subtitle = "2008 - 2017",
1636429666795:caption = "Data Source: Measure America",
1636429666804:x = "Year"
1636429666812:)
1636429667231:major_groups_long |>
1636429667239:filter(Group == "Asian Male" | Group == "Asian Female") |>
1636429667250:ggplot(aes(x = Year, y = Percent)) +
1636429667265:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636429667276:geom_point(size =1) +
1636429667286:facet_wrap(~Gender) +
1636429667296:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636429667306:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636429667316:labs(
1636429667328:title = "Youth Disconection Rates of Asian Individuals by Gender",
1636429667340:subtitle = "2008 - 2017",
1636429667353:caption = "Data Source: Measure America",
1636429667365:x = "Year"
1636429667376:)
1636429667744:major_groups_long |>
1636429667755:filter(Group == "Latino Male" | Group == "Latina Female") |>
1636429667766:ggplot(aes(x = Year, y = Percent)) +
1636429667778:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636429667788:geom_point(size =1) +
1636429667798:facet_wrap(~Gender) +
1636429667809:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636429667820:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636429667830:labs(
1636429667840:title = "Youth Disconection Rates of Latinx Individuals by Gender",
1636429667852:subtitle = "2008 - 2017",
1636429667863:caption = "Data Source: Measure America",
1636429667875:x = "Year"
1636429667884:)
1636429668309:major_groups_long |>
1636429668316:filter(Group == "Black Male" | Group == "Black Female") |>
1636429668322:ggplot(aes(x = Year, y = Percent)) +
1636429668330:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636429668338:geom_point(size =1) +
1636429668347:facet_wrap(~Gender) +
1636429668355:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636429668362:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636429668368:labs(
1636429668376:title = "Youth Disconection Rates of Black Individuals by Gender",
1636429668383:subtitle = "2008 - 2017",
1636429668392:caption = "Data Source: Measure America",
1636429668402:x = "Year"
1636429668412:)
1636429668853:major_groups_long |>
1636429668860:filter(Group == "Native American Male" | Group == "Native American Female") |>
1636429668867:ggplot(aes(x = Year, y = Percent)) +
1636429668876:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636429668883:geom_point(size =1) +
1636429668892:facet_wrap(~Gender) +
1636429668902:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636429668911:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636429668919:labs(
1636429668928:title = "Youth Disconection Rates of Native Americans by Gender",
1636429668935:subtitle = "2008 - 2017",
1636429668943:caption = "Data Source: Measure America",
1636429668952:x = "Year"
1636429668961:)
1636429814813:major_groups_long |>
1636429814823:filter(Gender == "All",
1636429814831:Race_Ethnicity == "White") %>%
1636429814840:lm(Percent ~ Year, data = .)
1636429828672:major_groups_long |>
1636429828679:filter(Gender == "All",
1636429828686:Race_Ethnicity == "White") |>
1636429828693:lm(Percent ~ Year, data = .)
1636429836561:major_groups_long |>
1636429836570:filter(Gender == "All",
1636429836579:Race_Ethnicity == "White") |>
1636429836587:lm(Percent ~ Year)
1636429849604:major_groups_long |>
1636429849615:filter(Gender == "All",
1636429849627:Race_Ethnicity == "White") |>
1636429849637:lm(Percent ~ Year, data = major_groups_long)
1636429883512:major_groups_long |>
1636429883521:filter(Gender == "All",
1636429883528:Race_Ethnicity == "White") |>
1636429883536:lm(Percent ~ Year, data = .)
1636429901486:major_groups_long |>
1636429901494:filter(Gender == "All",
1636429901502:Race_Ethnicity == "White") |>
1636429901509:lm(Percent ~ Year)
1636429921715:major_groups_long |>
1636429921723:filter(Gender == "All",
1636429921730:Race_Ethnicity == "White") |>
1636429921738:lm(Percent ~ Year, data = major_groups_long)
1636429934587:major_groups_long |>
1636429934595:filter(Gender == "All",
1636429934602:Race_Ethnicity == "White") |>
1636429934611:lm(Percent ~ Year, data = major_groups_long) |>
1636429934618:summary()
1636429939825:major_groups_long |>
1636429939832:filter(Gender == "All",
1636429939839:Race_Ethnicity == "White") |>
1636429939846:lm(Percent ~ Year, data = .) |>
1636429939853:summary()
1636429979725:major_groups_long |>
1636429979737:filter(Gender == "All",
1636429979747:Race_Ethnicity == "White") |>
1636429979755:lm(Percent ~ Year, data = major_groups_long) |>
1636429979763:summary()
1636429988412:major_groups_long |>
1636429988422:filter(Gender == "All",
1636429988483:Race_Ethnicity == "White") |>
1636429988492:lm(Percent ~ Year, data = major_groups_long)
1636430034693:major_groups_long |>
1636430034702:filter(Gender == "All",
1636430034711:Race_Ethnicity == "White") |>
1636430034718:lm() |>
1636430034726:tidy()
1636430070627:major_groups_long |>
1636430070640:filter(Gender == "All",
1636430070649:Race_Ethnicity == "White") |>
1636430070661:lm (Percent ~ Year) |>
1636430070669:tidy()
1636430181665:major_groups_long |>
1636430181674:filter(Gender == "All",
1636430181681:Race_Ethnicity == "White") |>
1636430181688:set_engine("lm") |>
1636430181696:fit(Percent ~ Year)
1636430257302:temp <- major_groups_long |>
1636430257312:filter(Gender == "All",
1636430257320:Race_Ethnicity == "White")
1636430269469:simple.fit = lm(Sales~Spend, data=temp)
1636430283046:temp <- major_groups_long |>
1636430283056:filter(Gender == "All",
1636430283066:Race_Ethnicity == "White")
1636430284504:simple.fit = lm(Percent~Year, data=temp)
1636430299322:View(simple.fit)
1636430311760:simple.fit = lm(Percent~Year, data=temp) |>
1636430311769:tidy()
1636430323544:view(simple.fit)
1636430354550:simple.fit = lm(Percent~Year, data=temp)
1636430355279:simple.fit |>
1636430355287:tidy()
1636430432706:temp <- major_groups_long |>
1636430432714:filter(Gender == "All",
1636430432721:Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina")
1636430433706:lm = lm(Percent~Year, data=temp)
1636430434493:lm |>
1636430434502:tidy()
1636430455373:temp <- major_groups_long |>
1636430455384:filter(Gender == "All",
1636430455430:Race_Ethnicity == "White")
1636430455456:lm = lm(Percent~Year, data=temp)
1636430455523:lm |>
1636430455534:tidy()
1636430455577:temp <- major_groups_long |>
1636430455588:filter(Gender == "All",
1636430455598:Race_Ethnicity == "Asian")
1636430455623:lm = lm(Percent~Year, data=temp)
1636430455692:lm |>
1636430455702:tidy()
1636430455738:temp <- major_groups_long |>
1636430455749:filter(Gender == "All",
1636430455759:Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina")
1636430455786:lm = lm(Percent~Year, data=temp)
1636430455874:lm |>
1636430455885:tidy()
1636430455925:temp <- major_groups_long |>
1636430455935:filter(Gender == "All",
1636430455944:Race_Ethnicity == "Black")
1636430455972:lm = lm(Percent~Year, data=temp)
1636430456054:lm |>
1636430456064:tidy()
1636430456105:temp <- major_groups_long |>
1636430456117:filter(Gender == "All",
1636430456127:Race_Ethnicity == "Native American")
1636430456156:lm = lm(Percent~Year, data=temp)
1636430456239:lm |>
1636430456250:tidy()
1636430496067:temp <- major_groups_long |>
1636430496076:filter(Gender == "All",
1636430496086:Race_Ethnicity == "Latino" | Race_Ethnicity == "Latina")
1636430523069:temp <- major_groups_long |>
1636430523080:filter(Gender == "All",
1636430523088:Race_Ethnicity == "Asian")
1636430640434:temp <- major_groups_long |>
1636430640444:filter(Gender == "All",
1636430640452:Race_Ethnicity == "Latino")
1636430642852:lm = lm(Percent~Year, data=temp)
1636430643487:lm |>
1636430643496:tidy()
1636430675761:major_groups_long |>
1636430675773:filter(Gender == "All",
1636430675784:Race_Ethnicity != "All_races") |>
1636430675794:ggplot(aes(x = Year, y = Percent)) +
1636430675827:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636430675837:geom_point(size =1) +
1636430675847:facet_wrap(~Race_Ethnicity, ncol = 3) +
1636430675857:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636430675867:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636430675912:labs(
1636430675923:title = "Youth Disconection Rates by Major Groups",
1636430675934:subtitle = "2008 - 2017",
1636430675944:caption = "Data Source: Measure America",
1636430675954:x = "Year"
1636430675965:)
1636430676654:major_groups_long |>
1636430676663:filter(Gender != "All",
1636430676672:Race_Ethnicity == "All_races") |>
1636430676682:ggplot(aes(x = Year, y = Percent)) +
1636430676692:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636430676702:geom_point(size =1) +
1636430676712:facet_wrap(~Gender) +
1636430676721:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636430676731:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636430676740:labs(
1636430676750:title = "Youth Disconection Rates of All Major Groups by Gender",
1636430676760:subtitle = "2008 - 2017",
1636430676769:caption = "Data Source: Measure America",
1636430676779:x = "Year"
1636430676788:)
1636430677217:major_groups_long |>
1636430677228:filter(Group == "White Male" | Group == "White Female") |>
1636430677241:ggplot(aes(x = Year, y = Percent)) +
1636430677252:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636430677262:geom_point(size =1) +
1636430677290:facet_wrap(~Gender) +
1636430677305:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636430677319:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636430677332:labs(
1636430677347:title = "Youth Disconection Rates of White Individuals by Gender",
1636430677358:subtitle = "2008 - 2017",
1636430677369:caption = "Data Source: Measure America",
1636430677382:x = "Year"
1636430677395:)
1636430677878:major_groups_long |>
1636430677891:filter(Group == "Asian Male" | Group == "Asian Female") |>
1636430677902:ggplot(aes(x = Year, y = Percent)) +
1636430677910:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636430677919:geom_point(size =1) +
1636430677929:facet_wrap(~Gender) +
1636430677940:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636430677950:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636430677960:labs(
1636430677970:title = "Youth Disconection Rates of Asian Individuals by Gender",
1636430677979:subtitle = "2008 - 2017",
1636430677989:caption = "Data Source: Measure America",
1636430677998:x = "Year"
1636430678006:)
1636430678469:major_groups_long |>
1636430678480:filter(Group == "Latino Male" | Group == "Latina Female") |>
1636430678495:ggplot(aes(x = Year, y = Percent)) +
1636430678507:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636430678519:geom_point(size =1) +
1636430678530:facet_wrap(~Gender) +
1636430678542:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636430678552:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636430678564:labs(
1636430678579:title = "Youth Disconection Rates of Latinx Individuals by Gender",
1636430678590:subtitle = "2008 - 2017",
1636430678602:caption = "Data Source: Measure America",
1636430678612:x = "Year"
1636430678624:)
1636430679078:major_groups_long |>
1636430679088:filter(Group == "Black Male" | Group == "Black Female") |>
1636430679098:ggplot(aes(x = Year, y = Percent)) +
1636430679108:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636430679117:geom_point(size =1) +
1636430679125:facet_wrap(~Gender) +
1636430679134:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636430679142:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636430679151:labs(
1636430679160:title = "Youth Disconection Rates of Black Individuals by Gender",
1636430679170:subtitle = "2008 - 2017",
1636430679179:caption = "Data Source: Measure America",
1636430679189:x = "Year"
1636430679199:)
1636430679588:major_groups_long |>
1636430679599:filter(Group == "Native American Male" | Group == "Native American Female") |>
1636430679609:ggplot(aes(x = Year, y = Percent)) +
1636430679623:geom_smooth(method = "lm", color = "blue", size = 0.5 ) +
1636430679634:geom_point(size =1) +
1636430679643:facet_wrap(~Gender) +
1636430679655:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636430679666:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636430679678:labs(
1636430679689:title = "Youth Disconection Rates of Native Americans by Gender",
1636430679698:subtitle = "2008 - 2017",
1636430679708:caption = "Data Source: Measure America",
1636430679717:x = "Year"
1636430679727:)
1636430748550:#Find the p value for all the Major Groups
1636430748559:temp <- major_groups_long |>
1636430748613:filter(Gender == "All",
1636430748623:Race_Ethnicity == "White")
1636430748652:lm = lm(Percent~Year, data=temp)
1636430748746:lm |>
1636430748756:tidy()
1636430748789:temp <- major_groups_long |>
1636430748797:filter(Gender == "All",
1636430748805:Race_Ethnicity == "Asian")
1636430748826:lm = lm(Percent~Year, data=temp)
1636430748864:lm |>
1636430748874:tidy()
1636430748909:temp <- major_groups_long |>
1636430748918:filter(Gender == "All",
1636430748926:Race_Ethnicity == "Latino")
1636430748951:lm = lm(Percent~Year, data=temp)
1636430749031:lm |>
1636430749045:tidy()
1636430749079:temp <- major_groups_long |>
1636430749090:filter(Gender == "All",
1636430749102:Race_Ethnicity == "Black")
1636430749119:lm = lm(Percent~Year, data=temp)
1636430749160:lm |>
1636430749171:tidy()
1636430749215:temp <- major_groups_long |>
1636430749226:filter(Gender == "All",
1636430749240:Race_Ethnicity == "Native American")
1636430749272:lm = lm(Percent~Year, data=temp)
1636430749336:lm |>
1636430749347:tidy()
1636432994299:#making placeholder variables for data that needs to be graphed
1636432994310:all_asian <- asian_subgroups |>
1636432994333:filter(Race_Ethnicity == "Asian", Gender == "All")
1636432994392:#Latino and Latinx were different variables in the data so we replaced Latino with Latinx them to one to be able to get the 2017 and 2018 dates correctly.
1636432994411:all_latinx <- latinx_subgroups |>
1636432994421:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636432994430:filter(Gender == "All") |>
1636432994484:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636432994523:#omitting missing values
1636432994544:all_latinx <- na.omit(all_latinx)
1636432994568:#merging dataframes to make one
1636432994578:merged <- rbind(all_asian, all_latinx)
1636432994607:#plotting
1636432994617:ggplot(data = merged,
1636432994627:aes(
1636432994636:x = Year,
1636432994647:y = Percent,
1636432994658:color = Race_Ethnicity,
1636432994668:fill = Race_Ethnicity
1636432994678:)) +
1636432994688:geom_point(size = 2) +
1636432994698:geom_line(aes(group = Race_Ethnicity)) +
1636432994708:scale_colour_brewer(palette = "Set1") +
1636432994718:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636432994728:labs(
1636432994738:title = "                             Total Percent Disconnect
1636432994750:of Asian and Latinx Subgroups in 2017 and 2018",
1636432994763:caption = "Data Source: Measure America",
1636432994774:x = "Year"
1636432994784:)
1636432995098:#filtering for the data needed to plot trends of Asian subgroups, dropped any groups that had NA.
1636432995115:all_asian <- asian_subgroups |>
1636432995125:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636432995134:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636432995170:#plot
1636432995186:ggplot(data = all_asian, aes(
1636432995197:x = Year,
1636432995206:y = Percent,
1636432995216:color = Race_Ethnicity,
1636432995225:fill = Race_Ethnicity
1636432995235:)) +
1636432995243:geom_point(size = 2) +
1636432995254:geom_line(aes(group = Race_Ethnicity)) +
1636432995264:scale_colour_brewer(palette = "Spectral") +
1636432995272:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636432995284:labs(
1636432995296:title = "                   Percent Disconnect
1636432995305:of Asian Subgroups in 2017 and 2018",
1636432995314:caption = "Data Source: Measure America",
1636432995323:x = "Year"
1636432995333:)
1636432996084:all_latinx <- latinx_subgroups |>
1636432996094:filter(Race_Ethnicity != "Latino",  Gender == "All", Race_Ethnicity != "All_races", Race_Ethnicity != "Latina") |>
1636432996104:filter(Race_Ethnicity != "Latinx", Race_Ethnicity != "Other Latino")
1636432996151:ggplot(data = all_latinx, aes(
1636432996162:x = Year,
1636432996174:y = Percent,
1636432996185:color = Race_Ethnicity,
1636432996195:fill = Race_Ethnicity
1636432996207:)) +
1636432996217:geom_point(size = 2) +
1636432996228:geom_line(aes(group = Race_Ethnicity)) +
1636432996238:scale_colour_brewer(palette = "Spectral") +
1636432996248:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636432996257:labs(
1636432996268:title = "                   Percent Disconnect
1636432996279:of Latinx Subgroups in 2017 and 2018",
1636432996290:caption = "Data Source: Measure America",
1636432996301:x = "Year"
1636432996311:)
1636432996827:all_latinx <- na.omit(all_latinx)
1636432996853:#merging dataframes to make one
1636432996869:merged <- rbind(all_asian, all_latinx)
1636432996920:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636432996931:geom_point(size = 2)+
1636432996941:geom_line(aes(group = Race_Ethnicity))+
1636432996952:scale_colour_brewer(palette = "Set2") +
1636432996963:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636432996974:labs(title = "                             Total Percent Disconnect
1636432996984:of Asian and Latinx Subgroups in 2017 and 2018",
1636432996993:caption = "Data Source: Measure America",
1636432997002:x = "Year")
1636432997702:#plotting overall latinx percentages
1636432997716:all_latinx <- latinx_subgroups |>
1636432997725:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636432997734:filter(Gender != "All") |>
1636432997743:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx",
1636432997752:Race_Ethnicity == "Latina" ~ "Latinx",
1636432997761:TRUE ~  Race_Ethnicity))
1636432997787:all_latinx <- na.omit(all_latinx)
1636432997821:ggplot(data = all_latinx, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636432997831:geom_point(size = 2)+
1636432997841:geom_line(aes(group = Gender))+
1636432997851:scale_colour_brewer(palette = "Set2") +
1636432997861:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636432997870:labs(title = "                             Percent Disconnect
1636432997880:by Gender of Latinx Subgroups in 2017 and 2018",
1636432997889:caption = "Data Source: Measure America",
1636432997899:x = "Year")
1636432998465:ggplot(data = all_asian, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636432998475:geom_point(size = 2)+
1636432998484:geom_line(aes(group = Gender))+
1636432998493:scale_colour_brewer(palette = "Set2") +
1636432998504:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636432998513:labs(title = "                             Percent Disconnect
1636432998522:by Gender of Asian Subgroups in 2017 and 2018",
1636432998532:caption = "Data Source: Measure America",
1636432998541:x = "Year")
1636433142349:#making placeholder variables for data that needs to be graphed
1636433142362:all_asian <- asian_subgroups |>
1636433142380:filter(Race_Ethnicity == "Asian", Gender == "All")
1636433142443:#Latino and Latinx were different variables in the data so we replaced Latino with Latinx them to one to be able to get the 2017 and 2018 dates correctly.
1636433142463:all_latinx <- latinx_subgroups |>
1636433142476:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636433142488:filter(Gender == "All") |>
1636433142498:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636433142538:#omitting missing values
1636433142558:all_latinx <- na.omit(all_latinx)
1636433142579:#merging dataframes to make one
1636433142591:merged <- rbind(all_asian, all_latinx)
1636433142615:#plotting
1636433142624:ggplot(data = merged,
1636433142632:aes(
1636433142639:x = Year,
1636433142647:y = Percent,
1636433142655:color = Race_Ethnicity,
1636433142663:fill = Race_Ethnicity
1636433142671:)) +
1636433142680:geom_point(size = 2) +
1636433142688:geom_line(aes(group = Race_Ethnicity)) +
1636433142696:scale_colour_brewer(palette = "Set1") +
1636433142704:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636433142712:labs(
1636433142720:title = "                             Total Percent Disconnect
1636433142729:of Asian and Latinx Subgroups in 2017 and 2018",
1636433142737:caption = "Data Source: Measure America",
1636433142745:x = "Year"
1636433142753:)
1636433143052:#filtering for the data needed to plot trends of Asian subgroups, dropped any groups that had NA.
1636433143063:all_asian <- asian_subgroups |>
1636433143071:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636433143078:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636433143101:#plot
1636433143111:ggplot(data = all_asian, aes(
1636433143120:x = Year,
1636433143128:y = Percent,
1636433143136:color = Race_Ethnicity,
1636433143148:fill = Race_Ethnicity
1636433143156:)) +
1636433143165:geom_point(size = 2) +
1636433143174:geom_line(aes(group = Race_Ethnicity)) +
1636433143182:scale_colour_brewer(palette = "Spectral") +
1636433143191:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636433143199:labs(
1636433143208:title = "                   Percent Disconnect
1636433143217:of Asian Subgroups in 2017 and 2018",
1636433143229:caption = "Data Source: Measure America",
1636433143241:x = "Year"
1636433143259:)
1636433143841:all_latinx <- latinx_subgroups |>
1636433143852:filter(Race_Ethnicity != "Latino",  Gender == "All", Race_Ethnicity != "All_races", Race_Ethnicity != "Latina") |>
1636433143862:filter(Race_Ethnicity != "Latinx", Race_Ethnicity != "Other Latino")
1636433143916:ggplot(data = all_latinx, aes(
1636433143927:x = Year,
1636433143937:y = Percent,
1636433143946:color = Race_Ethnicity,
1636433143955:fill = Race_Ethnicity
1636433143965:)) +
1636433143976:geom_point(size = 2) +
1636433143985:geom_line(aes(group = Race_Ethnicity)) +
1636433143996:scale_colour_brewer(palette = "Spectral") +
1636433144007:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636433144016:labs(
1636433144026:title = "                   Percent Disconnect
1636433144036:of Latinx Subgroups in 2017 and 2018",
1636433144046:caption = "Data Source: Measure America",
1636433144056:x = "Year"
1636433144066:)
1636433144632:all_latinx <- na.omit(all_latinx)
1636433144658:#merging dataframes to make one
1636433144672:merged <- rbind(all_asian, all_latinx)
1636433144718:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636433144728:geom_point(size = 2)+
1636433144738:geom_line(aes(group = Race_Ethnicity))+
1636433144747:scale_colour_brewer(palette = "Set2") +
1636433144758:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636433144769:labs(title = "                             Total Percent Disconnect
1636433144781:of Asian and Latinx Subgroups in 2017 and 2018",
1636433144792:caption = "Data Source: Measure America",
1636433144802:x = "Year")
1636433161295:all_asian <- asian_subgroups |>
1636433161307:filter(Race_Ethnicity == "Asian", Gender != "All")
1636433161367:all_latinx <- latinx_subgroups |>
1636433161376:filter(Race_Ethnicity == "Latino" |
1636433161387:Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636433161397:filter(Gender != "All") |>
1636433161408:mutate(
1636433161419:Race_Ethnicity = case_when(
1636433161429:Race_Ethnicity == "Latino" ~ "Latinx",
1636433161482:Race_Ethnicity == "Latina" ~ "Latinx",
1636433161493:TRUE ~  Race_Ethnicity
1636433161503:)
1636433161513:)
1636433161550:all_latinx <- na.omit(all_latinx)
1636433161580:merged <- rbind(all_asian, all_latinx)
1636433161608:ggplot(data = merged, aes(
1636433161618:x = Year,
1636433161628:y = Percent,
1636433161637:color = Gender,
1636433161649:fill = Gender
1636433161660:)) +
1636433161670:geom_point(size = 2) +
1636433161680:geom_line(aes(group = Gender)) +
1636433161690:facet_wrap( ~ Race_Ethnicity) +
1636433161703:scale_colour_brewer(palette = "Set2") +
1636433161716:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636433161728:labs(
1636433161739:title = "                                        Percent Disconnect
1636433161751:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636433161762:caption = "Data Source: Measure America",
1636433161774:x = "Year"
1636433161785:)
1636433162115:all_asian <- asian_subgroups |>
1636433162125:filter(Race_Ethnicity != "Asian", Gender != "All", Race_Ethnicity != "All_races" ) |>
1636433162136:filter(Race_Ethnicity != "Hmong")
1636433162177:all_latinx <- latinx_subgroups |>
1636433162184:filter(Race_Ethnicity != "Latino",Race_Ethnicity != "Latinx", Race_Ethnicity != "Latina") |>
1636433162193:filter(Gender != "All") |>
1636433162201:filter(Race_Ethnicity != "South American",Race_Ethnicity != "Other Latino", Race_Ethnicity != "Other Latina" )
1636433162245:all_latinx <- na.omit(all_latinx)
1636433162276:merged <- rbind(all_asian, all_latinx)
1636433162302:merged$Race_Ethnicity <- factor(merged$Race_Ethnicity, levels = c("Central American", "Mexican", "Puerto Rican, Dominican, Cuban", "Chinese", "Vietnamese", "Indian", "Korean", "Filipino"))
1636433162354:ggplot(data = merged, aes(
1636433162363:x = Year,
1636433162372:y = Percent,
1636433162496:color = Gender,
1636433162506:fill = Gender
1636433162515:)) +
1636433162525:geom_point(size = 2) +
1636433162534:geom_line(aes(group = Gender)) +
1636433162543:facet_wrap( ~ Race_Ethnicity) +
1636433162553:scale_colour_brewer(palette = "Set2") +
1636433162563:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 5))) +
1636433162572:labs(
1636433162582:title = "                                        Percent Disconnect
1636433162592:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636433162602:caption = "Data Source: Measure America",
1636433162611:x = "Year"
1636433162621:)
1636433184383:#created a temporary variable in order to manipulate information without affecting the whole dataframe itself. Filtered for any Race/Ethnicity in Major Groups that were labeled Latino Male or Latina Female and turned them both into Latinx so it would belong to one group like the rest of groups.
1636433184393:temp3 <- major_groups_long |>
1636433184404:mutate(Race_Ethnicity = case_when(Group == "Latino Male" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636433184414:mutate(Race_Ethnicity = case_when(Group == "Latina Female" ~ "Latinx", TRUE ~   Race_Ethnicity)) |>
1636433184445:filter(Race_Ethnicity != 'All_races', Gender != 'All')
1636433184497:#plotted graph, fixed axis so they included all the years from the data set. Separated each facet by Race/Ethnicity, fixed colors. Fixed grid and labeled.
1636433184507:ggplot(data = temp3, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636433184517:geom_point(size = 2)+
1636433184528:geom_line(size = 0.5) +
1636433184538:facet_wrap(~Race_Ethnicity)+
1636433184549:scale_colour_brewer(palette = "Set2") +
1636433184559:scale_x_continuous(breaks = c(2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017))+
1636433184570:scale_y_continuous(breaks = c(0, 5, 10, 15, 20, 25, 30, 35)) +
1636433184580:theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
1636433184633:theme(panel.grid.minor.x = element_blank())+
1636433184643:labs(title = "Percent Disconnect of Major Racial And Ethnic Groups by Gender",
1636433184654:caption = "Data Source: Measure America",
1636433184664:x = "Year")
1636433233673:all_asian <- asian_subgroups |>
1636433233710:filter(Race_Ethnicity == "Asian", Gender != "All")
1636433233747:all_latinx <- latinx_subgroups |>
1636433233758:filter(Race_Ethnicity == "Latino" |
1636433233771:Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636433233827:filter(Gender != "All") |>
1636433233838:mutate(
1636433233848:Race_Ethnicity = case_when(
1636433233860:Race_Ethnicity == "Latino" ~ "Latinx",
1636433233873:Race_Ethnicity == "Latina" ~ "Latinx",
1636433233885:TRUE ~  Race_Ethnicity
1636433233896:)
1636433233906:)
1636433233944:all_latinx <- na.omit(all_latinx)
1636433233979:merged <- rbind(all_asian, all_latinx)
1636433234018:ggplot(data = merged, aes(
1636433234029:x = Year,
1636433234038:y = Percent,
1636433234047:color = Gender,
1636433234057:fill = Gender
1636433234067:)) +
1636433234076:geom_point(size = 2) +
1636433234086:geom_line(aes(group = Gender)) +
1636433234098:facet_wrap( ~ Race_Ethnicity) +
1636433234108:scale_colour_brewer(palette = "Set2") +
1636433234119:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636433234130:labs(
1636433234140:title = "                                        Percent Disconnect
1636433234150:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636433234160:caption = "Data Source: Measure America",
1636433234169:x = "Year"
1636433234179:)
1636433234646:all_asian <- asian_subgroups |>
1636433234656:filter(Race_Ethnicity != "Asian", Gender != "All", Race_Ethnicity != "All_races" ) |>
1636433234666:filter(Race_Ethnicity != "Hmong")
1636433234705:all_latinx <- latinx_subgroups |>
1636433234715:filter(Race_Ethnicity != "Latino",Race_Ethnicity != "Latinx", Race_Ethnicity != "Latina") |>
1636433234724:filter(Gender != "All") |>
1636433234733:filter(Race_Ethnicity != "South American",Race_Ethnicity != "Other Latino", Race_Ethnicity != "Other Latina" )
1636433234783:all_latinx <- na.omit(all_latinx)
1636433234815:merged <- rbind(all_asian, all_latinx)
1636433234849:merged$Race_Ethnicity <- factor(merged$Race_Ethnicity, levels = c("Central American", "Mexican", "Puerto Rican, Dominican, Cuban", "Chinese", "Vietnamese", "Indian", "Korean", "Filipino"))
1636433234889:ggplot(data = merged, aes(
1636433234899:x = Year,
1636433234910:y = Percent,
1636433234921:color = Gender,
1636433234930:fill = Gender
1636433234941:)) +
1636433234950:geom_point(size = 2) +
1636433234960:geom_line(aes(group = Gender)) +
1636433234970:facet_wrap( ~ Race_Ethnicity) +
1636433234979:scale_colour_brewer(palette = "Set2") +
1636433234988:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 5))) +
1636433235004:labs(
1636433235019:title = "                                        Percent Disconnect
1636433235036:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636433235049:caption = "Data Source: Measure America",
1636433235062:x = "Year"
1636433235071:)
1636433269417:all_asian <- asian_subgroups |>
1636433269429:filter(Race_Ethnicity == "Asian", Gender != "All")
1636433269503:all_latinx <- latinx_subgroups |>
1636433269514:filter(Race_Ethnicity == "Latino" |
1636433269525:Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636433269535:filter(Gender != "All") |>
1636433269546:mutate(
1636433269558:Race_Ethnicity = case_when(
1636433269568:Race_Ethnicity == "Latino" ~ "Latinx",
1636433269578:Race_Ethnicity == "Latina" ~ "Latinx",
1636433269588:TRUE ~  Race_Ethnicity
1636433269598:)
1636433269608:)
1636433269642:all_latinx <- na.omit(all_latinx)
1636433269673:merged <- rbind(all_asian, all_latinx)
1636433269699:ggplot(data = merged, aes(
1636433269709:x = Year,
1636433269719:y = Percent,
1636433269729:color = Gender,
1636433269739:fill = Gender
1636433269748:)) +
1636433269758:geom_point(size = 2) +
1636433269767:geom_line(aes(group = Gender)) +
1636433269777:facet_wrap( ~ Race_Ethnicity) +
1636433269787:scale_colour_brewer(palette = "Set2") +
1636433269796:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636433269806:labs(
1636433269816:title = "                                        Percent Disconnect
1636433269826:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636433269836:caption = "Data Source: Measure America",
1636433269850:x = "Year"
1636433269861:)
1636433270202:all_asian <- asian_subgroups |>
1636433270214:filter(Race_Ethnicity != "Asian", Gender != "All", Race_Ethnicity != "All_races" ) |>
1636433270225:filter(Race_Ethnicity != "Hmong")
1636433270270:all_latinx <- latinx_subgroups |>
1636433270280:filter(Race_Ethnicity != "Latino",Race_Ethnicity != "Latinx", Race_Ethnicity != "Latina") |>
1636433270291:filter(Gender != "All") |>
1636433270302:filter(Race_Ethnicity != "South American",Race_Ethnicity != "Other Latino", Race_Ethnicity != "Other Latina" )
1636433270357:all_latinx <- na.omit(all_latinx)
1636433270387:merged <- rbind(all_asian, all_latinx)
1636433270416:merged$Race_Ethnicity <- factor(merged$Race_Ethnicity, levels = c("Central American", "Mexican", "Puerto Rican, Dominican, Cuban", "Chinese", "Vietnamese", "Indian", "Korean", "Filipino"))
1636433270448:ggplot(data = merged, aes(
1636433270458:x = Year,
1636433270469:y = Percent,
1636433270478:color = Gender,
1636433270487:fill = Gender
1636433270497:)) +
1636433270507:geom_point(size = 2) +
1636433270517:geom_line(aes(group = Gender)) +
1636433270525:facet_wrap( ~ Race_Ethnicity) +
1636433270534:scale_colour_brewer(palette = "Set2") +
1636433270544:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 5))) +
1636433270553:labs(
1636433270563:title = "                                        Percent Disconnect
1636433270574:by Gender of Latinx and Asian Subgroups in 2017 and 2018",
1636433270585:caption = "Data Source: Measure America",
1636433270596:x = "Year"
1636433270605:)
1636433292557:#making placeholder variables for data that needs to be graphed
1636433292567:all_asian <- asian_subgroups |>
1636433292607:filter(Race_Ethnicity == "Asian", Gender == "All")
1636433292638:#Latino and Latinx were different variables in the data so we replaced Latino with Latinx them to one to be able to get the 2017 and 2018 dates correctly.
1636433292700:all_latinx <- latinx_subgroups |>
1636433292710:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636433292721:filter(Gender == "All") |>
1636433292732:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636433292772:#omitting missing values
1636433292789:all_latinx <- na.omit(all_latinx)
1636433292810:#merging dataframes to make one
1636433292820:merged <- rbind(all_asian, all_latinx)
1636433292846:#plotting
1636433292856:ggplot(data = merged,
1636433292866:aes(
1636433292877:x = Year,
1636433292888:y = Percent,
1636433292897:color = Race_Ethnicity,
1636433292907:fill = Race_Ethnicity
1636433292917:)) +
1636433292939:geom_point(size = 2) +
1636433292953:geom_line(aes(group = Race_Ethnicity)) +
1636433292964:scale_colour_brewer(palette = "Set1") +
1636433292974:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636433292986:labs(
1636433292996:title = "                             Total Percent Disconnect
1636433293006:of Asian and Latinx Subgroups in 2017 and 2018",
1636433293017:caption = "Data Source: Measure America",
1636433293028:x = "Year"
1636433293037:)
1636433293286:#filtering for the data needed to plot trends of Asian subgroups, dropped any groups that had NA.
1636433293299:all_asian <- asian_subgroups |>
1636433293309:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636433293319:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636433293356:#plot
1636433293369:ggplot(data = all_asian, aes(
1636433293378:x = Year,
1636433293387:y = Percent,
1636433293396:color = Race_Ethnicity,
1636433293405:fill = Race_Ethnicity
1636433293413:)) +
1636433293422:geom_point(size = 2) +
1636433293432:geom_line(aes(group = Race_Ethnicity)) +
1636433293442:scale_colour_brewer(palette = "Spectral") +
1636433293453:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636433293465:labs(
1636433293475:title = "                   Percent Disconnect
1636433293485:of Asian Subgroups in 2017 and 2018",
1636433293495:caption = "Data Source: Measure America",
1636433293505:x = "Year"
1636433293515:)
1636433294126:all_latinx <- latinx_subgroups |>
1636433294136:filter(Race_Ethnicity != "Latino",  Gender == "All", Race_Ethnicity != "All_races", Race_Ethnicity != "Latina") |>
1636433294146:filter(Race_Ethnicity != "Latinx", Race_Ethnicity != "Other Latino")
1636433294199:ggplot(data = all_latinx, aes(
1636433294210:x = Year,
1636433294220:y = Percent,
1636433294230:color = Race_Ethnicity,
1636433294241:fill = Race_Ethnicity
1636433294251:)) +
1636433294261:geom_point(size = 2) +
1636433294272:geom_line(aes(group = Race_Ethnicity)) +
1636433294281:scale_colour_brewer(palette = "Spectral") +
1636433294292:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636433294302:labs(
1636433294314:title = "                   Percent Disconnect
1636433294325:of Latinx Subgroups in 2017 and 2018",
1636433294336:caption = "Data Source: Measure America",
1636433294347:x = "Year"
1636433294356:)
1636433294919:all_latinx <- na.omit(all_latinx)
1636433294944:#merging dataframes to make one
1636433294959:merged <- rbind(all_asian, all_latinx)
1636433295010:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636433295020:geom_point(size = 2)+
1636433295031:geom_line(aes(group = Race_Ethnicity))+
1636433295041:scale_colour_brewer(palette = "Set2") +
1636433295051:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636433295062:labs(title = "                             Total Percent Disconnect
1636433295073:of Asian and Latinx Subgroups in 2017 and 2018",
1636433295083:caption = "Data Source: Measure America",
1636433295093:x = "Year")
1636433295768:#plotting overall latinx percentages
1636433295783:all_latinx <- latinx_subgroups |>
1636433295793:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636433295802:filter(Gender != "All") |>
1636433295812:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx",
1636433295821:Race_Ethnicity == "Latina" ~ "Latinx",
1636433295830:TRUE ~  Race_Ethnicity))
1636433295863:all_latinx <- na.omit(all_latinx)
1636433295894:ggplot(data = all_latinx, aes(x = Year, y = Percent, color = Gender, fill = Gender)) +
1636433295903:geom_point(size = 2)+
1636433295912:geom_line(aes(group = Gender))+
1636433295921:scale_colour_brewer(palette = "Set2") +
1636433295930:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636433295938:labs(title = "                             Percent Disconnect
1636433295946:by Gender of Latinx Subgroups in 2017 and 2018",
1636433295954:caption = "Data Source: Measure America",
1636433295962:x = "Year")
1636433296528:#plotting overall asian
1636433331827:#making placeholder variables for data that needs to be graphed
1636433331838:all_asian <- asian_subgroups |>
1636433331855:filter(Race_Ethnicity == "Asian", Gender == "All")
1636433331887:#Latino and Latinx were different variables in the data so we replaced Latino with Latinx them to one to be able to get the 2017 and 2018 dates correctly.
1636433331905:all_latinx <- latinx_subgroups |>
1636433331915:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx") |>
1636433331926:filter(Gender == "All") |>
1636433331936:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx", TRUE ~   Race_Ethnicity))
1636433331972:#omitting missing values
1636433331989:all_latinx <- na.omit(all_latinx)
1636433332012:#merging dataframes to make one
1636433332022:merged <- rbind(all_asian, all_latinx)
1636433332050:#plotting
1636433332061:ggplot(data = merged,
1636433332072:aes(
1636433332082:x = Year,
1636433332093:y = Percent,
1636433332104:color = Race_Ethnicity,
1636433332115:fill = Race_Ethnicity
1636433332126:)) +
1636433332136:geom_point(size = 2) +
1636433332149:geom_line(aes(group = Race_Ethnicity)) +
1636433332161:scale_colour_brewer(palette = "Set1") +
1636433332176:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636433332188:labs(
1636433332200:title = "                             Total Percent Disconnect
1636433332212:of Asian and Latinx Subgroups in 2017 and 2018",
1636433332224:caption = "Data Source: Measure America",
1636433332236:x = "Year"
1636433332247:)
1636433332581:#filtering for the data needed to plot trends of Asian subgroups, dropped any groups that had NA.
1636433332596:all_asian <- asian_subgroups |>
1636433332606:filter(Race_Ethnicity != "Asian",  Gender == "All", Race_Ethnicity != "All_races") |>
1636433332616:filter(Race_Ethnicity != "Pakistani", Race_Ethnicity != "Two Or More", Race_Ethnicity != "Hmong", Race_Ethnicity != "Cambodian")
1636433332652:#plot
1636433332666:ggplot(data = all_asian, aes(
1636433332675:x = Year,
1636433332684:y = Percent,
1636433332693:color = Race_Ethnicity,
1636433332702:fill = Race_Ethnicity
1636433332711:)) +
1636433332722:geom_point(size = 2) +
1636433332731:geom_line(aes(group = Race_Ethnicity)) +
1636433332741:scale_colour_brewer(palette = "Spectral") +
1636433332750:scale_y_continuous(limits = c(0, 10), breaks = (seq(0, 10, 1))) +
1636433332760:labs(
1636433332769:title = "                   Percent Disconnect
1636433332779:of Asian Subgroups in 2017 and 2018",
1636433332789:caption = "Data Source: Measure America",
1636433332800:x = "Year"
1636433332810:)
1636433333325:all_latinx <- latinx_subgroups |>
1636433333338:filter(Race_Ethnicity != "Latino",  Gender == "All", Race_Ethnicity != "All_races", Race_Ethnicity != "Latina") |>
1636433333351:filter(Race_Ethnicity != "Latinx", Race_Ethnicity != "Other Latino")
1636433333394:ggplot(data = all_latinx, aes(
1636433333407:x = Year,
1636433333420:y = Percent,
1636433333429:color = Race_Ethnicity,
1636433333439:fill = Race_Ethnicity
1636433333453:)) +
1636433333467:geom_point(size = 2) +
1636433333483:geom_line(aes(group = Race_Ethnicity)) +
1636433333494:scale_colour_brewer(palette = "Spectral") +
1636433333506:scale_y_continuous(limits = c(0, 20), breaks = (seq(0, 20, 1))) +
1636433333519:labs(
1636433333531:title = "                   Percent Disconnect
1636433333542:of Latinx Subgroups in 2017 and 2018",
1636433333555:caption = "Data Source: Measure America",
1636433333566:x = "Year"
1636433333578:)
1636433334077:all_latinx <- na.omit(all_latinx)
1636433334103:#merging dataframes to make one
1636433334120:merged <- rbind(all_asian, all_latinx)
1636433334168:ggplot(data = merged, aes(x = Year, y = Percent, color = Race_Ethnicity, fill = Race_Ethnicity)) +
1636433334180:geom_point(size = 2)+
1636433334190:geom_line(aes(group = Race_Ethnicity))+
1636433334203:scale_colour_brewer(palette = "Set2") +
1636433334213:scale_y_continuous(limits = c(0, 20), breaks=(seq(0, 20, 1)))+
1636433334224:labs(title = "                             Total Percent Disconnect
1636433334234:of Asian and Latinx Subgroups in 2017 and 2018",
1636433334245:caption = "Data Source: Measure America",
1636433334255:x = "Year")
1636433335092:#plotting overall latinx percentages
1636433335107:all_latinx <- latinx_subgroups |>
1636433335116:filter(Race_Ethnicity == "Latino" | Race_Ethnicity == "Latinx" | Race_Ethnicity == "Latina") |>
1636433335127:filter(Gender != "All") |>
1636433335137:mutate(Race_Ethnicity = case_when(Race_Ethnicity == "Latino" ~ "Latinx",
1636433335147:Race_Ethnicity == "Latina" ~ "Latinx",
1636433335157:TRUE ~  Race_Ethnicity))
1636433335199:all_latinx <- na.omit(all_latinx)
1636433335231:#plotting overall asian
1636956711803:library(tidyverse)
1636956714475:library(broom)
1636956714500:library(tidymodels)
1636956808851:library(readr)
1636956831754:evals <- read_csv("data/evals-mod.csv")
1636957024421:m_bty <- lm(score ~ bty_avg, data= bty_avg)
1636957839732:View(evals)
1636957932402:bty_avg <- evals |>
1636957932412:rowwise() |>
1636957932424:mutate(bty_avg = mean( c(bty_f1lower, bty_m2upper) )) |>
1636957932436:ungroup()
1636957934729:m_bty <- lm(score ~ bty_avg, data= bty_avg)
1636957941239:m_bty
1636957974533:summary(m_bty)
1636958306753:m_bity_gen <- linear_reg() |>
1636958306766:set_engine("lm") |>
1636958306779:fit(score ~ bty_avg + gender, data = bty_avg)
1636958307596:tidy(m_bity_gen)
1636958326715:summary(m_bity_gen)
1637020946386:library(tidyverse)
1637020949813:library(broom)
1637020949856:library(tidymodels)
1637020952686:library(readr)
1637020959980:evals <- read_csv("data/evals-mod.csv")
1637020963453:bty_avg <- evals |>
1637020963465:rowwise() |>
1637020963476:mutate(bty_avg = mean( c(bty_f1lower, bty_m2upper) )) |>
1637020963486:ungroup()
1637020963661:m_bty <- lm(score ~ bty_avg, data= bty_avg)
1637020963792:summary(m_bty)
1637020966733:m_bity_gen <- linear_reg() |>
1637020966749:set_engine("lm") |>
1637020966766:fit(score ~ bty_avg + gender, data = bty_avg)
1637020967501:tidy(m_bity_gen)
1637022852581:glance(m_bity_gen)$r.squared
1637022882599:glance(m_bity_gen))$adj.r.squared
1637022890055:glance(m_bity_gen)$adj.r.squared
1637022891766:glance(m_bity_gen)$r.squared
1637022892788:glance(m_bity_gen)$adj.r.squared
1637025738346:temp <- lm(score ~ bty_avg + gender, data = bty_avg)
1637025742965:summary(temp)
1637026188086:evals2 <- evals |>
1637026188096:relevel(gender, ref = 'female')
1637026310584:lm(score ~ bty_avg + relevel(gender, ref = "female"), data = bty_avg)
1637026389659:lm(score ~ bty_avg + relevel(factor(gender), ref = "female"), data = bty_avg)
1637026521715:lm(score ~ bty_avg + factor(gender), data = bty_avg)
1637026607882:bty_avg <- bty_avg |>
1637026607892:factor(gender)
1637026624090:View(bty_avg)
1637026663355:bty_avg <- bty_avg |>
1637026663363:factor(bty_avg$gender)
1637026693206:summary(bty_avg$gender)
1637026707528:glimpse(bty_avg$gender)
1637026730189:factor(bty_avg$gender)
1637026743054:lm(score ~ bty_avg + factor(bty_avg$gender), data = bty_avg)
1637026850451:lm(score ~ factor(gender), data = bty_avg)
1637026953821:is.factor(bty_asg$gender)
1637026961993:is.factor(bty_avg$gender)
1637026976413:factor(bty_avg$gender)
1637027069577:levels(bty_avg$gender)
1637027093351:bty_avg$gender -> factor(bty_avg$gender)
1637027395763:count(bty_avg$gender)
1637027425106:bty_avg |>
1637027429195:count(gender)
1637028528211:lm(score ~ bty_avg + rank)
1637028548248:lm(score ~ bty_avg + rank, data = bty_avg)
1637033938676:library(OCSdata)
1637033939032:library(tidyverse)
1637033941777:library(pdftools)
1637033941852:library(readxl)
1637036908629:OCSdata::load_raw_data("ocs-bp-RTC-wrangling", outpath = '.')
1637036975328:poverty_rate_data <- read_xls("data/raw/Poverty/hstpov21.xls", skip=2)
1637036977333:crime_data <- read_lines("data/raw/Crime/CrimeStatebyState.csv",
1637036977342:skip = 2,
1637036977352:skip_empty_rows = TRUE)
1637037094550:OCSdata::load_raw_data("ocs-bp-RTC-wrangling", outpath = '.')
1637037107617:poverty_rate_data <- read_xls("data/raw/Poverty/hstpov21.xls", skip=2)
1637037109926:crime_data <- read_lines("data/raw/Crime/CrimeStatebyState.csv",
1637037109934:skip = 2,
1637037109942:skip_empty_rows = TRUE)
1637037110912:save(poverty_rate_data, # poverty data
1637037110919:crime_data, # crime data
1637037110926:DAWpaper, file = "data/imported_data_rtc.rda")
1637037131362:save(poverty_rate_data, # poverty data
1637037131371:crime_data, # crime data
1637037131380:file = "data/imported_data_rtc.rda")
1637037287817:colnames(poverty_rate_data) <- c("STATE", "Total", "Number", "Number_se",
1637037287829:"Percent", "Percent_se")
1637037287865:poverty_rate_data <- poverty_rate_data |>
1637037287877:filter(STATE != "STATE") |>
1637037287888:mutate(length_state = map_dbl(STATE, str_length)) |> # determine how long string in "STATE" column is
1637037287901:filter(length_state < 100) |> # filter to only include possible state lengths
1637037287926:mutate(STATE = str_replace(STATE, pattern = "D.C.",
1637037287936:replacement = "District of Columbia" ))
1637037314504:year_values <- poverty_rate_data |>
1637037314512:filter(str_detect(STATE, "[:digit:]")) |>
1637037314520:distinct(STATE)
1637037314843:year_values <- rep(pull(year_values, STATE), each = 52) # repeat values from STATE column 52 times each
1637037316785:poverty_rate_data <- poverty_rate_data |>
1637037316793:mutate(year_value = year_values) |>
1637037316801:select(-length_state) |>
1637037316808:filter(str_detect(STATE, "[:alpha:]"))
1637037331054:poverty_rate_data <- poverty_rate_data |>
1637037331062:filter(year_value != "2017") |>
1637037331069:filter(year_value != "2013 (18)") |>
1637037331077:mutate(YEAR = str_sub(year_value, start = 1, end=4)) |>
1637037331085:select(-c(Number, Number_se, Percent_se, Total, year_value)) |>
1637037331092:rename("VALUE" = Percent) |>
1637037331099:mutate(VARIABLE = "Poverty_rate",
1637037331107:YEAR = as.numeric(YEAR),
1637037331114:VALUE = as.numeric(VALUE))
1637037331507:poverty_rate_data
1637038050528:poverty_rate_data <- read_xls("data/raw/Poverty/hstpov21.xls", skip=2)
1637038064653:View(poverty_rate_data)
1637038085839:#first give column names, filtering out information,
1637038085847:colnames(poverty_rate_data) <- c("STATE", "Total", "Number", "Number_se",
1637038085854:"Percent", "Percent_se")
1637038092838:poverty_rate_data <- poverty_rate_data |>
1637038092847:filter(STATE != "STATE") |>
1637038092855:mutate(length_state = map_dbl(STATE, str_length)) |> # determine how long string is in the "STATE" column
1637038092862:filter(length_state < 100) |> # filter to only include lengths under 100
1637038092870:mutate(STATE = str_replace(STATE, pattern = "D.C.",
1637038092877:replacement = "District of Columbia" ))
1637038319539:#first give column names, filtering out information,
1637038319549:colnames(poverty_rate_data) <- c("STATE", "Total", "Number", "Number_se",
1637038319560:"Percent", "Percent_se")
1637038319636:poverty_rate_data <- poverty_rate_data |>
1637038319647:filter(STATE != "STATE") |>
1637038319658:mutate(length_state = map_dbl(STATE, str_length)) |> # determine how long string is in the "STATE" column
1637038319676:filter(length_state < 100) |> # filter to only include lengths under 100
1637038319693:mutate(STATE = str_replace(STATE, pattern = "D.C.",
1637038319703:replacement = "District of Columbia" ))
1637038342819:poverty_rate_data <- poverty_rate_data |>
1637038342827:filter(STATE != "STATE") |>
1637038342836:mutate(length_state = map_dbl(STATE, str_length)) |> # determine how long string is in the "STATE" column
1637038342847:filter(length_state < 100) |> # filter to only include lengths under 100
1637038342854:mutate(STATE = str_replace(STATE, pattern = "D.C.",
1637038342862:replacement = "District of Columbia" ))
1637038376497:#first give column names, filtering out information,
1637038376507:colnames(poverty_rate_data) <- c("STATE", "Total", "Number", "Number_se",
1637038376516:"Percent", "Percent_se")
1637038376570:poverty_rate_data <- poverty_rate_data |>
1637038376580:filter(STATE != "STATE") |>
1637038376590:mutate(length_state = map_dbl(STATE, str_length)) |> # determine how long string in "STATE" column is
1637038376599:filter(length_state < 100) |> # filter to only include possible state lengths
1637038376608:mutate(STATE = str_replace(STATE, pattern = "D.C.",
1637038376618:replacement = "District of Columbia" ))
1637038421065:#first give column names, filtering out information,
1637038421077:colnames(poverty_rate_data) <- c("STATE", "Total", "Number", "Number_se",
1637038421090:"Percent", "Percent_se")
1637038421154:poverty_rate_data <- poverty_rate_data |>
1637038421164:filter(STATE != "STATE") |>
1637038421173:mutate(length_state = map_dbl(STATE, str_length)) |> # determine how long string in "STATE" column is
1637038421184:filter(length_state < 100) |> # filter to only include possible state lengths
1637038421195:mutate(STATE = str_replace(STATE, pattern = "D.C.",
1637038421206:replacement = "District of Columbia" ))
1637038433205:#first give column names, filtering out information,
1637038433215:colnames(poverty_rate_data) <- c("STATE", "Total", "Number", "Number_se",
1637038433225:"Percent", "Percent_se")
1637038433290:poverty_rate_data <- poverty_rate_data |>
1637038433299:filter(STATE != "STATE") |>
1637038433309:mutate(length_state = map_dbl(STATE, str_length)) |> # determine how long string in "STATE" column is
1637038433318:filter(length_state < 100) |> # filter to only include possible state lengths
1637038433326:mutate(STATE = str_replace(STATE, pattern = "D.C.",
1637038433335:replacement = "District of Columbia" ))
1637038438165:#first give column names, filtering out information,
1637038438175:colnames(poverty_rate_data) <- c("STATE", "Total", "Number", "Number_se",
1637038438184:"Percent", "Percent_se")
1637038439390:poverty_rate_data <- poverty_rate_data |>
1637038439399:filter(STATE != "STATE") |>
1637038439407:mutate(length_state = map_dbl(STATE, str_length)) |> # determine how long string in "STATE" column is
1637038439415:filter(length_state < 100) |> # filter to only include possible state lengths
1637038439422:mutate(STATE = str_replace(STATE, pattern = "D.C.",
1637038439429:replacement = "District of Columbia" ))
1637038473552:#first give column names, filtering out information,
1637038473563:colnames(poverty_rate_data) <- c("STATE", "Total", "Number", "Number_se",
1637038473573:"Percent", "Percent_se")
1637038473647:poverty_rate_data <- poverty_rate_data |>
1637038473656:filter(STATE != "STATE") |>
1637038473666:mutate(length_state = map_dbl(STATE, str_length)) |> # determine how long string in "STATE" column is
1637038473675:filter(length_state < 100) |> # filter to only include possible state lengths
1637038473684:mutate(STATE = str_replace(STATE, pattern = "D.C.",
1637038473693:replacement = "District of Columbia" ))
1637038478778:poverty_rate_data <- read_xls("data/raw/Poverty/hstpov21.xls", skip=2)
1637038478907:crime_data <- read_lines("data/raw/Crime/CrimeStatebyState.csv",
1637038478916:skip = 2,
1637038478925:skip_empty_rows = TRUE)
1637038478964:save(poverty_rate_data, # poverty data
1637038478973:crime_data, # crime data
1637038478981:file = "data/imported_data_rtc.rda")
1637038481535:#first give column names, filtering out information,
1637038481547:colnames(poverty_rate_data) <- c("STATE", "Total", "Number", "Number_se",
1637038481557:"Percent", "Percent_se")
1637038481605:poverty_rate_data <- poverty_rate_data |>
1637038481616:filter(STATE != "STATE") |>
1637038481626:mutate(length_state = map_dbl(STATE, str_length)) |> # determine how long string in "STATE" column is
1637038481635:filter(length_state < 100) |> # filter to only include possible state lengths
1637038481645:mutate(STATE = str_replace(STATE, pattern = "D.C.",
1637038481654:replacement = "District of Columbia" ))
1637038481740:year_values <- poverty_rate_data |>
1637038481750:filter(str_detect(STATE, "[:digit:]")) |> #we get digits from anywhere in the state column
1637038481760:distinct(STATE) #then only get distinct states
1637038481786:year_values <- rep(pull(year_values, STATE), each = 52) # repeat values from STATE column 52 times each, storing year values of state in its own variable
1637038481803:poverty_rate_data <- poverty_rate_data |>
1637038481813:mutate(year_value = year_values) |> #adding year_values to our data frame
1637038481822:select(-length_state) |> #removing length_state from our data frame
1637038481832:filter(str_detect(STATE, "[:alpha:]")) #only want the state with its respective year
1637038481887:#getting into final format
1637038481896:poverty_rate_data <- poverty_rate_data |>
1637038481908:filter(year_value != "2017") |> #removing a duplicate year
1637038481918:filter(year_value != "2013 (18)") |>
1637038481927:mutate(YEAR = str_sub(year_value, start = 1, end=4)) |>
1637038481936:select(-c(Number, Number_se, Percent_se, Total, year_value)) |> #removing these columns from our data set
1637038481946:rename("VALUE" = Percent) |> #renaming variable
1637038481956:mutate(VARIABLE = "Poverty_rate",
1637038481965:YEAR = as.numeric(YEAR), #turning year into numeric
1637038481974:VALUE = as.numeric(VALUE)) #turning value into numeric
1637038482091:poverty_rate_data
1637039146618:crime_data <- crime_data[-((str_which(crime_data, "The figures shown in this column for the offense of rape were estimated using the legacy UCR definition of rape")-1): length(crime_data)+1)] #where in the crime data we wanted to start extracting data from
1637039146641:n_rows <- 2014-1977+1 # determine how many rows there are for each state, from 2014 all the way back from 1977
1637039146655:rep_cycle <- 4 + n_rows
1637039146667:rep_cycle_cut <- 2 + n_rows
1637039146695:colnames_crime <- (crime_data[4])
1637039146709:# these last 3 specify which rows need to be deleted based on the file format
1637039146719:#delete rows: for every 38 rows which is nrows, we want to skip the three rows in between each data set
1637039146728:delete_rows <- c(seq(from = 2,
1637039146737:to = length(crime_data),
1637039146747:by = rep_cycle),
1637039146766:seq(from = 3,
1637039146779:to = length(crime_data),
1637039146788:by = rep_cycle),
1637039146799:seq(from = 4,
1637039146809:to = length(crime_data),
1637039146819:by = rep_cycle))
1637039146835:sort(delete_rows) # shows which rows are to be deleted
1637039147197:crime_data <- crime_data[-delete_rows]
1637039147234:# extract state labels from data
1637039147244:state_labels <- crime_data[str_which(crime_data, "Estimated crime in ")]
1637039147265:state_labels <- str_remove(state_labels, pattern = "Estimated crime in ")
1637039147281:state_label_order <- rep(state_labels, each = n_rows) # repeat n_rows times
1637039147296:crime_data <- crime_data[-str_which(crime_data, "Estimated crime")]
1637039147335:head(crime_data)
1637039147391:crime_data_sep <- read_csv(I(crime_data), col_names = FALSE) |> #read_csv separates out by columns
1637039147401:select(-X6) # remove random extra-comma column
1637039147541:# get column names for later
1637039147552:colnames(crime_data_sep) <- c("Year",
1637039147563:"Population",
1637039147574:"Violent_crime_total",
1637039147584:"Murder_and_nonnegligent_Manslaughter",
1637039147594:"Legacy_rape",
1637039147603:"Revised_rape",
1637039147613:"Robbery",
1637039147623:"Aggravated_assault")
1637039147659:# add column names in
1637039147669:crime_data_sep <- bind_cols(STATE = state_label_order, crime_data_sep)
1637039164718:# add column names in
1637039164726:crime_data_sep <- bind_cols(STATE = state_label_order, crime_data_sep)
1637046363917:library(OCSdata)
1637046364219:library(tidyverse)
1637046367053:library(pdftools)
1637046367158:library(readxl)
1637046369648:poverty_rate_data <- read_xls("data/raw/Poverty/hstpov21.xls", skip=2)
1637046369792:crime_data <- read_lines("data/raw/Crime/CrimeStatebyState.csv",
1637046369811:skip = 2,
1637046369827:skip_empty_rows = TRUE)
1637046369982:save(poverty_rate_data, # poverty data
1637046370004:crime_data, # crime data
1637046370022:file = "data/imported_data_rtc.rda")
1637046373117:#first give column names, filtering out information,
1637046373149:colnames(poverty_rate_data) <- c("STATE", "Total", "Number", "Number_se",
1637046373176:"Percent", "Percent_se")
1637046373279:poverty_rate_data <- poverty_rate_data |>
1637046373337:filter(STATE != "STATE") |>
1637046373380:mutate(length_state = map_dbl(STATE, str_length)) |> # determine how long string in "STATE" column is
1637046373407:filter(length_state < 100) |> # filter to only include possible state lengths
1637046373432:mutate(STATE = str_replace(STATE, pattern = "D.C.",
1637046373483:replacement = "District of Columbia" ))
1637046373615:year_values <- poverty_rate_data |>
1637046373640:filter(str_detect(STATE, "[:digit:]")) |> #we get digits from anywhere in the state column
1637046373662:distinct(STATE) #then only get distinct states
1637046373699:year_values <- rep(pull(year_values, STATE), each = 52) # repeat values from STATE column 52 times each, storing year values of state in its own variable
1637046373727:poverty_rate_data <- poverty_rate_data |>
1637046373757:mutate(year_value = year_values) |> #adding year_values to our data frame
1637046373784:select(-length_state) |> #removing length_state from our data frame
1637046373811:filter(str_detect(STATE, "[:alpha:]")) #only want the state with its respective year
1637046373874:#getting into final format
1637046373898:poverty_rate_data <- poverty_rate_data |>
1637046373921:filter(year_value != "2017") |> #removing a duplicate year
1637046373939:filter(year_value != "2013 (18)") |>
1637046373957:mutate(YEAR = str_sub(year_value, start = 1, end=4)) |>
1637046373975:select(-c(Number, Number_se, Percent_se, Total, year_value)) |> #removing these columns from our data set
1637046373997:rename("VALUE" = Percent) |> #renaming variable
1637046374018:mutate(VARIABLE = "Poverty_rate",
1637046374043:YEAR = as.numeric(YEAR), #turning year into numeric
1637046374060:VALUE = as.numeric(VALUE)) #turning value into numeric
1637046374118:poverty_rate_data
1637046377518:crime_data <- crime_data[-((str_which(crime_data, "The figures shown in this column for the offense of rape were estimated using the legacy UCR definition of rape")-1): length(crime_data)+1)] #where in the crime data we wanted to start extracting data from
1637046377568:n_rows <- 2014-1977+1 # determine how many rows there are for each state, from 2014 all the way back from 1977
1637046377593:rep_cycle <- 4 + n_rows
1637046377617:rep_cycle_cut <- 2 + n_rows
1637046377634:colnames_crime <- (crime_data[4])
1637046377659:# these last 3 specify which rows need to be deleted based on the file format
1637046377683:#delete rows: for every 38 rows which is nrows, we want to skip the three rows in between each data set
1637046377710:delete_rows <- c(seq(from = 2,
1637046377742:to = length(crime_data),
1637046377767:by = rep_cycle),
1637046377791:seq(from = 3,
1637046377812:to = length(crime_data),
1637046377845:by = rep_cycle),
1637046377869:seq(from = 4,
1637046377889:to = length(crime_data),
1637046377906:by = rep_cycle))
1637046377932:sort(delete_rows) # shows which rows are to be deleted
1637046379095:crime_data <- crime_data[-delete_rows]
1637046379125:# extract state labels from data
1637046379141:state_labels <- crime_data[str_which(crime_data, "Estimated crime in ")]
1637046379169:state_labels <- str_remove(state_labels, pattern = "Estimated crime in ")
1637046379193:state_label_order <- rep(state_labels, each = n_rows) # repeat n_rows times
1637046379216:crime_data <- crime_data[-str_which(crime_data, "Estimated crime")]
1637046379249:head(crime_data)
1637046379346:crime_data_sep <- read_csv(I(crime_data), col_names = FALSE) |> #read_csv separates out by columns
1637046379364:select(-X6) # remove random extra-comma column
1637046379489:# get column names for later
1637046379512:colnames(crime_data_sep) <- c("Year",
1637046379534:"Population",
1637046379553:"Violent_crime_total",
1637046379592:"Murder_and_nonnegligent_Manslaughter",
1637046379608:"Legacy_rape",
1637046379628:"Revised_rape",
1637046379655:"Robbery",
1637046379686:"Aggravated_assault")
1637046379798:# add column names in
1637046379814:crime_data_sep <- bind_cols(STATE = state_label_order, crime_data_sep)
1637046413155:crime_data_sep <- bind_cols(STATE = state_label_order, crime_data_sep)
1637046510144:crime_data <- crime_data_sep |>
1637046510156:mutate(VARIABLE = "Viol_crime_count") |>
1637046510167:rename("VALUE" = Violent_crime_total) |>
1637046510197:rename("YEAR" = Year) |>
1637046510211:select(YEAR,STATE, VARIABLE, VALUE)
1637046554145:View(state_label_order)
1637046576259:View(crime_data_sep)
1637046644663:crime_data_sep <- crime_data_sep |>
1637046684203:na.omit(crime_data_sep)
1637046700556:na.omit(crime_data_sep
1637046706439:crime_data_sep <- crime_data_sep |>
1637046713535:crime_data_sep <- crime_data_sep |>
1637046713548:na.omit(crime_data_sep)
1637046716258:# add column names in
1637046716271:crime_data_sep <- bind_cols(STATE = state_label_order, crime_data_sep)
1637046718279:crime_data <- crime_data_sep |>
1637046718299:mutate(VARIABLE = "Viol_crime_count") |>
1637046718312:rename("VALUE" = Violent_crime_total) |>
1637046718329:rename("YEAR" = Year) |>
1637046718347:select(YEAR,STATE, VARIABLE, VALUE)
1637046719327:crime_data
